{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-constants.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/componente/usuario/usuario-add/usuario-add.component.ts","webpack:///src/app/componente/usuario/usuario-add/usuario-add.component.html","webpack:///src/app/componente/usuario/usuario/usuario.component.ts","webpack:///src/app/componente/usuario/usuario/usuario.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/model/User.ts","webpack:///src/app/service/guardiao.guard.ts","webpack:///src/app/service/header-interceptor.ts","webpack:///src/app/service/login-service.service.ts","webpack:///src/app/service/usuario.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppConstants","baseServidor","AppComponent","router","title","localStorage","getItem","navigate","clear","toString","trim","sair","selector","templateUrl","styleUrls","appRouters","path","component","canActivate","routes","forRoot","AppModule","declarations","imports","providers","bootstrap","UsuarioAddComponent","routeActive","userService","usuario","snapshot","paramMap","get","getStudant","subscribe","data","idUsuario","updateUsuario","novo","console","info","salvarUsuario","salvarUser","UsuarioComponent","usuarioService","getStudentList","students","confirm","deletarUsuario","log","consultarUser","nome","HomeComponent","LoginComponent","loginService","login","senha","User","GuardiaoGuard","userServcice","next","state","userAutenticado","providedIn","HeaderInterceptorService","token","tokenRequest","clone","headers","set","handle","pipe","event","status","processaError","error","errorMessage","ErrorEvent","window","alert","HttpInterceptorModule","provide","useClass","multi","LoginServiceService","http","post","baseLogin","JSON","stringify","parse","Authorization","split","setItem","UsuarioService","baseUrl","responseType","user","put","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export class AppConstants {\n\n\tpublic static get baseServidor(): string { return \"http://localhost:8080/\" }\n\n\tpublic static get baseLogin(): string { return this.baseServidor + \"controlirrigationapi/login\" }\n\n\tpublic static get baseUrl(): string {return this.baseServidor + \"controlirrigationapi/usuario/\"}\n\n\t\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  title = 'Curso-Angular-REST';\n\n\n  constructor(private router: Router) {\n\n  }\n\n  ngOnInit(): void {\n\n    if (localStorage.getItem('token') == null) {\n      this.router.navigate(['login']);\n    }\n\n  }\n\n  public sair() {\n    localStorage.clear();\n    this.router.navigate(['login']);\n  }\n\n\n  public esconderBarrar() {\n\n    if (localStorage.getItem('token') !== null &&\n      localStorage.getItem('token').toString().trim() !== null) {\n      return false;\n    } else {\n      return true;\n    }\n\n  }\n\n\n}\n","\n<div id=\"page-content-wrapper\" >\n<nav class=\"navbar navbar-expand-lg navbar-light bg-light\" [hidden]=\"esconderBarrar()\">\n\t\t \n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" [routerLink]=\"['/home']\" routerLinkActive=\"router-link-active\" >Home</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" (click)=\"sair()\">Sair</a> \n      </li>\n      <li class=\"nav-item dropdown\">\n        <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n         Menu\n        </a>\n        <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n           <a class=\"dropdown-item\" [routerLink]=\"['/userList']\" routerLinkActive=\"router-link-active\" >Usuario</a>\n          <a class=\"dropdown-item\" href=\"#\">Link 2</a>\n          <div class=\"dropdown-divider\"></div>\n          <a class=\"dropdown-item\" href=\"#\">Link 3</a>\n        </div>\n      </li>\n    </ul>\n  </div>\n</nav>\n<router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { AppComponent } from './app.component';\nimport { FormsModule, } from '@angular/forms'\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HomeComponent } from './home/home.component'; /*Requisi��es Ajax*/\nimport { RouterModule, Routes } from '@angular/router'\nimport { ModuleWithProviders } from '@angular/compiler/src/core';\nimport { LoginComponent } from './login/login.component';\nimport { UsuarioComponent } from './componente/usuario/usuario/usuario.component';\nimport { HttpInterceptorModule } from './service/header-interceptor';\nimport { UsuarioAddComponent } from './componente/usuario/usuario-add/usuario-add.component';\nimport { GuardiaoGuard } from './service/guardiao.guard';\n\nexport const appRouters: Routes = [\n\n  { path: 'home', component: HomeComponent, canActivate: [GuardiaoGuard] },\n  { path: 'login', component: LoginComponent },\n  { path: '', component: LoginComponent },\n  { path: 'userList', component: UsuarioComponent, canActivate: [GuardiaoGuard] },\n  {path: 'usuarioAdd', component : UsuarioAddComponent, canActivate: [GuardiaoGuard]},\n  {path: 'usuarioAdd/:id', component : UsuarioAddComponent, canActivate: [GuardiaoGuard]},\n];\n\nexport const routes: ModuleWithProviders = RouterModule.forRoot(appRouters);\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    LoginComponent,\n    UsuarioComponent,\n    UsuarioAddComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    routes,\n    HttpInterceptorModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { User } from 'src/app/model/User';\nimport { UsuarioService } from 'src/app/service/usuario.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './usuario-add.component.html',\n  styleUrls: ['./usuario-add.component.css']\n})\nexport class UsuarioAddComponent implements OnInit {\n\n  usuario = new User();\n\n  constructor(private routeActive: ActivatedRoute, private userService: UsuarioService) { }\n\n  ngOnInit() {\n    let id = this.routeActive.snapshot.paramMap.get('id');\n\n    if (id != null) {\n      this.userService.getStudant(id).subscribe(data => {\n        this.usuario = data;\n      });\n    }\n\n  }\n\n\n  salvarUser() {\n    if (this.usuario.idUsuario != null && this.usuario.idUsuario.toString().trim() != null) { /* Atualizando ou Editando*/\n      this.userService.updateUsuario(this.usuario).subscribe(data => {\n        this.novo();\n        console.info(\"User Atualizado: \" + data);\n      });\n    } else {\n      this.userService.salvarUsuario(this.usuario).subscribe(data => { /*Salvando um novo User */\n        this.novo();\n        console.info(\"Gravou User: \" + data);\n      });\n    }\n  }\n\n  novo() {\n    this.usuario = new User();\n  }\n\n}\n","<h3 style=\"padding: 10px;\">Tela de usuario</h3>\n\n<form style=\"padding: 10px\" #formValidate=\"ngForm\">\n\n  <div class=\"form-row\">\n    <div class=\"form-group col-md-1\">\n      <label for=\"id\">ID</label>\n      <input type=\"text\" [(ngModel)]=\"usuario.idUsuario\" class=\"form-control\" id=\"idUsuario\" readonly=\"true\" name=\"idUsuario\" autocomplete=\"false\">\n      \n    </div>\n  </div>\n\n  <div class=\"form-row\">\n    <div class=\"form-group col-md-12\">\n      <label for=\"nome\">Nome</label>\n      <span style=\"color: red; font-size: 23px;\" *ngIf=\"nomeValidate.invalid\"> *</span>\n      <input type=\"text\" [(ngModel)]=\"usuario.nome\" #nomeValidate=\"ngModel\" class=\"form-control\" id=\"nome\" required=\"true\" name=\"nome\" autocomplete=\"false\">\n  \n    </div>\n  </div>\n\n  <div class=\"form-row\">\n    <div class=\"form-group col-md-6\">\n      <label for=\"login\">E-mail ou login</label>\n      <span style=\"color: red; font-size: 23px;\" *ngIf=\"loginValidate.invalid\"> *</span>\n      <input type=\"text\" [(ngModel)]=\"usuario.login\" #loginValidate=\"ngModel\" class=\"form-control\" id=\"login\" name=\"login\" required=\"true\" autocomplete=\"false\">\n    </div>\n\n\n    <div class=\"form-group col-md-6\">\n      <label for=\"senha\">Senha</label>\n      <span style=\"color: red; font-size: 23px;\" *ngIf=\"senhaValidate.invalid\"> *</span>\n      <input type=\"password\" [(ngModel)]=\"usuario.senha\" #senhaValidate=\"ngModel\" class=\"form-control\" id=\"senha\" name=\"senha\" required=\"true\" autocomplete=\"false\">\n    </div>\n\n  </div>\n\n  <div class=\"form-row\">\n    <div class=\"form-group col-md-6\">\n        <button type=\"button\" class=\"btn btn-primary\" [routerLink]=\"['/userList']\" routerLinkActive=\"router-link-active\" >Voltar</button>\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"novo()\"  style=\"margin-left: 10px;\">Novo</button>\n        <button type=\"button\" class=\"btn btn-primary\" [disabled]=\"formValidate.invalid\" (click)=\"salvarUser()\"  style=\"margin-left: 10px;\">Salvar</button>\n    </div>\n  </div>\n\n</form>","import { Component, OnInit } from '@angular/core';\nimport { UsuarioService } from 'src/app/service/usuario.service';\nimport { Observable } from 'rxjs';\nimport { User } from 'src/app/model/User';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './usuario.component.html',\n  styleUrls: ['./usuario.component.css']\n})\nexport class UsuarioComponent implements OnInit {\n\n  students: Observable<User[]>;\n  nome: String;\n\n\n  constructor(private usuarioService: UsuarioService) { }\n\n  ngOnInit() {\n\n    this.usuarioService.getStudentList().subscribe(data => {\n      this.students = data;\n    });\n\n  }\n\n\n  deleteUsuario(id: Number) {\n\n    if (confirm('Deseja mesmo remover?')) {\n\n      this.usuarioService.deletarUsuario(id).subscribe(data => {\n        console.log(\"Retorno do método delete : \" + data);\n        this.usuarioService.getStudentList().subscribe(data => {\n          this.students = data;\n        });\n      });\n    }\n  }\n\n  consultarUser() {\n    this.usuarioService.consultarUser(this.nome).subscribe(data => {\n      this.students = data;\n    });\n  }\n\n\n}\n","<br/>\n<br/>\n\n<form class=\"form-inline\">\n  <div class=\"form-group mx-sm-3 mb-2\">\n    <input type=\"text\" class=\"form-control\" id=\"nome\" name=\"nome\" [(ngModel)]=\"nome\" placeholder=\"Pesquisa por nome\">\n  </div>\n\n  <button type=\"button\" (click)=\"consultarUser()\"  class=\"btn btn-primary mb-2\">Buscar</button>\n\n\n  <button type=\"button\" [routerLink]=\"['/usuarioAdd']\" routerLinkActive=\"router-link-active\" style=\"margin-left: 5px;\"    class=\"btn btn-success mb-2\">Novo</button>\n  \n</form>\n\n<br/>\n<br/>\n\n<table class=\"table\">\n  <thead class=\"thread-dark\">\n    <tr>\n      <th scope=\"col\">ID</th>\n      <th scope=\"col\">Nome</th>\n      <th scope=\"col\">Login</th>\n      <th scope=\"col\">Delete</th>\n      <th scope=\"col\">Editar</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let student of students \">  \n      <td>{{student.idUsuario}}</td>\n      <td>{{student.nome}}</td>\n      <td>{{student.login}}</td>\n      <td><button (click)=\"deleteUsuario(student.idUsuario)\" class=\"btn btn-primary\">Delete</button></td>\n       <td><button [routerLink]=\"['/usuarioAdd', student.idUsuario]\" routerLinkActive=\"router-link-active\"   class=\"btn btn-warning\">Editar</button></td>\n\n    </tr>\n  </tbody>\n</table>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>P�gime home do nosso projeto Angular 8</p>\n","import { Component, OnInit } from '@angular/core';\nimport { LoginServiceService } from '../service/login-service.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  usuario = { login: '', senha: '' };\n\n  constructor(private loginService: LoginServiceService, private router: Router) { }\n\n\n  public login() {\n    this.loginService.login(this.usuario);\n  }\n\n\n  ngOnInit() {\n    if (localStorage.getItem('token') !== null &&\n      localStorage.getItem('token').toString().trim() !== null) {\n      this.router.navigate(['home']);\n    }\n  }\n\n}\n","\n<form >\n\n  <div class=\"form-group\"> \n\n     <h3>Login do sistema</h3>\n  </div> \n\n  <div class=\"form-group\">  \n    <label for=\"login\">E-mail:</label>\n    <input type=\"email\" class=\"form-control\" #email=\"ngModel\"  [(ngModel)] = \"usuario.login\"  id=\"login\" name=\"login\"   required>\n    <div *ngIf=\"email.invalid\" class=\"alert alert-danger\">\n       Login deve ser informado\n    </div>\n\n  </div>\n\n  <div class=\"form-group\"> \n    <label for=\"senha\">Senha:</label>\n    <input type=\"password\" class=\"form-control\" #senha=\"ngModel\"  [(ngModel)]=\"usuario.senha\" id=\"senha\" name=\"senha\"  required>\n     <div *ngIf=\"senha.invalid\" class=\"alert alert-danger\">\n       Senha deve ser informada\n    </div>\n  </div>\n\n  <button type=\"button\" [disabled]=\"email.invalid || senha.invalid\" class=\"btn btn-primary\" (click)=\"login()\"  >Acessar</button>\n</form>","export class User {\n\tidUsuario: Number;\n\tlogin: String;\n\tsenha: String;\n\tnome: String;\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { UsuarioService } from './usuario.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GuardiaoGuard implements CanActivate {\n\n\n  constructor(private userServcice: UsuarioService) {\n\n  }\n\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return this.userServcice.userAutenticado();\n  }\n\n}\n","import { Injectable, NgModule } from '@angular/core';\nimport { HttpInterceptor, HTTP_INTERCEPTORS, HttpErrorResponse, HttpEvent, HttpResponse } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\n\n\n@Injectable()\nexport class HeaderInterceptorService implements HttpInterceptor {\n\n  intercept(req: import(\"@angular/common/http\").HttpRequest<any>, next: import(\"@angular/common/http\").HttpHandler): import(\"rxjs\").Observable<import(\"@angular/common/http\").HttpEvent<any>> {\n\n    if (localStorage.getItem('token') !== null) {\n      const token = 'Bearer ' + localStorage.getItem('token');\n\n      const tokenRequest = req.clone({\n        headers: req.headers.set('Authorization', token)\n      });\n\n      return next.handle(tokenRequest).pipe(\n\n        tap((event: HttpEvent<any>) => {\n          if (event instanceof HttpResponse && (event.status === 200 || event.status === 201)) {\n            console.info('Sucesso na operação');\n          }\n        })\n\n        , catchError(this.processaError));\n    } else {\n      return next.handle(req).pipe(catchError(this.processaError));\n    }\n\n  }\n\n  constructor() { }\n\n\n  processaError(error: HttpErrorResponse) {\n    let errorMessage = 'Erro desconhecido';\n    if (error.error instanceof ErrorEvent) {\n      console.error(error.error);\n      errorMessage = 'Error: ' + error.error.error;\n    } else {\n      errorMessage = 'Código: ' + error.error.code + '\\nMensagem: ' + error.error.error;\n    }\n    window.alert(errorMessage)\n    return throwError(errorMessage);\n  }\n\n}\n\n@NgModule({\n  providers: [{\n    provide: HTTP_INTERCEPTORS,\n    useClass: HeaderInterceptorService,\n    multi: true,\n  },\n  ],\n})\n\nexport class HttpInterceptorModule {\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AppConstants } from '../app-constants';\nimport {Router} from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginServiceService {\n  \n\n  constructor(private http: HttpClient, private router: Router) { }\n\n    login(usuario){\n       \n       return this.http.post(AppConstants.baseLogin ,JSON.stringify(usuario)).subscribe(data => {\n\n          /*Retorno Http*/ \n\n          var token = JSON.parse(JSON.stringify(data)).Authorization.split(' ')[1];\n\n          localStorage.setItem(\"token\", token);\n\n          console.info(\"Tohken: \" + localStorage.getItem(\"token\"));\n\n          this.router.navigate(['home']);\n\n\n       },\n         error => {\n      \n          console.error(\"Erro ao fazer login \");\n          alert('Acesso Negado!')\n         }\n       );\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AppConstants } from '../app-constants';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsuarioService {\n\n\n  constructor(private http: HttpClient) {\n  }\n\n  getStudentList(): Observable<any> {\n    return this.http.get<any>(AppConstants.baseUrl);\n  }\n\n  getStudant(id): Observable<any> {\n    return this.http.get<any>(AppConstants.baseUrl + id);\n  }\n\n\n  deletarUsuario(id: Number): Observable<any> {\n    return this.http.delete(AppConstants.baseUrl + id, { responseType: 'text' });\n  }\n\n\n  //http://localhost:8080/cursospringrestapi/usuario/usuarioPorNome/alex\n  consultarUser(nome: String): Observable<any> {\n    return this.http.get(AppConstants.baseUrl + \"usuarioPorNome/\" + nome);\n\n  }\n\n  salvarUsuario(user): Observable<any> {\n    return this.http.post<any>(AppConstants.baseUrl, user);\n  }\n\n  updateUsuario(user): Observable<any> {\n    return this.http.put<any>(AppConstants.baseUrl, user);\n  }\n\n  userAutenticado() {\n\n    if (localStorage.getItem('token') !== null &&\n      localStorage.getItem('token').toString().trim() !== null) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}