import { __decorate } from "tslib";
import { NgModule } from '@angular/core';
import { NgChartjsDirective } from './ng-chartjs.directive';
import { NgChartjsCustomPluginToken } from './plugin-token';
import { PluginConfig } from './plugins-config';
import { NgChartjsService } from './ng-chartjs.service';
import * as ɵngcc0 from '@angular/core';
export function ngChartjsCustomPluginsFactory(plugins) {
    var pluginConfig = new PluginConfig();
    pluginConfig.plugins = plugins;
    return pluginConfig;
}
var NgChartjsModule = /** @class */ (function () {
    function NgChartjsModule() {
    }
    NgChartjsModule_1 = NgChartjsModule;
    /**
     * Register a plugin.
     * @param plugin
     */
    NgChartjsModule.registerPlugin = function (plugins) {
        if (plugins === void 0) { plugins = []; }
        return {
            ngModule: NgChartjsModule_1,
            providers: [
                {
                    provide: NgChartjsCustomPluginToken,
                    useValue: plugins
                },
                {
                    deps: [NgChartjsCustomPluginToken],
                    provide: PluginConfig,
                    useFactory: ngChartjsCustomPluginsFactory
                }
            ]
        };
    };
    var NgChartjsModule_1;
NgChartjsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgChartjsModule });
NgChartjsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgChartjsModule_Factory(t) { return new (t || NgChartjsModule)(); }, providers: [NgChartjsService], imports: [[]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgChartjsModule, { declarations: function () { return [NgChartjsDirective]; }, exports: function () { return [NgChartjsDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgChartjsModule, [{
        type: NgModule,
        args: [{
                imports: [],
                declarations: [NgChartjsDirective],
                exports: [NgChartjsDirective],
                providers: [NgChartjsService]
            }]
    }], function () { return []; }, null); })();
    return NgChartjsModule;
}());
export { NgChartjsModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmctY2hhcnRqcy5tb2R1bGUuanMiLCJzb3VyY2VzIjpbIm5nOi9uZy1jaGFydGpzL2xpYi9uZy1jaGFydGpzLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBMkMsTUFBTSxlQUFlLENBQUM7QUFDbEYsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDNUQsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDNUQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ2hELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDOztBQUV4RCxNQUFNLFVBQVUsNkJBQTZCLENBQUMsT0FBYztJQUMxRCxJQUFNLFlBQVksR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO0lBQ3hDLFlBQVksQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDO0lBQy9CLE9BQU8sWUFBWSxDQUFDO0FBQ3RCLENBQUM7QUFRRDtJQUFBO0lBcUJBLENBQUM7d0JBckJZLGVBQWU7SUFDMUI7OztPQUdHO0lBQ1csOEJBQWMsR0FBNUIsVUFBNkIsT0FBbUI7UUFBbkIsd0JBQUEsRUFBQSxZQUFtQjtRQUM5QyxPQUFPO1lBQ0wsUUFBUSxFQUFFLGlCQUFlO1lBQ3pCLFNBQVMsRUFBRTtnQkFDVDtvQkFDRSxPQUFPLEVBQUUsMEJBQTBCO29CQUNuQyxRQUFRLEVBQUUsT0FBTztpQkFDbEI7Z0JBQ0Q7b0JBQ0UsSUFBSSxFQUFFLENBQUMsMEJBQTBCLENBQUM7b0JBQ2xDLE9BQU8sRUFBRyxZQUFZO29CQUN0QixVQUFVLEVBQUUsNkJBQTZCO2lCQUMxQzthQUNGO1NBQ0YsQ0FBQztJQUNKLENBQUM7MEJBRXNCO0lBdEJaLGVBQWUsNENBTjNCLFFBQVEsQ0FBQztXQUNSLE9BQU8sRUFBRSxFQUFFLGNBQ1gsWUFBWSxFQUFFLENBQUMsa0JBQWtCLENBQUMsY0FDbEMsT0FBTyxFQUFFLENBQUMsa0JBQWtCLENBQUMsY0FDN0IsU0FBUyxFQUFFLENBQUMsZ0JBQWdCLENBQUMsVUFDOUIsQ0FBQyxRQUNXO0tBQWUsQ0FxQjNCOzs7Ozs7Ozs7Z0RBQ0Q7SUFEQSxzQkFBQztDQUFBLEFBckJELElBcUJDO1NBckJZLGVBQWUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSwgTW9kdWxlV2l0aFByb3ZpZGVycywgT3B0aW9uYWwsIFNraXBTZWxmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOZ0NoYXJ0anNEaXJlY3RpdmUgfSBmcm9tICcuL25nLWNoYXJ0anMuZGlyZWN0aXZlJztcbmltcG9ydCB7IE5nQ2hhcnRqc0N1c3RvbVBsdWdpblRva2VuIH0gZnJvbSAnLi9wbHVnaW4tdG9rZW4nO1xuaW1wb3J0IHsgUGx1Z2luQ29uZmlnIH0gZnJvbSAnLi9wbHVnaW5zLWNvbmZpZyc7XG5pbXBvcnQgeyBOZ0NoYXJ0anNTZXJ2aWNlIH0gZnJvbSAnLi9uZy1jaGFydGpzLnNlcnZpY2UnO1xuXG5leHBvcnQgZnVuY3Rpb24gbmdDaGFydGpzQ3VzdG9tUGx1Z2luc0ZhY3RvcnkocGx1Z2luczogYW55W10pOiBQbHVnaW5Db25maWcge1xuICBjb25zdCBwbHVnaW5Db25maWcgPSBuZXcgUGx1Z2luQ29uZmlnKCk7XG4gIHBsdWdpbkNvbmZpZy5wbHVnaW5zID0gcGx1Z2lucztcbiAgcmV0dXJuIHBsdWdpbkNvbmZpZztcbn1cblxuQE5nTW9kdWxlKHtcbiAgaW1wb3J0czogW10sXG4gIGRlY2xhcmF0aW9uczogW05nQ2hhcnRqc0RpcmVjdGl2ZV0sXG4gIGV4cG9ydHM6IFtOZ0NoYXJ0anNEaXJlY3RpdmVdLFxuICBwcm92aWRlcnM6IFtOZ0NoYXJ0anNTZXJ2aWNlXVxufSlcbmV4cG9ydCBjbGFzcyBOZ0NoYXJ0anNNb2R1bGUge1xuICAvKipcbiAgICogUmVnaXN0ZXIgYSBwbHVnaW4uXG4gICAqIEBwYXJhbSBwbHVnaW5cbiAgICovXG4gIHB1YmxpYyBzdGF0aWMgcmVnaXN0ZXJQbHVnaW4ocGx1Z2luczogYW55W10gPSBbXSk6IE1vZHVsZVdpdGhQcm92aWRlcnM8TmdDaGFydGpzTW9kdWxlPiB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5nTW9kdWxlOiBOZ0NoYXJ0anNNb2R1bGUsXG4gICAgICBwcm92aWRlcnM6IFtcbiAgICAgICAge1xuICAgICAgICAgIHByb3ZpZGU6IE5nQ2hhcnRqc0N1c3RvbVBsdWdpblRva2VuLFxuICAgICAgICAgIHVzZVZhbHVlOiBwbHVnaW5zXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBkZXBzOiBbTmdDaGFydGpzQ3VzdG9tUGx1Z2luVG9rZW5dLFxuICAgICAgICAgIHByb3ZpZGU6ICBQbHVnaW5Db25maWcsXG4gICAgICAgICAgdXNlRmFjdG9yeTogbmdDaGFydGpzQ3VzdG9tUGx1Z2luc0ZhY3RvcnlcbiAgICAgICAgfVxuICAgICAgXVxuICAgIH07XG4gIH1cbn1cbiJdfQ==