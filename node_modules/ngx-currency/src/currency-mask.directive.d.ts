import { AfterViewInit, DoCheck, ElementRef, KeyValueDiffer, KeyValueDiffers, OnInit } from "@angular/core";
import { ControlValueAccessor } from "@angular/forms";
import { CurrencyMaskConfig } from "./currency-mask.config";
import { InputHandler } from "./input.handler";
import * as ɵngcc0 from '@angular/core';
export declare const CURRENCYMASKDIRECTIVE_VALUE_ACCESSOR: any;
export declare class CurrencyMaskDirective implements AfterViewInit, ControlValueAccessor, DoCheck, OnInit {
    private currencyMaskConfig;
    private elementRef;
    private keyValueDiffers;
    options: Partial<CurrencyMaskConfig>;
    inputHandler: InputHandler;
    keyValueDiffer: KeyValueDiffer<any, any>;
    optionsTemplate: {
        align: string;
        allowNegative: boolean;
        allowZero: boolean;
        decimal: string;
        precision: number;
        prefix: string;
        suffix: string;
        thousands: string;
        nullable: boolean;
    };
    constructor(currencyMaskConfig: CurrencyMaskConfig, elementRef: ElementRef, keyValueDiffers: KeyValueDiffers);
    ngAfterViewInit(): void;
    ngDoCheck(): void;
    ngOnInit(): void;
    handleBlur(event: any): void;
    handleCut(event: any): void;
    handleInput(event: any): void;
    handleKeydown(event: any): void;
    handleKeypress(event: any): void;
    handlePaste(event: any): void;
    isChromeAndroid(): boolean;
    registerOnChange(callbackFunction: Function): void;
    registerOnTouched(callbackFunction: Function): void;
    setDisabledState(value: boolean): void;
    writeValue(value: number): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<CurrencyMaskDirective>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<CurrencyMaskDirective, "[currencyMask]", never, {
    "options": "options";
}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3VycmVuY3ktbWFzay5kaXJlY3RpdmUuZC50cyIsInNvdXJjZXMiOlsiY3VycmVuY3ktbWFzay5kaXJlY3RpdmUuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7QUFJQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFrQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBZnRlclZpZXdJbml0LCBEb0NoZWNrLCBFbGVtZW50UmVmLCBLZXlWYWx1ZURpZmZlciwgS2V5VmFsdWVEaWZmZXJzLCBPbkluaXQgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgQ29udHJvbFZhbHVlQWNjZXNzb3IgfSBmcm9tIFwiQGFuZ3VsYXIvZm9ybXNcIjtcbmltcG9ydCB7IEN1cnJlbmN5TWFza0NvbmZpZyB9IGZyb20gXCIuL2N1cnJlbmN5LW1hc2suY29uZmlnXCI7XG5pbXBvcnQgeyBJbnB1dEhhbmRsZXIgfSBmcm9tIFwiLi9pbnB1dC5oYW5kbGVyXCI7XG5leHBvcnQgZGVjbGFyZSBjb25zdCBDVVJSRU5DWU1BU0tESVJFQ1RJVkVfVkFMVUVfQUNDRVNTT1I6IGFueTtcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEN1cnJlbmN5TWFza0RpcmVjdGl2ZSBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQsIENvbnRyb2xWYWx1ZUFjY2Vzc29yLCBEb0NoZWNrLCBPbkluaXQge1xuICAgIHByaXZhdGUgY3VycmVuY3lNYXNrQ29uZmlnO1xuICAgIHByaXZhdGUgZWxlbWVudFJlZjtcbiAgICBwcml2YXRlIGtleVZhbHVlRGlmZmVycztcbiAgICBvcHRpb25zOiBQYXJ0aWFsPEN1cnJlbmN5TWFza0NvbmZpZz47XG4gICAgaW5wdXRIYW5kbGVyOiBJbnB1dEhhbmRsZXI7XG4gICAga2V5VmFsdWVEaWZmZXI6IEtleVZhbHVlRGlmZmVyPGFueSwgYW55PjtcbiAgICBvcHRpb25zVGVtcGxhdGU6IHtcbiAgICAgICAgYWxpZ246IHN0cmluZztcbiAgICAgICAgYWxsb3dOZWdhdGl2ZTogYm9vbGVhbjtcbiAgICAgICAgYWxsb3daZXJvOiBib29sZWFuO1xuICAgICAgICBkZWNpbWFsOiBzdHJpbmc7XG4gICAgICAgIHByZWNpc2lvbjogbnVtYmVyO1xuICAgICAgICBwcmVmaXg6IHN0cmluZztcbiAgICAgICAgc3VmZml4OiBzdHJpbmc7XG4gICAgICAgIHRob3VzYW5kczogc3RyaW5nO1xuICAgICAgICBudWxsYWJsZTogYm9vbGVhbjtcbiAgICB9O1xuICAgIGNvbnN0cnVjdG9yKGN1cnJlbmN5TWFza0NvbmZpZzogQ3VycmVuY3lNYXNrQ29uZmlnLCBlbGVtZW50UmVmOiBFbGVtZW50UmVmLCBrZXlWYWx1ZURpZmZlcnM6IEtleVZhbHVlRGlmZmVycyk7XG4gICAgbmdBZnRlclZpZXdJbml0KCk6IHZvaWQ7XG4gICAgbmdEb0NoZWNrKCk6IHZvaWQ7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBoYW5kbGVCbHVyKGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIGhhbmRsZUN1dChldmVudDogYW55KTogdm9pZDtcbiAgICBoYW5kbGVJbnB1dChldmVudDogYW55KTogdm9pZDtcbiAgICBoYW5kbGVLZXlkb3duKGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIGhhbmRsZUtleXByZXNzKGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIGhhbmRsZVBhc3RlKGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIGlzQ2hyb21lQW5kcm9pZCgpOiBib29sZWFuO1xuICAgIHJlZ2lzdGVyT25DaGFuZ2UoY2FsbGJhY2tGdW5jdGlvbjogRnVuY3Rpb24pOiB2b2lkO1xuICAgIHJlZ2lzdGVyT25Ub3VjaGVkKGNhbGxiYWNrRnVuY3Rpb246IEZ1bmN0aW9uKTogdm9pZDtcbiAgICBzZXREaXNhYmxlZFN0YXRlKHZhbHVlOiBib29sZWFuKTogdm9pZDtcbiAgICB3cml0ZVZhbHVlKHZhbHVlOiBudW1iZXIpOiB2b2lkO1xufVxuIl19