{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-constants.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/componente/cultura/cultura-add/cultura-add.component.ts","webpack:///src/app/componente/cultura/cultura-add/cultura-add.component.html","webpack:///src/app/componente/cultura/cultura.component.ts","webpack:///src/app/componente/cultura/cultura.component.html","webpack:///src/app/componente/dados-diarios/clima/clima-add/clima-add.component.ts","webpack:///src/app/componente/dados-diarios/clima/clima-add/clima-add.component.html","webpack:///src/app/componente/dados-diarios/clima/clima/clima.component.ts","webpack:///src/app/componente/dados-diarios/clima/clima/clima.component.html","webpack:///src/app/componente/dados-diarios/irrigacao/irrigacao-add/irrigacao-add.component.ts","webpack:///src/app/componente/dados-diarios/irrigacao/irrigacao-add/irrigacao-add.component.html","webpack:///src/app/componente/dados-diarios/irrigacao/irrigacao/irrigacao.component.ts","webpack:///src/app/componente/dados-diarios/irrigacao/irrigacao/irrigacao.component.html","webpack:///src/app/componente/equipamentos/gotejador/gotejador-add/gotejador-add.component.ts","webpack:///src/app/componente/equipamentos/gotejador/gotejador-add/gotejador-add.component.html","webpack:///src/app/componente/equipamentos/gotejador/gotejador/gotejador.component.ts","webpack:///src/app/componente/equipamentos/gotejador/gotejador/gotejador.component.html","webpack:///src/app/componente/equipamentos/outorga/outorga-add/outorga-add.component.ts","webpack:///src/app/componente/equipamentos/outorga/outorga-add/outorga-add.component.html","webpack:///src/app/componente/equipamentos/outorga/outorga/outorga.component.ts","webpack:///src/app/componente/equipamentos/outorga/outorga/outorga.component.html","webpack:///src/app/componente/fazenda/fazenda-add/fazenda-add.component.ts","webpack:///src/app/componente/fazenda/fazenda-add/fazenda-add.component.html","webpack:///src/app/componente/fazenda/fazenda/fazenda.component.ts","webpack:///src/app/componente/fazenda/fazenda/fazenda.component.html","webpack:///src/app/componente/usuario/usuario-add/usuario-add.component.ts","webpack:///src/app/componente/usuario/usuario-add/usuario-add.component.html","webpack:///src/app/componente/usuario/usuario/usuario.component.ts","webpack:///src/app/componente/usuario/usuario/usuario.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/model/Clima.ts","webpack:///src/app/model/Cultura.ts","webpack:///src/app/model/CulturaFase.ts","webpack:///src/app/model/Fazenda.ts","webpack:///src/app/model/Gotejador.ts","webpack:///src/app/model/Outorga.ts","webpack:///src/app/model/OutorgaFase.ts","webpack:///src/app/model/Telefone.ts","webpack:///src/app/model/User.ts","webpack:///src/app/service/clima.service.ts","webpack:///src/app/service/cultura.service.ts","webpack:///src/app/service/fazenda.service.ts","webpack:///src/app/service/gotejador.service.ts","webpack:///src/app/service/guardiao.guard.ts","webpack:///src/app/service/header-interceptor.ts","webpack:///src/app/service/irrigacao.service.ts","webpack:///src/app/service/login-service.service.ts","webpack:///src/app/service/manejo.service.ts","webpack:///src/app/service/outorga.service.ts","webpack:///src/app/service/usuario.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppConstants","baseServidor","AppComponent","router","title","localStorage","getItem","navigate","clear","toString","trim","sair","selector","templateUrl","styleUrls","appRouters","path","component","canActivate","routes","forRoot","optionMask","AppModule","declarations","imports","providers","bootstrap","CulturaAddComponent","routeActive","culturaService","cultura","culturaFase","snapshot","paramMap","get","getCultura","subscribe","data","idCultura","updateCultura","novo","console","info","idFazenda","salvarCultura","culturaFases","undefined","Array","push","i","splice","confirm","removerCulturaFase","adicionaCulturaFase","CulturaComponent","getCulturaList","culturas","deletarCultura","ClimaAddComponent","climaService","clima","getClima","idClima","updateClima","salvarClima","ClimaComponent","getClimaList","climas","deletarClima","IrrigacaoAddComponent","IrrigacaoComponent","irrigacaoService","getIrrigacaoList","irrigacoes","GotejadorAddComponent","gotejadorService","gotejador","getGotejador","idGotejador","updateGotejador","salvarGotejador","GotejadorComponent","getGotejadorList","gotejadores","deletarGotejador","OutorgaAddComponent","outorgaService","outorga","outorgaFase","getOutorga","outorgaFases","idOutorga","updateOutorga","salvarOutorga","removerOutorgaFase","adicionaOutorgaFase","OutorgaComponent","getOutorgaList","outorgas","deletarOutorga","FazendaAddComponent","fazendaService","fazenda","getFazenda","updateFazenda","idUsuario","JSON","parse","salvarFazenda","FazendaComponent","getFazendasList","fazendas","deletarFazenda","UsuarioAddComponent","userService","usuario","telefone","getStudant","updateUsuario","salvarUsuario","telefones","removerTelefone","addFone","salvarUser","UsuarioComponent","usuarioService","p","getStudentList","students","content","total","totalElements","index","deletarUsuario","nome","consultarUser","pagina","consultarUserPorPage","getStudentListPage","carregarPagina","HomeComponent","manejoService","usuarioLogado","recuperarUsuario","setItem","stringify","buscarManejo","manejos","LoginComponent","loginService","login","senha","Clima","Cultura","CulturaFase","Fazenda","Gotejador","Outorga","OutorgaFase","Telefone","User","ClimaService","http","baseUrlClimas","post","put","responseType","providedIn","CulturaService","baseUrlCultura","baseUrlPath","FazendaService","baseUrlFazenda","GotejadorService","baseUrlGotejador","GuardiaoGuard","userServcice","next","state","userAutenticado","HeaderInterceptorService","token","tokenRequest","clone","headers","set","handle","pipe","event","status","processaError","error","errorMessage","ErrorEvent","window","alert","HttpInterceptorModule","provide","useClass","multi","IrrigacaoService","baseUrlIrrigacoes","irrigacao","LoginServiceService","baseLogin","Authorization","split","ManejoService","idParcela","OutorgaService","baseUrlOutorga","UsuarioService","baseUrl","page","user","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export class AppConstants {\n\n\t//public static get baseServidor(): string { return \"https://controle-irrigacao-app.herokuapp.com/\" }\n\n\tpublic static get baseServidor(): string { return \"https://controle-irrigacao-api.herokuapp.com/\" }\n\n\tpublic static get baseLogin(): string { return this.baseServidor + \"controlirrigationapi/login\" }\n\n\tpublic static get baseUrl(): string {return this.baseServidor + \"controlirrigationapi/usuario/\"}\n\n\tpublic static get baseUrlFazenda(): string {return this.baseServidor + \"controlirrigationapi/fazendas/\"}\n\n\tpublic static get baseUrlPath(): string {return this.baseServidor + \"controlirrigationapi/\"}\n\n\tpublic static get baseUrlCultura(): string {return this.baseServidor + \"controlirrigationapi/culturas/\"}\n\n\tpublic static get baseUrlGotejador(): string {return this.baseServidor + \"controlirrigationapi/gotejadores/\"}\n\n\tpublic static get baseUrlOutorga(): string {return this.baseServidor + \"controlirrigationapi/outorgas/\"}\n\n\tpublic static get baseUrlClimas(): string {return this.baseServidor + \"controlirrigationapi/climas/\"}\n\n\tpublic static get baseUrlIrrigacoes(): string {return this.baseServidor + \"controlirrigationapi/irrigacoes/\"}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  title = 'Curso-Angular-REST';\n\n\n  constructor(private router: Router) {\n\n  }\n\n  ngOnInit(): void {\n\n    if (localStorage.getItem('token') == null) {\n      this.router.navigate(['login']);\n    }\n\n  }\n\n  public sair() {\n    localStorage.clear();\n    this.router.navigate(['login']);\n  }\n\n\n  public esconderBarrar() {\n\n    if (localStorage.getItem('token') !== null &&\n      localStorage.getItem('token').toString().trim() !== null) {\n      return false;\n    } else {\n      return true;\n    }\n\n  }\n\n\n}\n","<div id=\"page-content-wrapper\" >\n<nav class=\"navbar navbar-expand-lg navbar-light bg-light\" [hidden]=\"esconderBarrar()\">\n\t\t \n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" [routerLink]=\"['/home']\" routerLinkActive=\"router-link-active\">Controle De Irrigação</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" [routerLink]=\"['/fazendaList']\" routerLinkActive=\"router-link-active\">Fazendas</a> \n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" [routerLink]=\"['/culturaList']\" routerLinkActive=\"router-link-active\">Culturas</a> \n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" [routerLink]=\"['/gotejadorList']\" routerLinkActive=\"router-link-active\">Gotejador</a> \n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" [routerLink]=\"['/outorgaList']\" routerLinkActive=\"router-link-active\">Outorga</a> \n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\">Parcelas</a> \n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" [routerLink]=\"['/climaList']\" routerLinkActive=\"router-link-active\">Clima</a> \n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" [routerLink]=\"['/irrigacaoList']\" routerLinkActive=\"router-link-active\">Irrigação</a> \n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\">Precipitação</a> \n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" (click)=\"sair()\">Sair</a> \n      </li>\n      <li class=\"nav-item dropdown\">\n        <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n         Menu\n        </a>\n        <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n           <a class=\"dropdown-item\" [routerLink]=\"['/userList']\" routerLinkActive=\"router-link-active\" >Usuario</a>\n          <a class=\"dropdown-item\" href=\"#\">Link 2</a>\n          <div class=\"dropdown-divider\"></div>\n          <a class=\"dropdown-item\" href=\"#\">Link 3</a>\n        </div>\n      </li>\n    </ul>\n  </div>\n</nav>\n<router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { AppComponent } from './app.component';\nimport { FormsModule, } from '@angular/forms'\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HomeComponent } from './home/home.component'; /*Requisi��es Ajax*/\nimport { RouterModule, Routes } from '@angular/router'\nimport { ModuleWithProviders } from '@angular/compiler/src/core';\nimport { LoginComponent } from './login/login.component';\nimport { UsuarioComponent } from './componente/usuario/usuario/usuario.component';\nimport { HttpInterceptorModule } from './service/header-interceptor';\nimport { UsuarioAddComponent } from './componente/usuario/usuario-add/usuario-add.component';\nimport { GuardiaoGuard } from './service/guardiao.guard';\nimport { NgxMaskModule, IConfig } from 'ngx-mask';\nimport { NgxPaginationModule} from 'ngx-pagination';\nimport { FazendaComponent } from './componente/fazenda/fazenda/fazenda.component'; \nimport { FazendaAddComponent } from './componente/fazenda/fazenda-add/fazenda-add.component';\nimport { CulturaComponent } from './componente/cultura/cultura.component';\nimport { CulturaAddComponent } from './componente/cultura/cultura-add/cultura-add.component';\nimport { GotejadorComponent } from './componente/equipamentos/gotejador/gotejador/gotejador.component';\nimport { GotejadorAddComponent } from './componente/equipamentos/gotejador/gotejador-add/gotejador-add.component';\nimport { OutorgaComponent } from './componente/equipamentos/outorga/outorga/outorga.component';\nimport { OutorgaAddComponent } from './componente/equipamentos/outorga/outorga-add/outorga-add.component';\nimport { ClimaComponent } from './componente/dados-diarios/clima/clima/clima.component';\nimport { ClimaAddComponent } from './componente/dados-diarios/clima/clima-add/clima-add.component';\nimport { IrrigacaoAddComponent } from './componente/dados-diarios/irrigacao/irrigacao-add/irrigacao-add.component';\nimport { IrrigacaoComponent } from './componente/dados-diarios/irrigacao/irrigacao/irrigacao.component';\n\n\nexport const appRouters: Routes = [\n\n  { path: 'home', component: HomeComponent, canActivate: [GuardiaoGuard] },\n  { path: 'login', component: LoginComponent },\n  { path: '', component: LoginComponent },\n\n  { path: 'userList', component: UsuarioComponent, canActivate: [GuardiaoGuard] },\n  { path: 'usuarioAdd', component : UsuarioAddComponent, canActivate: [GuardiaoGuard]},\n  { path: 'usuarioAdd/:id', component : UsuarioAddComponent, canActivate: [GuardiaoGuard]},\n\n  { path: 'fazendaList', component : FazendaComponent, canActivate: [GuardiaoGuard]},\n  { path: 'fazendaAdd', component : FazendaAddComponent, canActivate: [GuardiaoGuard]},\n  { path: 'fazendaAdd/:id', component : FazendaAddComponent, canActivate: [GuardiaoGuard]},\n\n  { path: 'culturaList', component : CulturaComponent, canActivate: [GuardiaoGuard]},\n  { path: 'culturaAdd', component : CulturaAddComponent, canActivate: [GuardiaoGuard]},\n  { path: 'culturaAdd/:id', component : CulturaAddComponent, canActivate: [GuardiaoGuard]},\n\n  { path: 'gotejadorList', component : GotejadorComponent, canActivate: [GuardiaoGuard]},\n  { path: 'gotejadorAdd', component : GotejadorAddComponent, canActivate: [GuardiaoGuard]},\n  { path: 'gotejadorAdd/:id', component : GotejadorAddComponent, canActivate: [GuardiaoGuard]},\n\n  { path: 'outorgaList', component : OutorgaComponent, canActivate: [GuardiaoGuard]},\n  { path: 'outorgaAdd', component : OutorgaAddComponent, canActivate: [GuardiaoGuard]},\n  { path: 'outorgaAdd/:id', component : OutorgaAddComponent, canActivate: [GuardiaoGuard]},\n\n  { path: 'climaList', component : ClimaComponent, canActivate: [GuardiaoGuard]},\n  { path: 'climaAdd', component : ClimaAddComponent, canActivate: [GuardiaoGuard]},\n  { path: 'climaAdd/:id', component : ClimaAddComponent, canActivate: [GuardiaoGuard]},\n\n  { path: 'irrigacaoList', component : IrrigacaoComponent, canActivate: [GuardiaoGuard]},\n  { path: 'irrigacaoAdd', component : IrrigacaoAddComponent, canActivate: [GuardiaoGuard]},\n  { path: 'irrigacaoAdd/:id', component : IrrigacaoAddComponent, canActivate: [GuardiaoGuard]}\n];\n\nexport const routes: ModuleWithProviders = RouterModule.forRoot(appRouters);\n\nexport const optionMask: Partial<IConfig> | (() => Partial<IConfig>) = {};\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    LoginComponent,\n    UsuarioComponent,\n    UsuarioAddComponent,\n    FazendaComponent,\n    FazendaAddComponent,\n    CulturaComponent,\n    CulturaAddComponent,\n    GotejadorComponent,\n    GotejadorAddComponent,\n    OutorgaComponent,\n    OutorgaAddComponent,\n    ClimaComponent,\n    ClimaAddComponent,\n    IrrigacaoAddComponent,\n    IrrigacaoComponent\n\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    routes,\n    HttpInterceptorModule,\n    NgxMaskModule.forRoot(optionMask),\n    NgxPaginationModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { CulturaFase } from './../../../model/CulturaFase';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Cultura } from 'src/app/model/Cultura';\nimport { Component, OnInit } from '@angular/core';\nimport { CulturaService } from 'src/app/service/cultura.service';\n\n@Component({\n  selector: 'app-cultura-add',\n  templateUrl: './cultura-add.component.html',\n  styleUrls: ['./cultura-add.component.css']\n})\nexport class CulturaAddComponent implements OnInit {\n\n  cultura = new Cultura();\n\n  culturaFase = new CulturaFase();\n\n  constructor(\n    private router: Router,\n    private routeActive: ActivatedRoute, \n    private culturaService: CulturaService\n    ) { }\n\n  ngOnInit(): void {\n    let id = this.routeActive.snapshot.paramMap.get('id');\n\n    if (id != null) {\n      this.culturaService.getCultura(id).subscribe(data => {\n        this.cultura = data;\n      });\n    }\n  }\n\n\n  salvarCultura() {\n    if (this.cultura.idCultura != null && this.cultura.idCultura.toString().trim() != null) { /* Atualizando ou Editando*/\n      this.culturaService.updateCultura(this.cultura).subscribe(data => {\n        this.novo();\n        this.router.navigate(['culturaList']);\n        console.info(\"Cultura Atualizado: \" + data);\n      });\n    } else {\n      this.cultura.idFazenda = 1;\n      this.culturaService.salvarCultura(this.cultura).subscribe(data => { /*Salvando um novo User */\n        this.novo();\n        this.router.navigate(['culturaList']);\n        console.info(\"Gravou Cultura: \" + data);\n      });\n    }\n  }\n\n  novo() {\n    this.cultura = new Cultura();\n    this.culturaFase = new CulturaFase();\n  }\n\n  adicionaCulturaFase() {\n    if (this.cultura.culturaFases === undefined){\n      this.cultura.culturaFases = new Array<CulturaFase>();\n    }\n\n    this.culturaFase.idCultura = this.cultura.idCultura;\n    this.cultura.culturaFases.push(this.culturaFase);\n    this.culturaFase = new CulturaFase();\n  }\n\n  deletarCulturaFase(id, i) {\n\n    if (id == null){\n      this.cultura.culturaFases.splice(i, 1);\n      return;\n    }\n\n    if (i !== null && confirm(\"Deseja remover?\")){\n      this.culturaService.removerCulturaFase(id).subscribe(data => {\n        this.cultura.culturaFases.splice(i, 1);\n      });\n    }\n  }\n\n}\n","<h3 style=\"padding: 10px;\">Culturas e Fases</h3>\n\n<form style=\"padding: 10px\" #formValidate=\"ngForm\">\n\n    <div class=\"form-row\">\n        <div class=\"form-group col-md-1\">\n          <label for=\"id\">ID Cultura</label>\n          <input type=\"text\" [(ngModel)]=\"cultura.idCultura\" class=\"form-control\" id=\"idCultura\" readonly=\"true\" name=\"idCultura\" autocomplete=\"false\">\n        </div>\n    </div>\n\n    <div class=\"form-row\">\n        <div class=\"form-group col-md-12\">\n          <label for=\"nomeCultura\">Nome da Cultura/Variedade</label>\n          <span style=\"color: red; font-size: 23px;\" *ngIf=\"nomeValidate.invalid\"> *</span>\n          <input type=\"text\" [(ngModel)]=\"cultura.nomeCultura\" #nomeValidate=\"ngModel\" class=\"form-control\" id=\"nomeCultura\" required=\"true\" name=\"nomeCultura\" autocomplete=\"false\">\n        </div>\n    </div>\n\n   \n\n      <div class=\"card text-center\" >\n        <div class=\"card-header\">\n          Fases da Cultura/Variedade\n        </div>\n        <div class=\"card-body\" style=\"padding-left: 1px ;\">\n          <div class=\"form-row\">\n           \n            <div class=\"form-group col-md-2\" style=\" min-width: 50px; max-width: 120px;\">\n              <label for=\"nome\">Nome</label>\n              <input type=\"text\" class=\"form-control\" [(ngModel)]=\"culturaFase.nomeFase\" id=\"nomeFase\" name=\"nomeFase\">\n            </div>\n           \n            <div class=\"form-group col-md-2\" style=\" min-width: 50px; max-width: 120px;\" >\n              <label for=\"nome\">Inicio(dias)</label>\n              <input type=\"text\" class=\"form-control\" [(ngModel)]=\"culturaFase.inicioFase\" id=\"inicioFase\" name=\"inicioFase\">\n            </div>\n\n            <div class=\"form-group col-md-2\" style=\" min-width: 50px; max-width: 120px;\" >\n              <label for=\"nome\">Fim(dias)</label>\n              <input type=\"text\" class=\"form-control\" [(ngModel)]=\"culturaFase.fimFase\" id=\"fimFase\" name=\"fimFase\">\n            </div>\n\n            <div class=\"form-group col-md-2\" style=\" min-width: 50px; max-width: 120px;\" >\n              <label for=\"nome\">Kc</label>\n              <input type=\"text\" class=\"form-control\" [(ngModel)]=\"culturaFase.kc\" id=\"kc\" name=\"kc\">\n            </div>\n\n            <div class=\"form-group col-md-2\" style=\" min-width: 50px; max-width: 120px;\" >\n              <label for=\"nome\">P. Raiz(cm)</label>\n              <input type=\"text\" class=\"form-control\" [(ngModel)]=\"culturaFase.profundidadeRaiz\" id=\"profundidadeRaiz\" name=\"profundidadeRaiz\">\n            </div>\n\n            <div class=\"form-group col-md-2\" style=\" min-width: 50px; max-width: 120px;\" >\n              <label for=\"nome\">P.Murcha(%)</label>\n              <input type=\"text\" class=\"form-control\" [(ngModel)]=\"culturaFase.pontoMurcha\" id=\"pontoMurcha\" name=\"pontoMurcha\">\n            </div>\n\n            <div class=\"form-group col-md-2\" style=\" min-width: 50px; max-width: 120px;\" >\n              <label for=\"nome\">Cap.Campo(%)</label>\n              <input type=\"text\" class=\"form-control\" [(ngModel)]=\"culturaFase.capacidadeCampo\" id=\"capacidadeCampo\" name=\"capacidadeCampo\">\n            </div>\n\n            <div class=\"form-group col-md-2\" style=\" min-width: 50px; max-width: 120px;\" >\n              <label for=\"nome\">Área S.(Kl)</label>\n              <input type=\"text\" class=\"form-control\" [(ngModel)]=\"culturaFase.areaSombreada\" id=\"areaSombreada\" name=\"areaSombreada\">\n            </div>\n\n            <div class=\"form-group col-md-2\" style=\" min-width: 50px; max-width: 120px;\" >\n              <label for=\"nome\">Limite</label>\n              <input type=\"text\" class=\"form-control\" [(ngModel)]=\"culturaFase.limite\" id=\"limite\" name=\"limite\">\n            </div>\n\n            <div class=\"form-group col-md-2\" style=\" min-width: 50px; max-width: 120px;\" >\n              <label for=\"nome\">D. Aparente</label>\n              <input type=\"number\" class=\"form-control\" [(ngModel)]=\"culturaFase.densidadeAparente\" id=\"densidadeAparente\" name=\"densidadeAparente\">\n            </div>\n           \n            <div class=\"form-group col-md-2\">\n              <button class=\"btn btn-primary\" (click)=\"adicionaCulturaFase()\">Adicionar</button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n\n  <table >\n\n    <tbody class=\"table\">\n\n      <tr *ngFor=\"let culturaFase of cultura.culturaFases; let i = index;\">\n        <td>{{culturaFase.idCulturaFase}}</td>\n        <td>{{culturaFase.idCultura}}</td>\n        <td>{{culturaFase.nomeFase}}</td>\n        <td>{{culturaFase.inicioFase}}</td>\n        <td>{{culturaFase.fimFase}}</td>\n        <td>{{culturaFase.kc}}</td>\n        <td>{{culturaFase.profundidadeRaiz}}</td>\n        <td>{{culturaFase.pontoMurcha}}</td>\n        <td>{{culturaFase.capacidadeCampo}}</td>\n        <td>{{culturaFase.areaSombreada}}</td>\n        <td>{{culturaFase.limite}}</td>\n        <td>{{culturaFase.densidadeAparente}}</td>\n        <td><button class=\"btn btn-danger\" (click)=\"deletarCulturaFase(culturaFase.idCulturaFase, i)\">Delete</button></td>\n      </tr>\n    </tbody>\n  </table>\n\n\n      <div class=\"form-row\">\n        <div class=\"form-group col-md-6\">\n            <button type=\"button\" class=\"btn btn-primary\" [routerLink]=\"['/culturaList']\" routerLinkActive=\"router-link-active\">Voltar</button>\n            <button type=\"button\" class=\"btn btn-primary\" (click)=\"novo()\"  style=\"margin-left: 10px;\">Novo</button>\n            <button type=\"button\" class=\"btn btn-primary\" [disabled]=\"formValidate.invalid\" (click)=\"salvarCultura()\"  style=\"margin-left: 10px;\">Salvar</button>\n        </div>\n      </div>\n\n</form>","import { Observable } from 'rxjs';\nimport { CulturaService } from 'src/app/service/cultura.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Cultura } from 'src/app/model/Cultura';\n\n@Component({\n  selector: 'app-cultura',\n  templateUrl: './cultura.component.html',\n  styleUrls: ['./cultura.component.css']\n})\nexport class CulturaComponent implements OnInit {\n\n  culturas: Observable<Cultura[]>;\n  total: number;\n\n  constructor(private culturaService: CulturaService) { }\n\n  ngOnInit() {\n\n    this.culturaService.getCulturaList().subscribe(data => {\n      this.culturas = data;\n      //this.total = data.totalElements;\n    });\n  }\n\n  excluirCultura(id: Number) {\n\n    if (confirm('Deseja mesmo remover?')) {\n\n      this.culturaService.deletarCultura(id).subscribe(data => {\n       // console.log(\"Retorno do método delete : \" + data);\n\n       //this.culturas.splice(index, 1);/*Remover da tela*/\n       // this.usuarioService.getStudentList().subscribe(data => {\n       //   this.students = data;\n       // });\n\n      });\n    }\n  }\n\n}\n","<br/>\n<br/>\n\n<form class=\"form-inline\">\n    <button type=\"button\" [routerLink]=\"['/culturaAdd']\" routerLinkActive=\"router-link-active\" style=\"margin-left: 5px;\"    class=\"btn btn-success mb-2\">Novo</button>\n  \n</form>\n<br/>\n<br/>\n<table class=\"table\">\n  <thead class=\"thread-dark\">\n    <tr>\n\n      <th scope=\"col\">Id Cultura</th>\n      <th scope=\"col\">Nome da Cultura/Variedade</th>\n      <th scope=\"col\">Excluir</th>\n      <th scope=\"col\">Editar</th>\n     \n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let cultura of culturas\">\n      <td>{{cultura.idCultura}}</td>\n      <td>{{cultura.nomeCultura}}</td>\n      <td><button (click)=\"excluirCultura(cultura.idCultura)\" class=\"btn btn-primary\">Excluir</button></td>\n      <td><button [routerLink]=\"['/culturaAdd', cultura.idCultura]\" routerLinkActive=\"router-link-active\" class=\"btn btn-warning\">Editar</button></td>\n\n    </tr>\n  </tbody>\n</table>","import { ActivatedRoute, Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { Clima } from 'src/app/model/Clima';\nimport { ClimaService } from 'src/app/service/clima.service';\n\n@Component({\n  selector: 'app-clima-add',\n  templateUrl: './clima-add.component.html',\n  styleUrls: ['./clima-add.component.css']\n})\nexport class ClimaAddComponent implements OnInit {\n\n  clima = new Clima();\n\n  constructor(\n    private router: Router,\n    private routeActive: ActivatedRoute,\n    private climaService: ClimaService\n  ) { }\n\n  ngOnInit(): void {\n    let id = this.routeActive.snapshot.paramMap.get('id');\n\n    if (id != null) {\n      this.climaService.getClima(id).subscribe(data => {\n        this.clima = data;\n      });\n    }\n  }\n\n  novo() {\n    this.clima = new Clima();\n  }\n\n  salvarClima() {\n    if (this.clima.idClima != null && this.clima.idClima.toString().trim() != null) { /* Atualizando ou Editando*/\n      this.climaService.updateClima(this.clima).subscribe(data => {\n        this.novo();\n        this.router.navigate(['climaList']);\n        console.info(\"Clima Atualizado: \" + data);\n      });\n    } else {\n      this.clima.idFazenda = 1;\n      this.climaService.salvarClima(this.clima).subscribe(data => { /*Salvando um novo Clima */\n        this.novo();\n        this.router.navigate(['climaList']);\n        console.info(\"Gravou Clima: \" + data);\n      });\n    }\n  }\n}\n","<h3 style=\"padding: 10px;\">Climas</h3>\n\n<form style=\"padding: 10px\" #formValidate=\"ngForm\">\n\n    <div class=\"form-row\">\n        <div class=\"form-group col-md-1\">\n          <label for=\"idClima\">ID Clima</label>\n          <input type=\"text\" [(ngModel)]=\"clima.idClima\" class=\"form-control\" id=\"idClima\" readonly=\"true\" name=\"idClima\" autocomplete=\"false\">\n        </div>\n    </div>\n\n    <div class=\"form-row\">\n        <div class=\"form-group col-md-4\">\n          <label for=\"dataClima\">Data Clima</label>\n          <input type=\"date\" [(ngModel)]=\"clima.dataClima\" class=\"form-control\" id=\"dataClima\" name=\"dataClima\" required=\"true\" autocomplete=\"false\">\n        </div>\n    </div>\n\n    <div class=\"form-row\">\n        <div class=\"form-group col-md-4\">\n          <label for=\"temperaturaMaxima\">Temperatura Máxima</label>\n          <span style=\"color: red; font-size: 23px;\" *ngIf=\"nomeValidate.invalid\"> *</span>\n          <input type=\"text\" [(ngModel)]=\"clima.temperaturaMaxima\" #nomeValidate=\"ngModel\" class=\"form-control\" id=\"temperaturaMaxima\" required=\"true\" name=\"temperaturaMaxima\" autocomplete=\"false\">\n        </div>\n\n        <div class=\"form-group col-md-4\">\n            <label for=\"temperaturaMinima\">Temperatura Mínima</label>\n            <span style=\"color: red; font-size: 23px;\" *ngIf=\"nomeValidate.invalid\"> *</span>\n            <input type=\"text\" [(ngModel)]=\"clima.temperaturaMinima\" #nomeValidate=\"ngModel\" class=\"form-control\" id=\"temperaturaMinima\" required=\"true\" name=\"temperaturaMinima\" autocomplete=\"false\">\n          </div>\n\n          <div class=\"form-group col-md-4\">\n            <label for=\"temperaturaMedia\">Temperatura Média</label>\n            <span style=\"color: red; font-size: 23px;\" *ngIf=\"nomeValidate.invalid\"> *</span>\n            <input type=\"text\" [(ngModel)]=\"clima.temperaturaMedia\" #nomeValidate=\"ngModel\" class=\"form-control\" id=\"temperaturaMedia\" required=\"true\" name=\"temperaturaMedia\" autocomplete=\"false\">\n          </div>\n    </div>\n\n    <div class=\"form-row\">\n        <div class=\"form-group col-md-4\">\n          <label for=\"umidadeRelativa\">Umidade Relativa</label>\n          <span style=\"color: red; font-size: 23px;\" *ngIf=\"nomeValidate.invalid\"> *</span>\n          <input type=\"text\" [(ngModel)]=\"clima.umidadeRelativa\" #nomeValidate=\"ngModel\" class=\"form-control\" id=\"umidadeRelativa\" required=\"true\" name=\"umidadeRelativa\" autocomplete=\"false\">\n        </div>\n\n        <div class=\"form-group col-md-4\">\n            <label for=\"velocidadeVento\">Velocidade do Vento</label>\n            <span style=\"color: red; font-size: 23px;\" *ngIf=\"nomeValidate.invalid\"> *</span>\n            <input type=\"text\" [(ngModel)]=\"clima.velocidadeVento\" #nomeValidate=\"ngModel\" class=\"form-control\" id=\"velocidadeVento\" required=\"true\" name=\"velocidadeVento\" autocomplete=\"false\">\n          </div>\n    </div>\n\n    <div class=\"form-row\">\n        <div class=\"form-group col-md-4\">\n          <label for=\"precipitacao\">Precipitação Total</label>\n          <span style=\"color: red; font-size: 23px;\" *ngIf=\"nomeValidate.invalid\"> *</span>\n          <input type=\"text\" [(ngModel)]=\"clima.precipitacao\" #nomeValidate=\"ngModel\" class=\"form-control\" id=\"precipitacao\" required=\"true\" name=\"precipitacao\" autocomplete=\"false\">\n        </div>\n\n        <div class=\"form-group col-md-4\">\n            <label for=\"radiacaoMedia\">Radiação</label>\n            <span style=\"color: red; font-size: 23px;\" *ngIf=\"nomeValidate.invalid\"> *</span>\n            <input type=\"text\" [(ngModel)]=\"clima.radiacaoMedia\" #nomeValidate=\"ngModel\" class=\"form-control\" id=\"radiacaoMedia\" required=\"true\" name=\"radiacaoMedia\" autocomplete=\"false\">\n          </div>\n    </div>\n\n\n    \n      <div class=\"form-row\">\n        <div class=\"form-group col-md-6\">\n            <button type=\"button\" class=\"btn btn-primary\" [routerLink]=\"['/climaList']\" routerLinkActive=\"router-link-active\">Voltar</button>\n            <button type=\"button\" class=\"btn btn-primary\" (click)=\"novo()\" style=\"margin-left: 10px;\">Novo</button>\n            <button type=\"button\" class=\"btn btn-primary\" [disabled]=\"formValidate.invalid\" (click)=\"salvarClima()\" style=\"margin-left: 10px;\">Salvar</button>\n        </div>\n      </div>\n\n</form>","import { Observable } from 'rxjs';\nimport { Component, OnInit } from '@angular/core';\nimport { Clima } from 'src/app/model/Clima';\nimport { ClimaService } from 'src/app/service/clima.service';\n\n@Component({\n  selector: 'app-clima',\n  templateUrl: './clima.component.html',\n  styleUrls: ['./clima.component.css']\n})\nexport class ClimaComponent implements OnInit {\n\n  climas: Observable<Clima[]>;\n\n  constructor(private climaService: ClimaService) { }\n\n  ngOnInit(): void {\n    this.climaService.getClimaList().subscribe(data => {\n      this.climas = data;\n      //this.total = data.totalElements;\n    });\n\n  }\n\n  excluirClima(id: Number) {\n\n    if (confirm('Deseja mesmo remover?')) {\n\n      this.climaService.deletarClima(id).subscribe(data => {\n       // console.log(\"Retorno do método delete : \" + data);\n\n       //this.culturas.splice(index, 1);/*Remover da tela*/\n       // this.usuarioService.getStudentList().subscribe(data => {\n       //   this.students = data;\n       // });\n\n      });\n    }\n  }\n\n}\n","<br/>\n<br/>\n\n<form class=\"form-inline\">\n\n  <button type=\"button\" [routerLink]=\"['/climaAdd']\" routerLinkActive=\"router-link-active\" style=\"margin-left: 5px;\"    class=\"btn btn-success mb-2\">Novo</button>\n  \n</form>\n\n<br/>\n<br/>\n\n<table class=\"table\">\n  <thead class=\"thread-dark\">\n    <tr>\n      <th scope=\"col\">ID Clima</th>\n      <th scope=\"col\">Data</th>\n      <th scope=\"col\">Temperatura Máxima</th>\n      <th scope=\"col\">Temperatura Mínima</th> \n      <th scope=\"col\">Temperatura Média</th>\n      <th scope=\"col\">UmidadeRelativa</th>\n      <th scope=\"col\">Velicidade do Vento</th>\n      <th scope=\"col\">Precipitação Total</th>\n      <th scope=\"col\">Radiação</th>\n      <th scope=\"col\">Excluir</th>\n      <th scope=\"col\">Editar</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let clima of climas\">\n      <td>{{clima.idClima}}</td>\n      <td>{{clima.dataClima}}</td>\n      <td>{{clima.temperaturaMaxima}}</td>\n      <td>{{clima.temperaturaMinima}}</td>\n      <td>{{clima.temperaturaMedia}}</td>\n      <td>{{clima.umidadeRelativa}}</td>\n      <td>{{clima.velocidadeVento}}</td>\n      <td>{{clima.precipitacao}}</td>\n      <td>{{clima.radiacaoMedia}}</td>\n      <td><button (click)=\"excluirClima(clima.idClima)\" class=\"btn btn-primary\" class=\"btn btn-primary\">Delete</button></td>\n      <td><button [routerLink]=\"['/climaAdd', clima.idClima]\" routerLinkActive=\"router-link-active\"class=\"btn btn-warning\">Editar</button></td>\n\n    </tr>\n  </tbody>\n</table>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-irrigacao-add',\n  templateUrl: './irrigacao-add.component.html',\n  styleUrls: ['./irrigacao-add.component.css']\n})\nexport class IrrigacaoAddComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>irrigacao-add works!</p>\n","import { Observable } from 'rxjs';\nimport { Component, OnInit } from '@angular/core';\nimport { Irrigacao } from 'src/app/model/Irrigacao';\nimport { IrrigacaoService } from 'src/app/service/irrigacao.service';\n\n@Component({\n  selector: 'app-irrigacao',\n  templateUrl: './irrigacao.component.html',\n  styleUrls: ['./irrigacao.component.css']\n})\nexport class IrrigacaoComponent implements OnInit {\n\n  irrigacoes: Observable<Irrigacao[]>;\n\n  constructor(private irrigacaoService: IrrigacaoService) { }\n\n  ngOnInit(): void {\n    this.irrigacaoService.getIrrigacaoList().subscribe(data => {\n      this.irrigacoes = data;\n    })\n  }\n\n}\n","<br/>\n<br/>\n\n<form class=\"form-inline\">\n\n  <button type=\"button\" [routerLink]=\"['/irrigacaoAdd']\" routerLinkActive=\"router-link-active\" style=\"margin-left: 5px;\"    class=\"btn btn-success mb-2\">Novo</button>\n  \n</form>\n\n<br/>\n<br/>\n\n<table class=\"table\">\n  <thead class=\"thread-dark\">\n    <tr>\n      <th scope=\"col\">ID Irrigacao</th>\n      <th scope=\"col\">Data</th>\n      <th scope=\"col\">Parcela</th>\n      <th scope=\"col\">Irrigação Gotejo</th> \n      <th scope=\"col\">Inicio da Irrigacao</th>\n      <th scope=\"col\">Fertirrigação</th>\n      <th scope=\"col\">Excluir</th>\n      <th scope=\"col\">Editar</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let irrigacao of irrigacoes\">\n      <td>{{irrigacao.idIrrigacao}}</td>\n      <td>{{irrigacao.dataIrigacao}}</td>\n      <td>{{irrigacao.idParcela}}</td>\n      <td>{{irrigacao.quantitade}}</td>\n      <td>{{irrigacao.inicioIrrigacao}}</td>\n      <td>{{irrigacao.fertirrigacao}}</td>\n      <td>{{irrigacao.velocidadeVento}}</td>\n      <td>{{irrigacao.precipitacao}}</td>\n      <td>{{irrigacao.radiacaoMedia}}</td>\n      <td><button  class=\"btn btn-primary\" class=\"btn btn-primary\">Delete</button></td>\n      <td><button routerLinkActive=\"router-link-active\"class=\"btn btn-warning\">Editar</button></td>\n\n    </tr>\n  </tbody>\n</table>\n\n","import { Router, ActivatedRoute } from '@angular/router';\nimport { Gotejador } from './../../../../model/Gotejador';\nimport { Component, OnInit } from '@angular/core';\nimport { GotejadorService } from 'src/app/service/gotejador.service';\n\n@Component({\n  selector: 'app-gotejador-add',\n  templateUrl: './gotejador-add.component.html',\n  styleUrls: ['./gotejador-add.component.css']\n})\nexport class GotejadorAddComponent implements OnInit {\n\n  gotejador = new Gotejador();\n\n  constructor(\n    private router: Router,\n    private routeActive: ActivatedRoute,\n    private gotejadorService: GotejadorService\n  ) { }\n\n  ngOnInit(): void {\n    let id = this.routeActive.snapshot.paramMap.get('id');\n\n    if (id != null) {\n      this.gotejadorService.getGotejador(id).subscribe(data => {\n        this.gotejador = data;\n      });\n    }\n  }\n\n  novo() {\n    this.gotejador = new Gotejador();\n  }\n\n  salvarGotejador() {\n    if (this.gotejador.idGotejador != null && this.gotejador.idGotejador.toString().trim() != null) { /* Atualizando ou Editando*/\n      this.gotejadorService.updateGotejador(this.gotejador).subscribe(data => {\n        this.novo();\n        this.router.navigate(['gotejadorList']);\n        console.info(\"Gotejador Atualizado: \" + data);\n      });\n    } else {\n      this.gotejador.idFazenda = 1;\n      this.gotejadorService.salvarGotejador(this.gotejador).subscribe(data => { /*Salvando um novo User */\n        this.novo();\n        this.router.navigate(['gotejadorList']);\n        console.info(\"Gravou Gotejador: \" + data);\n      });\n    }\n  }\n\n}\n","<h3 style=\"padding: 10px;\">Gotejadores</h3>\n\n<form style=\"padding: 10px\" #formValidate=\"ngForm\">\n\n    <div class=\"form-row\">\n        <div class=\"form-group col-md-1\">\n          <label for=\"id\">ID Gotejador</label>\n          <input type=\"text\" [(ngModel)]=\"gotejador.idGotejador\" class=\"form-control\" id=\"idGotejador\" readonly=\"true\" name=\"idGotejador\" autocomplete=\"false\">\n        </div>\n    </div>\n\n    <div class=\"form-row\">\n        <div class=\"form-group col-md-12\">\n          <label for=\"nomeGotejador\">Nome/Descrição</label>\n          <span style=\"color: red; font-size: 23px;\" *ngIf=\"nomeValidate.invalid\"> *</span>\n          <input type=\"text\" [(ngModel)]=\"gotejador.nomeGotejador\" #nomeValidate=\"ngModel\" class=\"form-control\" id=\"nomeGotejador\" required=\"true\" name=\"nomeGotejador\" autocomplete=\"false\">\n        </div>\n    </div>\n\n    <div class=\"form-row\">\n        <div class=\"form-group col-md-4\">\n          <label for=\"vazaoGotejador\">Vazão(lh)</label>\n          <span style=\"color: red; font-size: 23px;\" *ngIf=\"nomeValidate.invalid\"> *</span>\n          <input type=\"text\" [(ngModel)]=\"gotejador.vazaoGotejador\" #nomeValidate=\"ngModel\" class=\"form-control\" id=\"vazaoGotejador\" required=\"true\" name=\"vazaoGotejador\" autocomplete=\"false\">\n        </div>\n\n        <div class=\"form-group col-md-4\">\n            <label for=\"espacamentoGotejador\">Espaçamento entre Gotejadores</label>\n            <span style=\"color: red; font-size: 23px;\" *ngIf=\"nomeValidate.invalid\"> *</span>\n            <input type=\"text\" [(ngModel)]=\"gotejador.espacamentoGotejador\" #nomeValidate=\"ngModel\" class=\"form-control\" id=\"espacamentoGotejador\" required=\"true\" name=\"espacamentoGotejador\" autocomplete=\"false\">\n          </div>\n    </div>\n\n    <div class=\"form-row\">\n        <div class=\"form-group col-md-4\">\n          <label for=\"espacamentoLinha\">Espaçamento entre linhas laterais</label>\n          <span style=\"color: red; font-size: 23px;\" *ngIf=\"nomeValidate.invalid\"> *</span>\n          <input type=\"text\" [(ngModel)]=\"gotejador.espacamentoLinha\" #nomeValidate=\"ngModel\" class=\"form-control\" id=\"espacamentoLinha\" required=\"true\" name=\"espacamentoLinha\" autocomplete=\"false\">\n        </div>\n\n        <div class=\"form-group col-md-4\">\n            <label for=\"larguraFaixaMolhada\">Largura da faixa molhada</label>\n            <span style=\"color: red; font-size: 23px;\" *ngIf=\"nomeValidate.invalid\"> *</span>\n            <input type=\"text\" [(ngModel)]=\"gotejador.larguraFaixaMolhada\" #nomeValidate=\"ngModel\" class=\"form-control\" id=\"larguraFaixaMolhada\" required=\"true\" name=\"larguraFaixaMolhada\" autocomplete=\"false\">\n          </div>\n    </div>\n\n    <div class=\"form-row\">\n        <div class=\"form-group col-md-4\">\n          <label for=\"uniformidade\">Uniformidade(%)</label>\n          <span style=\"color: red; font-size: 23px;\" *ngIf=\"nomeValidate.invalid\"> *</span>\n          <input type=\"text\" [(ngModel)]=\"gotejador.uniformidade\" #nomeValidate=\"ngModel\" class=\"form-control\" id=\"uniformidade\" required=\"true\" name=\"uniformidade\" autocomplete=\"false\">\n        </div>\n\n        <div class=\"form-group col-md-4\">\n            <label for=\"laminaGotejador\">Lâmina(mm)</label>\n            <span style=\"color: red; font-size: 23px;\" *ngIf=\"nomeValidate.invalid\"> *</span>\n            <input type=\"text\" [(ngModel)]=\"gotejador.laminaGotejador\" #nomeValidate=\"ngModel\" class=\"form-control\" id=\"laminaGotejador\" required=\"true\" name=\"laminaGotejador\" autocomplete=\"false\">\n          </div>\n    </div>\n\n  \n    \n    \n      <div class=\"form-row\">\n        <div class=\"form-group col-md-6\">\n            <button type=\"button\" class=\"btn btn-primary\" [routerLink]=\"['/gotejadorList']\" routerLinkActive=\"router-link-active\">Voltar</button>\n            <button type=\"button\" class=\"btn btn-primary\" (click)=\"novo()\" style=\"margin-left: 10px;\">Novo</button>\n            <button type=\"button\" class=\"btn btn-primary\" [disabled]=\"formValidate.invalid\" (click)=\"salvarGotejador()\"style=\"margin-left: 10px;\">Salvar</button>\n        </div>\n      </div>\n\n</form>","import { Observable } from 'rxjs';\nimport { Gotejador } from 'src/app/model/Gotejador';\nimport { Component, OnInit } from '@angular/core';\nimport { GotejadorService } from 'src/app/service/gotejador.service';\n\n@Component({\n  selector: 'app-gotejador',\n  templateUrl: './gotejador.component.html',\n  styleUrls: ['./gotejador.component.css']\n})\nexport class GotejadorComponent implements OnInit {\n\n  gotejadores: Observable<Gotejador[]>;\n\n  constructor(private gotejadorService: GotejadorService) { }\n\n  ngOnInit(): void {\n    this.gotejadorService.getGotejadorList().subscribe(data => {\n      this.gotejadores = data;\n      //this.total = data.totalElements;\n    });\n\n  }\n\n  excluirGotejador(id: Number) {\n\n    if (confirm('Deseja mesmo remover?')) {\n\n      this.gotejadorService.deletarGotejador(id).subscribe(data => {\n       // console.log(\"Retorno do método delete : \" + data);\n\n       //this.culturas.splice(index, 1);/*Remover da tela*/\n       // this.usuarioService.getStudentList().subscribe(data => {\n       //   this.students = data;\n       // });\n\n      });\n    }\n  }\n\n}\n","<br/>\n<br/>\n\n<form class=\"form-inline\">\n\n  <button type=\"button\" [routerLink]=\"['/gotejadorAdd']\" routerLinkActive=\"router-link-active\" style=\"margin-left: 5px;\"    class=\"btn btn-success mb-2\">Novo</button>\n  \n</form>\n\n<br/>\n<br/>\n\n<table class=\"table\">\n  <thead class=\"thread-dark\">\n    <tr>\n      <th scope=\"col\">ID</th>\n      <th scope=\"col\">Nome/Descrição</th>\n      <th scope=\"col\">Vazão(l/h)</th>\n      <th scope=\"col\">Espaço entre Gotejadores</th>\n      <th scope=\"col\">Espaçamento entre linhas laterais</th>\n      <th scope=\"col\">Largura da Faixa Molhada</th>\n      <th scope=\"col\">Uniformidade(%)</th>\n      <th scope=\"col\">Lâmina(mm)</th>\n      <th scope=\"col\">Excluir</th>\n      <th scope=\"col\">Editar</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let gotejador of gotejadores\">\n      <td>{{gotejador.idGotejador}}</td>\n      <td>{{gotejador.nomeGotejador}}</td>\n      <td>{{gotejador.vazaoGotejador}}</td>\n      <td>{{gotejador.espacamentoGotejador}}</td>\n      <td>{{gotejador.espacamentoLinha}}</td>\n      <td>{{gotejador.larguraFaixaMolhada}}</td>\n      <td>{{gotejador.uniformidade}}</td>\n      <td>{{gotejador.laminaGotejador}}</td>\n      <td><button (click)=\"excluirGotejador(gotejador.idGotejador)\" class=\"btn btn-primary\" class=\"btn btn-primary\">Delete</button></td>\n      <td><button [routerLink]=\"['/gotejadorAdd', gotejador.idGotejador]\" routerLinkActive=\"router-link-active\"class=\"btn btn-warning\">Editar</button></td>\n\n    </tr>\n  </tbody>\n</table>\n\n","import { Router, ActivatedRoute } from '@angular/router';\nimport { OutorgaService } from './../../../../service/outorga.service';\nimport { OutorgaFase } from './../../../../model/OutorgaFase';\nimport { Outorga } from './../../../../model/Outorga';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-outorga-add',\n  templateUrl: './outorga-add.component.html',\n  styleUrls: ['./outorga-add.component.css']\n})\nexport class OutorgaAddComponent implements OnInit {\n\n  outorga = new Outorga();\n  outorgaFase = new OutorgaFase();\n\n  constructor(\n    private router: Router,\n    private routeActive: ActivatedRoute, \n    private outorgaService: OutorgaService\n  ) { }\n\n  ngOnInit(): void {\n    let id = this.routeActive.snapshot.paramMap.get('id');\n\n    if (id != null) {\n      this.outorgaService.getOutorga(id).subscribe(data => {\n        this.outorga = data;\n      });\n    }\n  }\n\n  novo() {\n    this.outorga = new Outorga();\n    this.outorgaFase = new OutorgaFase();\n  }\n\n  adicionaOutorgaFase() {\n    if (this.outorga.outorgaFases === undefined){\n      this.outorga.outorgaFases = new Array<OutorgaFase>();\n    }\n\n    this.outorgaFase.idOutorga = this.outorga.idOutorga;\n    this.outorga.outorgaFases.push(this.outorgaFase);\n    this.outorgaFase = new OutorgaFase();\n  }\n\n  salvarOutorga() {\n    if (this.outorga.idOutorga != null && this.outorga.idOutorga.toString().trim() != null) { /* Atualizando ou Editando*/\n      this.outorgaService.updateOutorga(this.outorga).subscribe(data => {\n        this.novo();\n        this.router.navigate(['outorgaList']);\n        console.info(\"Outorga Atualizado: \" + data);\n      });\n    } else {\n      this.outorga.idFazenda = 1;\n      this.outorgaService.salvarOutorga(this.outorga).subscribe(data => { /*Salvando um novo User */\n        this.novo();\n        this.router.navigate(['outrogaList']);\n        console.info(\"Gravou Outorga: \" + data);\n      });\n    }\n  }\n\n  deletarOutorgaFase(id, i) {\n\n    if (id == null){\n      this.outorga.outorgaFases.splice(i, 1);\n      return;\n    }\n\n    if (i !== null && confirm(\"Deseja remover?\")){\n      this.outorgaService.removerOutorgaFase(id).subscribe(data => {\n        this.outorga.outorgaFases.splice(i, 1);\n      });\n    }\n  }\n\n\n\n}\n","<h3 style=\"padding: 10px;\">Outrogas e Fases</h3>\n\n<form style=\"padding: 10px\" #formValidate=\"ngForm\">\n\n    <div class=\"form-row\">\n        <div class=\"form-group col-md-1\">\n          <label for=\"id\">ID Cultura</label>\n          <input type=\"text\" [(ngModel)]=\"outorga.idOutorga\" class=\"form-control\" id=\"idOutorga\" readonly=\"true\" name=\"idOutorga\" autocomplete=\"false\">\n        </div>\n    </div>\n\n    <div class=\"form-row\">\n        <div class=\"form-group col-md-12\">\n          <label for=\"nomeCultura\">Nome da Outorga</label>\n          <span style=\"color: red; font-size: 23px;\" *ngIf=\"nomeValidate.invalid\"> *</span>\n          <input type=\"text\" [(ngModel)]=\"outorga.nomeOutorga\" #nomeValidate=\"ngModel\" class=\"form-control\" id=\"nomeOutorga\" required=\"true\" name=\"Outorga\" autocomplete=\"false\">\n        </div>\n    </div>\n\n   <div class=\"card text-center\" >\n        <div class=\"card-header\">\n          Fases da Outorga\n        </div>\n        <div class=\"card-body\" style=\"padding-left: 1px ;\">\n          <div class=\"form-row\">\n           \n            <div class=\"form-group col-md-2\" style=\" min-width: 50px; max-width: 120px;\">\n              <label for=\"nome\">Nome</label>\n              <input type=\"text\" class=\"form-control\" [(ngModel)]=\"outorgaFase.nomeFase\" id=\"nomeFase\" name=\"nomeFase\">\n            </div>\n           \n            <div class=\"form-group col-md-2\" style=\" min-width: 50px; max-width: 120px;\" >\n              <label for=\"nome\">Inicio(data)</label>\n              <input type=\"date\" class=\"form-control\" [(ngModel)]=\"outorgaFase.inicioFase\" id=\"inicioFase\" name=\"inicioFase\">\n            </div>\n\n            <div class=\"form-group col-md-2\" style=\" min-width: 50px; max-width: 120px;\" >\n              <label for=\"nome\">Fim(data)</label>\n              <input type=\"date\" class=\"form-control\" [(ngModel)]=\"outorgaFase.fimFase\" id=\"fimFase\" name=\"fimFase\">\n            </div>\n\n            <div class=\"form-group col-md-2\" style=\" min-width: 50px; max-width: 120px;\" >\n              <label for=\"nome\">Limite</label>\n              <input type=\"number\" class=\"form-control\" [(ngModel)]=\"outorgaFase.limiteFase\" id=\"limiteFase\" name=\"limiteFase\">\n            </div>\n\n        \n            <div class=\"form-group col-md-2\">\n              <button class=\"btn btn-primary\" (click)=\"adicionaOutorgaFase()\">Adicionar</button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n\n  <table >\n\n    <tbody class=\"table\">\n\n      <tr *ngFor=\"let outrogaFase of outorga.outorgaFases; let i = index;\">\n        <td>{{outrogaFase.idOutrogaFase}}</td>\n        <td>{{outrogaFase.idOutorga}}</td>\n        <td>{{outrogaFase.nomeFase}}</td>\n        <td>{{outrogaFase.inicioFase}}</td>\n        <td>{{outrogaFase.fimFase}}</td>\n        <td>{{outrogaFase.limteFase}}</td>\n\n        <td><button class=\"btn btn-danger\" (click)=\"deletarOutorgaFase(outorgaFase.idOutorgaFase, i)\">Delete</button></td>\n      </tr>\n    </tbody>\n  </table>\n\n\n      <div class=\"form-row\">\n        <div class=\"form-group col-md-6\">\n            <button type=\"button\" class=\"btn btn-primary\" [routerLink]=\"['/outorgaList']\" routerLinkActive=\"router-link-active\">Voltar</button>\n            <button type=\"button\" class=\"btn btn-primary\" (click)=\"novo()\"  style=\"margin-left: 10px;\">Novo</button>\n            <button type=\"button\" class=\"btn btn-primary\" [disabled]=\"formValidate.invalid\" (click)=\"salvarOutorga()\"  style=\"margin-left: 10px;\">Salvar</button>\n        </div>\n    </div>\n\n</form>","import { OutorgaService } from './../../../../service/outorga.service';\nimport { Observable } from 'rxjs';\nimport { Component, OnInit } from '@angular/core';\nimport { Outorga } from 'src/app/model/Outorga';\n\n@Component({\n  selector: 'app-outorga',\n  templateUrl: './outorga.component.html',\n  styleUrls: ['./outorga.component.css']\n})\nexport class OutorgaComponent implements OnInit {\n\n  outorgas: Observable<Outorga[]>;\n\n  constructor(private outorgaService: OutorgaService) { }\n\n  ngOnInit(): void {\n    this.outorgaService.getOutorgaList().subscribe(data => {\n      this.outorgas = data;\n    });\n  }\n\n  excluirOutorga(id: Number) {\n\n    if (confirm('Deseja mesmo remover?')) {\n\n      this.outorgaService.deletarOutorga(id).subscribe(data => {\n       // console.log(\"Retorno do método delete : \" + data);\n\n       //this.culturas.splice(index, 1);/*Remover da tela*/\n       // this.usuarioService.getStudentList().subscribe(data => {\n       //   this.students = data;\n       // });\n\n      });\n    }\n  }\n\n}\n","<br/>\n<br/>\n\n<form class=\"form-inline\">\n    <button type=\"button\" [routerLink]=\"['/outorgaAdd']\" routerLinkActive=\"router-link-active\" style=\"margin-left: 5px;\"    class=\"btn btn-success mb-2\">Novo</button>\n  \n</form>\n<br/>\n<br/>\n<table class=\"table\">\n  <thead class=\"thread-dark\">\n    <tr>\n\n      <th scope=\"col\">Id Outorga</th>\n      <th scope=\"col\">Nome da Outorga</th>\n      <th scope=\"col\">Excluir</th>\n      <th scope=\"col\">Editar</th>\n     \n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let outorga of outorgas\">\n      <td>{{outorga.idOutorga}}</td>\n      <td>{{outorga.nomeOutorga}}</td>\n      <td><button (click)=\"excluirOutorga(outorga.idOutorga)\" class=\"btn btn-primary\">Excluir</button></td>\n      <td><button [routerLink]=\"['/outorgaAdd', outorga.idOutorga]\" routerLinkActive=\"router-link-active\" class=\"btn btn-warning\">Editar</button></td>\n\n    </tr>\n  </tbody>\n</table>","import { Router, ActivatedRoute } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { Fazenda } from 'src/app/model/Fazenda';\nimport { FazendaService } from 'src/app/service/fazenda.service';\n\n@Component({\n  selector: 'app-fazenda-add',\n  templateUrl: './fazenda-add.component.html',\n  styleUrls: ['./fazenda-add.component.css']\n})\nexport class FazendaAddComponent implements OnInit {\n\n  fazenda = new Fazenda();\n\n  constructor(\n    private router: Router,\n    private routeActive: ActivatedRoute,\n    private fazendaService: FazendaService\n  ) { }\n\n  ngOnInit(): void {\n    let id = this.routeActive.snapshot.paramMap.get('id');\n\n    if (id != null) {\n      this.fazendaService.getFazenda(id).subscribe(data => {\n        this.fazenda = data;\n      });\n    }\n  }\n\n  novo() {\n    this.fazenda = new Fazenda();\n  }\n\n  salvarFazenda() {\n    if (this.fazenda.idFazenda != null && this.fazenda.idFazenda.toString().trim() != null) { /* Atualizando ou Editando*/\n      this.fazendaService.updateFazenda(this.fazenda).subscribe(data => {\n        this.novo();\n        this.router.navigate(['fazendaList']);\n        console.info(\"Fazenda Atualizado: \" + data);\n      });\n    } else {\n      let idUsuario:Number =+ JSON.parse(localStorage.getItem('idUsuario'));\n      this.fazenda.idUsuario = idUsuario;\n      this.fazendaService.salvarFazenda(this.fazenda).subscribe(data => { /*Salvando um novo User */\n        this.novo();\n        this.router.navigate(['fazendaList']);\n        console.info(\"Gravou Fazenda: \" + data);\n      });\n    }\n  }\n\n}\n","<h3 style=\"padding: 10px;\">Fazendas</h3>\n\n<form style=\"padding: 10px\" #formValidate=\"ngForm\">\n\n    <div class=\"form-row\">\n        <div class=\"form-group col-md-1\">\n          <label for=\"idFazenda\">ID Fazenda</label>\n          <input type=\"text\" [(ngModel)]=\"fazenda.idFazenda\" class=\"form-control\" id=\"idFazenda\" readonly=\"true\" name=\"idFazenda\" autocomplete=\"false\">\n        </div>\n    </div>\n\n    <div class=\"form-row\">\n        <div class=\"form-group col-md-12\">\n          <label for=\"nomeFazenda\">Nome da Fazenda</label>\n          <span style=\"color: red; font-size: 23px;\" *ngIf=\"nomeValidate.invalid\"> *</span>\n          <input type=\"text\" [(ngModel)]=\"fazenda.nomeFazenda\" #nomeValidate=\"ngModel\" class=\"form-control\" id=\"nomeFazenda\" required=\"true\" name=\"nomeFazenda\" autocomplete=\"false\">\n        </div>\n    </div>\n\n    <div class=\"form-row\">\n        <div class=\"form-group col-md-4\">\n          <label for=\"area\">Área</label>\n          <span style=\"color: red; font-size: 23px;\" *ngIf=\"nomeValidate.invalid\"> *</span>\n          <input type=\"number\" [(ngModel)]=\"fazenda.area\" #nomeValidate=\"ngModel\" class=\"form-control\" id=\"area\" required=\"true\" name=\"area\" autocomplete=\"false\">\n        </div>\n\n        <div class=\"form-group col-md-4\">\n            <label for=\"altitude\">Altitude</label>\n            <span style=\"color: red; font-size: 23px;\" *ngIf=\"nomeValidate.invalid\"> *</span>\n            <input type=\"number\" [(ngModel)]=\"fazenda.altitude\" #nomeValidate=\"ngModel\" class=\"form-control\" id=\"altitude\" required=\"true\" name=\"altitude\" autocomplete=\"false\">\n          </div>\n    </div>\n\n    <div class=\"form-row\">\n        <div class=\"form-group col-md-4\">\n          <label for=\"dataCadastro\">Data de Cadastro</label>\n          <span style=\"color: red; font-size: 23px;\" *ngIf=\"nomeValidate.invalid\"> *</span>\n          <input type=\"date\" [(ngModel)]=\"fazenda.dataCadastro\" #nomeValidate=\"ngModel\" class=\"form-control\" id=\"dataCadastro\" required=\"true\" name=\"dataCadastro\" autocomplete=\"false\">\n        </div>\n    </div>\n\n      <div class=\"form-row\">\n        <div class=\"form-group col-md-6\">\n            <button type=\"button\" class=\"btn btn-primary\" [routerLink]=\"['/fazendaList']\" routerLinkActive=\"router-link-active\">Voltar</button>\n            <button type=\"button\" class=\"btn btn-primary\" (click)=\"novo()\" style=\"margin-left: 10px;\">Novo</button>\n            <button type=\"button\" class=\"btn btn-primary\" [disabled]=\"formValidate.invalid\" (click)=\"salvarFazenda()\"style=\"margin-left: 10px;\">Salvar</button>\n        </div>\n      </div>\n\n</form>","import { Observable } from 'rxjs';\nimport { Component, OnInit } from '@angular/core';\nimport { Fazenda } from 'src/app/model/Fazenda';\nimport { FazendaService } from 'src/app/service/fazenda.service';\n\n@Component({\n  selector: 'app-fazenda',\n  templateUrl: './fazenda.component.html',\n  styleUrls: ['./fazenda.component.css']\n})\nexport class FazendaComponent implements OnInit {\n\n  fazendas: Observable<Fazenda[]>;\n\n  constructor(\n    private fazendaService: FazendaService\n  ) { }\n\n  ngOnInit(): void {\n\n    let idUsuario:Number =+ JSON.parse(localStorage.getItem('idUsuario'));\n\n    this.fazendaService.getFazendasList(idUsuario).subscribe(data => {\n      this.fazendas = data;\n      //this.total = data.totalElements;\n    });\n  }\n\n  excluirFazenda(id: Number) {\n\n    if (confirm('Deseja mesmo remover?')) {\n\n      this.fazendaService.deletarFazenda(id).subscribe(data => {\n       // console.log(\"Retorno do método delete : \" + data);\n\n       //this.culturas.splice(index, 1);/*Remover da tela*/\n       // this.usuarioService.getStudentList().subscribe(data => {\n       //   this.students = data;\n       // });\n\n      });\n    }\n  }\n\n}\n","<br/>\n<br/>\n\n<form class=\"form-inline\">\n\n  <button type=\"button\" [routerLink]=\"['/fazendaAdd']\" routerLinkActive=\"router-link-active\" style=\"margin-left: 5px;\"    class=\"btn btn-success mb-2\">Novo</button>\n  \n</form>\n\n<br/>\n<br/>\n\n<table class=\"table\">\n  <thead class=\"thread-dark\">\n    <tr>\n      <th scope=\"col\">ID Fazenda</th>\n      <th scope=\"col\">Nome da Fazenda</th>\n      <th scope=\"col\">Vazão(l/h)</th>\n      <th scope=\"col\">Área(ha)</th> \n      <th scope=\"col\">Altitude</th>\n      <th scope=\"col\">Data de Cadastro</th>\n      <th scope=\"col\">Excluir</th>\n      <th scope=\"col\">Editar</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let fazenda of fazendas\">\n      <td>{{fazenda.idFazenda}}</td>\n      <td>{{fazenda.nomeFazenda}}</td>\n      <td>{{fazenda.area}}</td>\n      <td>{{fazenda.altitude}}</td>\n      <td>{{fazenda.dataCadastro}}</td>\n      <td><button (click)=\"excluirFazenda(fazenda.idFazenda)\" class=\"btn btn-primary\" class=\"btn btn-primary\">Delete</button></td>\n      <td><button [routerLink]=\"['/fazendaAdd', fazenda.idFazenda]\" routerLinkActive=\"router-link-active\"class=\"btn btn-warning\">Editar</button></td>\n\n    </tr>\n  </tbody>\n</table>\n\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Telefone } from 'src/app/model/Telefone';\nimport { User } from 'src/app/model/User';\nimport { UsuarioService } from 'src/app/service/usuario.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './usuario-add.component.html',\n  styleUrls: ['./usuario-add.component.css']\n})\nexport class UsuarioAddComponent implements OnInit {\n\n  usuario = new User();\n\n  telefone = new Telefone();\n\n  constructor(private routeActive: ActivatedRoute, private userService: UsuarioService) { }\n\n  ngOnInit() {\n    let id = this.routeActive.snapshot.paramMap.get('id');\n\n    if (id != null) {\n      this.userService.getStudant(id).subscribe(data => {\n        this.usuario = data;\n      });\n    }\n\n  }\n\n\n  salvarUser() {\n    if (this.usuario.idUsuario != null && this.usuario.idUsuario.toString().trim() != null) { /* Atualizando ou Editando*/\n      this.userService.updateUsuario(this.usuario).subscribe(data => {\n        this.novo();\n        console.info(\"User Atualizado: \" + data);\n      });\n    } else {\n      this.userService.salvarUsuario(this.usuario).subscribe(data => { /*Salvando um novo User */\n        this.novo();\n        console.info(\"Gravou User: \" + data);\n      });\n    }\n  }\n\n  novo() {\n    this.usuario = new User();\n    this.telefone = new Telefone();\n  }\n\n  deletarTelefone(id, i) {\n\n    if (id == null){\n      this.usuario.telefones.splice(i, 1);\n      return;\n    }\n\n    if (i !== null && confirm(\"Deseja remover?\")){\n      this.userService.removerTelefone(id).subscribe(data => {\n        this.usuario.telefones.splice(i, 1);\n      });\n    }\n  }\n\n  addFone() {\n    if (this.usuario.telefones === undefined){\n      this.usuario.telefones = new Array<Telefone>();\n    }\n\n    this.telefone.id = this.usuario.idUsuario;\n    this.usuario.telefones.push(this.telefone);\n    this.telefone = new Telefone();\n  }\n\n}\n","<h3 style=\"padding: 10px;\">Tela de usuario</h3>\n\n<form style=\"padding: 10px\" #formValidate=\"ngForm\">\n\n  <div class=\"form-row\">\n    <div class=\"form-group col-md-1\">\n      <label for=\"id\">ID</label>\n      <input type=\"text\" [(ngModel)]=\"usuario.idUsuario\" class=\"form-control\" id=\"idUsuario\" readonly=\"true\" name=\"idUsuario\" autocomplete=\"false\">\n      \n    </div>\n  </div>\n\n  <div class=\"form-row\">\n    <div class=\"form-group col-md-12\">\n      <label for=\"nome\">Nome</label>\n      <span style=\"color: red; font-size: 23px;\" *ngIf=\"nomeValidate.invalid\"> *</span>\n      <input type=\"text\" [(ngModel)]=\"usuario.nome\" #nomeValidate=\"ngModel\" class=\"form-control\" id=\"nome\" required=\"true\" name=\"nome\" autocomplete=\"false\">\n  \n    </div>\n  </div>\n\n  <div class=\"form-row\">\n    <div class=\"form-group col-md-6\">\n      <label for=\"login\">E-mail ou login</label>\n      <span style=\"color: red; font-size: 23px;\" *ngIf=\"loginValidate.invalid\"> *</span>\n      <input type=\"text\" [(ngModel)]=\"usuario.login\" #loginValidate=\"ngModel\" class=\"form-control\" id=\"login\" name=\"login\" required=\"true\" autocomplete=\"false\">\n    </div>\n\n\n    <div class=\"form-group col-md-6\">\n      <label for=\"senha\">Senha</label>\n      <span style=\"color: red; font-size: 23px;\" *ngIf=\"senhaValidate.invalid\"> *</span>\n      <input type=\"password\" [(ngModel)]=\"usuario.senha\" #senhaValidate=\"ngModel\" class=\"form-control\" id=\"senha\" name=\"senha\" required=\"true\" autocomplete=\"false\">\n    </div>\n\n  </div>\n\n  <div class=\"card text-center\">\n    <div class=\"card-header\">\n      Telefone Contato\n    </div>\n    <div class=\"card-body\" style=\"padding-left: 1px ;\">\n      <div class=\"form-row\">\n        <div class=\"form-group col-md-3\">\n          <input type=\"text\" mask=\"(00) 0 0000-0000\" class=\"form-controll\" [(ngModel)]=\"telefone.numero\" id=\"numero\" name=\"numero\">\n        </div>\n        <div class=\"form-group col-md-2\">\n          <button class=\"btn btn-primary\" (click)=\"addFone()\">Adicionar</button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <table>\n\n    <tbody class=\"table\">\n\n      <tr *ngFor=\"let fone of usuario.telefones; let i = index;\">\n        <td>{{fone.id}}</td>\n        <td>{{fone.numero | mask:'(00) 0 0000-0000' }}</td>\n        <td><button class=\"btn btn-danger\" (click)=\"deletarTelefone(fone.id, i)\">Delete</button></td>\n      </tr>\n    </tbody>\n  </table>\n\n  <div class=\"form-row\">\n    <div class=\"form-group col-md-6\">\n        <button type=\"button\" class=\"btn btn-primary\" [routerLink]=\"['/userList']\" routerLinkActive=\"router-link-active\" >Voltar</button>\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"novo()\"  style=\"margin-left: 10px;\">Novo</button>\n        <button type=\"button\" class=\"btn btn-primary\" [disabled]=\"formValidate.invalid\" (click)=\"salvarUser()\"  style=\"margin-left: 10px;\">Salvar</button>\n    </div>\n  </div>\n\n</form>","import { Component, OnInit } from '@angular/core';\nimport { UsuarioService } from 'src/app/service/usuario.service';\nimport { User } from 'src/app/model/User';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './usuario.component.html',\n  styleUrls: ['./usuario.component.css']\n})\nexport class UsuarioComponent implements OnInit {\n\n  students: Array<User[]>;\n  nome: String;\n  total: number;\n  p: number = 1;\n\n  constructor(private usuarioService: UsuarioService) { }\n\n  ngOnInit() {\n\n    this.usuarioService.getStudentList().subscribe(data => {\n      this.students = data.content;\n      this.total = data.totalElements;\n    });\n\n  }\n\n\n  deleteUsuario(id: Number, index) {\n\n    if (confirm('Deseja mesmo remover?')) {\n\n      this.usuarioService.deletarUsuario(id).subscribe(data => {\n       // console.log(\"Retorno do método delete : \" + data);\n\n       this.students.splice(index, 1);/*Remover da tela*/\n       // this.usuarioService.getStudentList().subscribe(data => {\n       //   this.students = data;\n       // });\n\n      });\n    }\n  }\n\n  consultarUser() {\n\n    if (this.nome === '') {\n      this.usuarioService.getStudentList().subscribe(data => {\n      this.students = data.content;\n      this.total = data.totalElements;\n      });\n    }else {\n      this.usuarioService.consultarUser(this.nome).subscribe(data => {\n      this.students = data.content;\n      this.total = data.totalElements;\n    });\n   }\n  }\n\n  carregarPagina(pagina){\n\n    if (this.nome != '') {\n      this.usuarioService.consultarUserPorPage(this.nome, (pagina -1)).subscribe(data => {\n        this.students = data.content;\n        this.total = data.totalElements;\n      });\n    }else {\n      this.usuarioService.getStudentListPage(pagina - 1).subscribe(data => {\n      this.students = data.content;\n      this.total = data.totalElements;\n    });\n\n  }\n}\n\n}\n","<br/>\n<br/>\n\n<form class=\"form-inline\">\n  <div class=\"form-group mx-sm-3 mb-2\">\n    <input type=\"text\" class=\"form-control\" id=\"nome\" name=\"nome\" [(ngModel)]=\"nome\" placeholder=\"Pesquisa por nome\">\n  </div>\n\n  <button type=\"button\" (click)=\"consultarUser()\"  class=\"btn btn-primary mb-2\">Buscar</button>\n\n\n  <button type=\"button\" [routerLink]=\"['/usuarioAdd']\" routerLinkActive=\"router-link-active\" style=\"margin-left: 5px;\"    class=\"btn btn-success mb-2\">Novo</button>\n  \n</form>\n\n<br/>\n<br/>\n\n<table class=\"table\">\n  <thead class=\"thread-dark\">\n    <tr>\n      <th scope=\"col\">ID</th>\n      <th scope=\"col\">Nome</th>\n      <th scope=\"col\">Login</th>\n      <th scope=\"col\">Delete</th>\n      <th scope=\"col\">Editar</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let student of students | paginate : { itemsPerPage : 5, currentPage : p, totalItems : total}; let i = index\">   \n\n      <td>{{student.idUsuario}}</td>\n      <td>{{student.nome}}</td>\n      <td>{{student.login}}</td>\n      <td><button (click)=\"deleteUsuario(student.idUsuario, i)\" class=\"btn btn-primary\">Delete</button></td>\n      <td><button [routerLink]=\"['/usuarioAdd', student.idUsuario]\" routerLinkActive=\"router-link-active\"   class=\"btn btn-warning\">Editar</button></td>\n\n    </tr>\n  </tbody>\n</table>\n\n<div class=\"text-center\">\n  <pagination-controls (pageChange)=\"carregarPagina(p = $event);\" \n  previousLabel = \"Voltar\" nextLabel = \"Avançar\" responsive=\"true\"></pagination-controls>\n</div>","import { User } from './../model/User';\nimport { UsuarioService } from 'src/app/service/usuario.service';\nimport { Observable } from 'rxjs';\nimport { ManejoService } from './../service/manejo.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Manejo } from '../model/Manejo';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  manejos: Observable<Manejo[]>;\n  usuarioLogado = new User();\n\n  constructor(\n    private manejoService: ManejoService,\n    private usuarioService: UsuarioService) { }\n\n  ngOnInit() {\n    \n  this.usuarioService.recuperarUsuario().subscribe(data => {\n    this.usuarioLogado = data;\n\n    localStorage.setItem('idUsuario', JSON.stringify(this.usuarioLogado.idUsuario));\n\n    console.info(\"home: \" + this.usuarioLogado.idUsuario);\n    let idUsuario:Number =+ JSON.parse(localStorage.getItem('idUsuario'));\n    \n    this.manejoService.buscarManejo(idUsuario).subscribe(data => {\n        this.manejos = data;\n });\n\n \n });\n\n  \n  }\n\n}\n","<br/>\n<br/>\n\n<table class=\"table\">\n  <thead class=\"thread-dark\">\n    <tr>\n      <th scope=\"col\">Data</th>\n      <th scope=\"col\">Parcela</th>\n      <th scope=\"col\">Cultura</th>\n      <th scope=\"col\">Irrigação Necessária(mm)</th>\n      <th scope=\"col\">Tempo Necessário</th>\n      <th scope=\"col\">Percentimetro(%)</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let manejo of manejos \">\n      <td>{{manejo.dataManejo}}</td>\n      <td>{{manejo.idParcela}}</td>\n      <td>{{manejo.irrigacaoNecessaria}}</td>\n      <td>{{manejo.irrigacaoNecessaria}}</td>\n      <td>{{manejo.irrigacaoNecessaria}}</td>\n      <td>{{manejo.irrigacaoNecessaria}}</td>\n    </tr>\n  </tbody>\n</table>","import { UsuarioService } from './../service/usuario.service';\nimport { Component, OnInit } from '@angular/core';\nimport { LoginServiceService } from '../service/login-service.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  usuario = { login: '', senha: '' };\n\n  constructor(\n    private loginService: LoginServiceService, \n    private router: Router) { }\n\n\n  public login() {\n    this.loginService.login(this.usuario);\n    localStorage.setItem('loginUsuario', this.usuario.login);\n    console.info(\"arar \" + localStorage.getItem('loginUsuario'));\n  }\n\n  ngOnInit() {\n    if (localStorage.getItem('token') !== null &&\n      localStorage.getItem('token').toString().trim() !== null) {\n      this.router.navigate(['home']);\n    }\n  }\n\n}\n","\n<form >\n\n  <div class=\"form-group\"> \n\n     <h3>Login do sistema</h3>\n  </div> \n\n  <div class=\"form-group\">  \n    <label for=\"login\">E-mail:</label>\n    <input type=\"email\" class=\"form-control\" #email=\"ngModel\"  [(ngModel)] = \"usuario.login\"  id=\"login\" name=\"login\"   required>\n    <div *ngIf=\"email.invalid\" class=\"alert alert-danger\">\n       Login deve ser informado\n    </div>\n\n  </div>\n\n  <div class=\"form-group\"> \n    <label for=\"senha\">Senha:</label>\n    <input type=\"password\" class=\"form-control\" #senha=\"ngModel\"  [(ngModel)]=\"usuario.senha\" id=\"senha\" name=\"senha\"  required>\n     <div *ngIf=\"senha.invalid\" class=\"alert alert-danger\">\n       Senha deve ser informada\n    </div>\n  </div>\n\n  <button type=\"button\" [disabled]=\"email.invalid || senha.invalid\" class=\"btn btn-primary\" (click)=\"login()\"  >Acessar</button>\n</form>","export class Clima {\n\t\t\n\tidClima: Number;\n\tidFazenda: Number;\n\tdataClima: String;\n\ttemperaturaMaxima: Number;\n\ttemperaturaMinima: Number;\n\ttemperaturaMedia: Number;\n\tumidadeRelativa: Number;\n\tvelocidadeVento: Number;\n\tprecipitacao: Number;\n\tradiacaoMedia: Number;\n\n}\n","import { CulturaFase } from './CulturaFase';\n\nexport class Cultura {\n\t\t\n\tidCultura: Number;\n\tidFazenda: Number;\n\tnomeCultura: String;\n\n\tculturaFases: Array<CulturaFase>;\n}\n","export class CulturaFase {\n\n    idCulturaFase: Number;\n    idCultura: Number;\n    nomeFase: String;\n    inicioFase: Number\n    fimFase: Number;\n    kc: Number;\n    profundidadeRaiz: Number;\n    pontoMurcha: Number;\n    capacidadeCampo: Number;\n    areaSombreada: Number;\n    limite: Number;\n    densidadeAparente: Number;\n\n}","export class Fazenda {\n\n\tidFazenda: Number;\n\tidUsuario: Number;\n\tnomeFazenda: String;\n\tarea: String;\n\taltitude: String;\n\tdataCadastro: String;\n\t\n}\n","export class Gotejador {\n\t\t\n\tidGotejador: Number;\n\tidFazenda: Number;\n\tnomeGotejador: String;\n    vazaoGotejador: Number;\n    espacamentoGotejador: Number;\n    espacamentoLinha: Number;\n    larguraFaixaMolhada: Number;\n    uniformidade: Number;\n    laminaGotejador: Number;\n   \n}\n","import { OutorgaFase } from \"./OutorgaFase\";\n\nexport class Outorga {\n\t\t\n\tidOutorga: Number;\n\tidFazenda: Number;\n\tnomeOutorga: String; \n\n\toutorgaFases: Array<OutorgaFase>;\n}\n","export class OutorgaFase {\n\t\t\n\tidOutorgaFase: Number;\n\tidOutorga: Number;\n\tnomeFase: String; \n\tlimiteFase: Number;\n\tinicioFase: String;\n\tfimFase: String;\n}\n","export class Telefone {\n    id: Number;\n    numero: String;\n}","import { Fazenda } from './Fazenda';\nimport { Telefone } from \"./Telefone\";\n\nexport class User {\n\tidUsuario: Number;\n\tlogin: String;\n\tsenha: String;\n\tnome: String;\n\n\tfazendas: Array<Fazenda>;\n\n\ttelefones: Array<Telefone>;\n}\n","import { Clima } from './../model/Clima';\nimport { AppConstants } from '../app-constants';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClimaService {\n\n\n  constructor(private http: HttpClient) {\n  }\n\n  getClimaList(): Observable<any> {\n    return this.http.get<any>(AppConstants.baseUrlClimas);\n  }\n\n  getClima(id): Observable<any> {\n    return this.http.get<any>(AppConstants.baseUrlClimas + id);\n  }\n\n\n  salvarClima(clima): Observable<any> {\n    console.info(\"clima bug: \" + JSON.stringify(clima));\n    return this.http.post<any>(AppConstants.baseUrlClimas, clima);\n  }\n\n  updateClima(clima): Observable<any> {\n    return this.http.put<any>(AppConstants.baseUrlClimas, clima);\n  }\n\n  deletarClima(id: Number): Observable<any> {\n    return this.http.delete(AppConstants.baseUrlClimas + id, { responseType: 'text' });\n  }\n\n\n}\n","import { User } from './../model/User';\nimport { AppConstants } from './../app-constants';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CulturaService {\n\n\n  constructor(private http: HttpClient) {\n  }\n\n  getCulturaList(): Observable<any> {\n    return this.http.get<any>(AppConstants.baseUrlCultura);\n  }\n\n  getCultura(id): Observable<any> {\n    return this.http.get<any>(AppConstants.baseUrlCultura + id);\n  }\n\n\n  salvarCultura(cultura): Observable<any> {\n    console.info(\"cultura bug: \" + JSON.stringify(cultura));\n    return this.http.post<any>(AppConstants.baseUrlCultura, cultura);\n  }\n\n  updateCultura(cultura): Observable<any> {\n    return this.http.put<any>(AppConstants.baseUrlCultura, cultura);\n  }\n\n  deletarCultura(id: Number): Observable<any> {\n    return this.http.delete(AppConstants.baseUrlCultura + id, { responseType: 'text' });\n  }\n\n  removerCulturaFase(id): Observable<any> {\n    return this.http.delete(AppConstants.baseUrlPath + \"removerCulturaFase/\" + id, { responseType: 'text' });\n  }\n\n\n}\n","import { AppConstants } from '../app-constants';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FazendaService {\n\n\n  constructor(private http: HttpClient) {\n  }\n\n  getFazendasList(idUsuario): Observable<any> {\n    return this.http.get<any>(AppConstants.baseUrlFazenda + \"buscaFazendas/\"+ idUsuario);\n  }\n\n  getFazenda(id): Observable<any> {\n    return this.http.get<any>(AppConstants.baseUrlFazenda + id);\n  }\n\n  deletarFazenda(id: Number): Observable<any> {\n    return this.http.delete(AppConstants.baseUrlFazenda + id, { responseType: 'text' });\n  }\n\n  salvarFazenda(fazenda): Observable<any> {\n    return this.http.post<any>(AppConstants.baseUrlFazenda, fazenda);\n  }\n\n  updateFazenda(fazenda): Observable<any> {\n    console.info(\"update: \" + JSON.stringify(fazenda));\n    return this.http.put<any>(AppConstants.baseUrlFazenda, fazenda);\n  }\n\n\n}\n","import { AppConstants } from '../app-constants';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GotejadorService {\n\n\n  constructor(private http: HttpClient) {\n  }\n\n  getGotejadorList(): Observable<any> {\n    return this.http.get<any>(AppConstants.baseUrlGotejador);\n  }\n\n  getGotejador(id): Observable<any> {\n    return this.http.get<any>(AppConstants.baseUrlGotejador + id);\n  }\n\n\n  salvarGotejador(gotejador): Observable<any> {\n    console.info(\"gotejador bug: \" + JSON.stringify(gotejador));\n    return this.http.post<any>(AppConstants.baseUrlGotejador, gotejador);\n  }\n\n  updateGotejador(gotejador): Observable<any> {\n    return this.http.put<any>(AppConstants.baseUrlGotejador, gotejador);\n  }\n\n  deletarGotejador(id: Number): Observable<any> {\n    return this.http.delete(AppConstants.baseUrlGotejador + id, { responseType: 'text' });\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { UsuarioService } from './usuario.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GuardiaoGuard implements CanActivate {\n\n\n  constructor(private userServcice: UsuarioService) {\n\n  }\n\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return this.userServcice.userAutenticado();\n  }\n\n}\n","import { Injectable, NgModule } from '@angular/core';\nimport { HttpInterceptor, HTTP_INTERCEPTORS, HttpErrorResponse, HttpEvent, HttpResponse } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\n\n\n@Injectable()\nexport class HeaderInterceptorService implements HttpInterceptor {\n\n  intercept(req: import(\"@angular/common/http\").HttpRequest<any>, next: import(\"@angular/common/http\").HttpHandler): import(\"rxjs\").Observable<import(\"@angular/common/http\").HttpEvent<any>> {\n\n    if (localStorage.getItem('token') !== null) {\n      const token = 'Bearer ' + localStorage.getItem('token');\n\n      const tokenRequest = req.clone({\n        headers: req.headers.set('Authorization', token)\n      });\n\n      return next.handle(tokenRequest).pipe(\n\n        tap((event: HttpEvent<any>) => {\n          if (event instanceof HttpResponse && (event.status === 200 || event.status === 201)) {\n            console.info('Sucesso na operação');\n          }\n        })\n\n        , catchError(this.processaError));\n    } else {\n      return next.handle(req).pipe(catchError(this.processaError));\n    }\n\n  }\n\n  constructor() { }\n\n\n  processaError(error: HttpErrorResponse) {\n    let errorMessage = 'Erro desconhecido';\n    if (error.error instanceof ErrorEvent) {\n      console.error(error.error);\n      errorMessage = 'Error: ' + error.error.error;\n    } else {\n      errorMessage = 'Código: ' + error.error.code + '\\nMensagem: ' + error.error.error;\n    }\n    window.alert(errorMessage)\n    return throwError(errorMessage);\n  }\n\n}\n\n@NgModule({\n  providers: [{\n    provide: HTTP_INTERCEPTORS,\n    useClass: HeaderInterceptorService,\n    multi: true,\n  },\n  ],\n})\n\nexport class HttpInterceptorModule {\n\n}\n","import { AppConstants } from '../app-constants';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IrrigacaoService {\n\n\n  constructor(private http: HttpClient) {\n  }\n\n  getIrrigacaoList(): Observable<any> {\n    return this.http.get<any>(AppConstants.baseUrlIrrigacoes);\n  }\n\n  getIrrigacao(id): Observable<any> {\n    return this.http.get<any>(AppConstants.baseUrlIrrigacoes + id);\n  }\n\n\n  salvarIrrigacao(irrigacao): Observable<any> {\n    console.info(\"Irrigacao bug: \" + JSON.stringify(irrigacao));\n    return this.http.post<any>(AppConstants.baseUrlIrrigacoes, irrigacao);\n  }\n\n  updateIrrigacao(irrigacao): Observable<any> {\n    return this.http.put<any>(AppConstants.baseUrlIrrigacoes, irrigacao);\n  }\n\n  deletarIrrigacao(id: Number): Observable<any> {\n    return this.http.delete(AppConstants.baseUrlIrrigacoes + id, { responseType: 'text' });\n  }\n\n\n}\n","import { map } from 'rxjs/operators';\nimport { User } from './../model/User';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AppConstants } from '../app-constants';\nimport {Router} from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginServiceService {\n  \n\n  constructor(private http: HttpClient, private router: Router) { }\n\n \n\n    login(usuario){\n\n \n       return this.http.post(AppConstants.baseLogin ,JSON.stringify(usuario)).subscribe(data => {\n\n          /*Retorno Http*/ \n\n          var token = JSON.parse(JSON.stringify(data)).Authorization.split(' ')[1];\n\n          localStorage.setItem(\"token\", token);\n\n          //console.info(\"Tohken: \" + localStorage.getItem(\"token\") + usuario);\n\n          this.router.navigate(['home']);\n\n       },\n         error => {\n      \n          console.error(\"Erro ao fazer login \");\n          alert('Acesso Negado!')\n         }\n       );\n    }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AppConstants } from '../app-constants';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ManejoService {\n\n\n  constructor(private http: HttpClient) {\n  }\n\n  buscarManejo(idParcela: Number): Observable<any> {\n    \n    return this.http.get<any>(AppConstants.baseServidor + \"controlirrigationapi/manejos/\" + idParcela);\n\n  }\n\n}\n","import { User } from '../model/User';\nimport { AppConstants } from '../app-constants';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OutorgaService {\n\n\n  constructor(private http: HttpClient) {\n  }\n\n  getOutorgaList(): Observable<any> {\n    return this.http.get<any>(AppConstants.baseUrlOutorga);\n  }\n\n  getOutorga(id): Observable<any> {\n    return this.http.get<any>(AppConstants.baseUrlOutorga + id);\n  }\n\n\n  salvarOutorga(outorga): Observable<any> {\n    console.info(\"outorga bug: \" + JSON.stringify(outorga));\n    return this.http.post<any>(AppConstants.baseUrlOutorga, outorga);\n  }\n\n  updateOutorga(outorga): Observable<any> {\n    console.info(\"outorga up bug: \" + JSON.stringify(outorga));\n    return this.http.put<any>(AppConstants.baseUrlOutorga, outorga);\n  }\n\n  deletarOutorga(id: Number): Observable<any> {\n    return this.http.delete(AppConstants.baseUrlOutorga + id, { responseType: 'text' });\n  }\n\n  removerOutorgaFase(id): Observable<any> {\n    return this.http.delete(AppConstants.baseUrlPath + \"removerOutrogaFase/\" + id, { responseType: 'text' });\n  }\n\n\n}\n","import { User } from './../model/User';\nimport { AppConstants } from './../app-constants';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsuarioService {\n\n\n  constructor(private http: HttpClient) {\n  }\n\n  getStudentList(): Observable<any> {\n    return this.http.get<any>(AppConstants.baseUrl);\n  }\n\n  getStudentListPage(pagina): Observable<any> {\n    return this.http.get<any>(AppConstants.baseUrl + 'page/' + pagina);\n  }\n\n  getStudant(id): Observable<any> {\n    return this.http.get<any>(AppConstants.baseUrl + id);\n  }\n\n\n  deletarUsuario(id: Number): Observable<any> {\n    return this.http.delete(AppConstants.baseUrl + id, { responseType: 'text' });\n  }\n\n\n  //http://localhost:8080/cursospringrestapi/usuario/usuarioPorNome/alex\n  consultarUser(nome: String): Observable<any> {\n    return this.http.get(AppConstants.baseUrl + \"usuarioPorNome/\" + nome);\n\n  }\n\n  consultarUserPorPage(nome: String, page: Number): Observable<any> {\n    return this.http.get(AppConstants.baseUrl + \"usuarioPorNome/\" + nome + \"/page/\" + page);\n\n  }\n\n  salvarUsuario(user): Observable<any> {\n    return this.http.post<any>(AppConstants.baseUrl, user);\n  }\n\n  updateUsuario(user): Observable<any> {\n    return this.http.put<any>(AppConstants.baseUrl, user);\n  }\n\n  userAutenticado() {\n\n    if (localStorage.getItem('token') !== null &&\n      localStorage.getItem('token').toString().trim() !== null) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  recuperarUsuario(): Observable<any>{\n\n    let user = new User();\n    user.login = localStorage.getItem('loginUsuario');\n\n  return this.http.post<any>(AppConstants.baseUrlPath + 'recuperar/', user);\n\n}\n\n  removerTelefone(id): Observable<any> {\n    return this.http.delete(AppConstants.baseUrl + \"removerTelefone/\" + id, { responseType: 'text' });\n  }\n\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}