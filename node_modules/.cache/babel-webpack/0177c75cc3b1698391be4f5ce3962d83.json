{"ast":null,"code":"import { Attribute, ChangeDetectionStrategy, ChangeDetectorRef, Component, ComponentFactoryResolver, ContentChild, ContentChildren, Directive, ElementRef, EventEmitter, Host, HostBinding, HostListener, Inject, Injectable, InjectionToken, Injector, Input, IterableDiffers, LOCALE_ID, NgModule, NgZone, Optional, Output, PLATFORM_ID, Renderer2, SimpleChange, SkipSelf, TemplateRef, Type, ViewChild, ViewChildren, ViewContainerRef, forwardRef, isDevMode, ɵɵdefineInjectable, ɵɵinject } from '@angular/core';\nimport * as i0 from '@angular/core';\nimport { CommonModule, DOCUMENT, DatePipe, FormStyle, FormatWidth, Location, TranslationWidth, getLocaleDayNames, getLocaleFirstDayOfWeek, getLocaleMonthNames, getLocaleTimeFormat, isPlatformBrowser } from '@angular/common';\nimport { BehaviorSubject, EMPTY, Observable, ReplaySubject, Subject, combineLatest, forkJoin, from, fromEvent, interval, merge, of, timer } from 'rxjs';\nimport { debounceTime, delay, distinctUntilChanged, filter, finalize, map, pairwise, publish, refCount, repeat, share, skip, startWith, switchMap, take, takeUntil, takeWhile, tap } from 'rxjs/operators';\nimport { FormsModule, NG_VALIDATORS, NG_VALUE_ACCESSOR, Validators } from '@angular/forms';\nimport { ActivatedRoute, NavigationEnd, Router, RouterModule } from '@angular/router';\nimport { ActiveDescendantKeyManager, FocusKeyManager, FocusMonitor, FocusTrap, FocusTrapFactory, InteractivityChecker } from '@angular/cdk/a11y';\nimport { CdkPortal, CdkPortalOutlet, ComponentPortal, PortalInjector, PortalModule, TemplatePortal } from '@angular/cdk/portal';\nimport { BlockScrollStrategy, FlexibleConnectedPositionStrategy, GlobalPositionStrategy, Overlay, OverlayContainer, OverlayModule, OverlayPositionBuilder, ScrollDispatcher, ScrollStrategyOptions, ViewportRuler } from '@angular/cdk/overlay';\nimport { Platform } from '@angular/cdk/platform';\nimport * as i1 from '@angular/cdk/platform';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport 'intersection-observer';\nimport { BidiModule, Directionality } from '@angular/cdk/bidi';\nimport { CdkCell, CdkCellDef, CdkCellOutlet, CdkColumnDef, CdkFooterCell, CdkFooterCellDef, CdkFooterRow, CdkFooterRowDef, CdkHeaderCell, CdkHeaderCellDef, CdkHeaderRow, CdkHeaderRowDef, CdkRow, CdkRowDef, CdkTable, CdkTableModule, DataRowOutlet, DataSource, FooterRowOutlet, HeaderRowOutlet, NoDataRowOutlet, STICKY_POSITIONING_LISTENER, _COALESCED_STYLE_SCHEDULER, _CoalescedStyleScheduler } from '@angular/cdk/table';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { _DisposeViewRepeaterStrategy, _VIEW_REPEATER_STRATEGY } from '@angular/cdk/collections';\nimport { BACKSPACE, DELETE, ENTER, ESCAPE, SPACE } from '@angular/cdk/keycodes';\nimport * as _angular_cdk_keycodes from '@angular/cdk/keycodes';\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from '@angular/cdk/overlay';\nimport * as ɵngcc4 from '@angular/platform-browser';\nimport * as ɵngcc5 from '@angular/router';\nimport * as ɵngcc6 from '@angular/forms';\nimport * as ɵngcc7 from '@angular/cdk/table';\n\nfunction NbOverlayContainerComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r0.content);\n  }\n}\n\nfunction NbOverlayContainerComponent_ng_template_1_Template(rf, ctx) {}\n\nconst _c0 = [\"*\"];\nconst _c1 = [[[\"nb-card-header\"]], [[\"nb-card-body\"]], \"*\", [[\"nb-card-footer\"]]];\nconst _c2 = [\"nb-card-header\", \"nb-card-body\", \"*\", \"nb-card-footer\"];\n\nfunction NbRevealCardComponent_a_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"a\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function NbRevealCardComponent_a_3_Template_a_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r2);\n      const ctx_r1 = ɵngcc0.ɵɵnextContext();\n      return ctx_r1.toggle();\n    });\n    ɵngcc0.ɵɵelement(1, \"nb-icon\", 3);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nconst _c3 = [[[\"nb-card-front\"]], [[\"nb-card-back\"]]];\nconst _c4 = [\"nb-card-front\", \"nb-card-back\"];\n\nfunction NbFlipCardComponent_a_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"a\", 4);\n    ɵngcc0.ɵɵlistener(\"click\", function NbFlipCardComponent_a_3_Template_a_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      const ctx_r2 = ɵngcc0.ɵɵnextContext();\n      return ctx_r2.toggle();\n    });\n    ɵngcc0.ɵɵelement(1, \"nb-icon\", 5);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction NbFlipCardComponent_a_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"a\", 4);\n    ɵngcc0.ɵɵlistener(\"click\", function NbFlipCardComponent_a_6_Template_a_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      const ctx_r4 = ɵngcc0.ɵɵnextContext();\n      return ctx_r4.toggle();\n    });\n    ɵngcc0.ɵɵelement(1, \"nb-icon\", 5);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nconst _c5 = [[[\"nb-card\"]]];\nconst _c6 = [\"nb-card\"];\nconst _c7 = [\"nbButton\", \"\"];\n\nfunction NbCalendarDayPickerComponent_nb_calendar_week_numbers_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"nb-calendar-week-numbers\", 4);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"weeks\", ctx_r0.weeks)(\"size\", ctx_r0.size)(\"weekNumberSymbol\", ctx_r0.weekNumberSymbol);\n  }\n}\n\nfunction NbCalendarDaysNamesComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const day_r1 = ctx.$implicit;\n    ɵngcc0.ɵɵclassProp(\"holiday\", day_r1.isHoliday);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(day_r1.name);\n  }\n}\n\nfunction NbCalendarPickerComponent_nb_calendar_picker_row_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"nb-calendar-picker-row\", 1);\n    ɵngcc0.ɵɵlistener(\"select\", function NbCalendarPickerComponent_nb_calendar_picker_row_0_Template_nb_calendar_picker_row_select_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      const ctx_r2 = ɵngcc0.ɵɵnextContext();\n      return ctx_r2.select.emit($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const row_r1 = ctx.$implicit;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"row\", row_r1)(\"visibleDate\", ctx_r0.visibleDate)(\"selectedValue\", ctx_r0.selectedValue)(\"component\", ctx_r0.cellComponent)(\"min\", ctx_r0.min)(\"max\", ctx_r0.max)(\"filter\", ctx_r0.filter)(\"size\", ctx_r0.size);\n  }\n}\n\nfunction NbCalendarPickerRowComponent_ng_template_0_Template(rf, ctx) {}\n\nfunction NbCalendarWeekNumberComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 3);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const weekNumber_r1 = ctx.$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(weekNumber_r1);\n  }\n}\n\nconst _c8 = \"[_nghost-%COMP%]{display:flex;flex-direction:column}\";\n\nfunction NbBaseCalendarComponent_nb_card_header_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"nb-card-header\", 5);\n    ɵngcc0.ɵɵelementStart(1, \"nb-calendar-view-mode\", 6);\n    ɵngcc0.ɵɵlistener(\"changeMode\", function NbBaseCalendarComponent_nb_card_header_1_Template_nb_calendar_view_mode_changeMode_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      const ctx_r4 = ɵngcc0.ɵɵnextContext();\n      return ctx_r4.onChangeViewMode();\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(2, \"nb-calendar-pageable-navigation\", 7);\n    ɵngcc0.ɵɵlistener(\"prev\", function NbBaseCalendarComponent_nb_card_header_1_Template_nb_calendar_pageable_navigation_prev_2_listener() {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      const ctx_r6 = ɵngcc0.ɵɵnextContext();\n      return ctx_r6.navigatePrev();\n    })(\"next\", function NbBaseCalendarComponent_nb_card_header_1_Template_nb_calendar_pageable_navigation_next_2_listener() {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      const ctx_r7 = ɵngcc0.ɵɵnextContext();\n      return ctx_r7.navigateNext();\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"date\", ctx_r0.visibleDate)(\"viewMode\", ctx_r0.activeViewMode);\n  }\n}\n\nfunction NbBaseCalendarComponent_nb_calendar_day_picker_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"nb-calendar-day-picker\", 8);\n    ɵngcc0.ɵɵlistener(\"dateChange\", function NbBaseCalendarComponent_nb_calendar_day_picker_3_Template_nb_calendar_day_picker_dateChange_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r9);\n      const ctx_r8 = ɵngcc0.ɵɵnextContext();\n      return ctx_r8.dateChange.emit($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"boundingMonths\", ctx_r1.boundingMonth)(\"cellComponent\", ctx_r1.dayCellComponent)(\"min\", ctx_r1.min)(\"max\", ctx_r1.max)(\"filter\", ctx_r1.filter)(\"visibleDate\", ctx_r1.visibleDate)(\"size\", ctx_r1.size)(\"date\", ctx_r1.date)(\"showWeekNumber\", ctx_r1.showWeekNumber)(\"weekNumberSymbol\", ctx_r1.weekNumberSymbol);\n  }\n}\n\nfunction NbBaseCalendarComponent_nb_calendar_year_picker_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"nb-calendar-year-picker\", 9);\n    ɵngcc0.ɵɵlistener(\"yearChange\", function NbBaseCalendarComponent_nb_calendar_year_picker_4_Template_nb_calendar_year_picker_yearChange_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r11);\n      const ctx_r10 = ɵngcc0.ɵɵnextContext();\n      ctx_r10.setVisibleDate($event);\n      return ctx_r10.setViewMode(ctx_r10.ViewMode.MONTH);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"cellComponent\", ctx_r2.yearCellComponent)(\"date\", ctx_r2.date)(\"min\", ctx_r2.min)(\"max\", ctx_r2.max)(\"filter\", ctx_r2.filter)(\"size\", ctx_r2.size)(\"year\", ctx_r2.visibleDate);\n  }\n}\n\nfunction NbBaseCalendarComponent_nb_calendar_month_picker_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"nb-calendar-month-picker\", 10);\n    ɵngcc0.ɵɵlistener(\"monthChange\", function NbBaseCalendarComponent_nb_calendar_month_picker_5_Template_nb_calendar_month_picker_monthChange_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r13);\n      const ctx_r12 = ɵngcc0.ɵɵnextContext();\n      ctx_r12.setVisibleDate($event);\n      return ctx_r12.setViewMode(ctx_r12.ViewMode.DATE);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"cellComponent\", ctx_r3.monthCellComponent)(\"min\", ctx_r3.min)(\"max\", ctx_r3.max)(\"filter\", ctx_r3.filter)(\"size\", ctx_r3.size)(\"month\", ctx_r3.visibleDate)(\"date\", ctx_r3.date);\n  }\n}\n\nfunction NbTimePickerComponent_nb_card_0_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 8);\n    ɵngcc0.ɵɵtext(2, \"Time\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction NbTimePickerComponent_nb_card_0_ng_template_3_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 8);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r8.secondsText);\n  }\n}\n\nfunction NbTimePickerComponent_nb_card_0_ng_template_3_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 8);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r9 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r9.ampmText);\n  }\n}\n\nfunction NbTimePickerComponent_nb_card_0_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 8);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(2, \"div\", 8);\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(4, NbTimePickerComponent_nb_card_0_ng_template_3_div_4_Template, 2, 1, \"div\", 9);\n    ɵngcc0.ɵɵtemplate(5, NbTimePickerComponent_nb_card_0_ng_template_3_div_5_Template, 2, 1, \"div\", 9);\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r3.hoursText);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r3.minutesText);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r3.withSeconds);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r3.twelveHoursFormat);\n  }\n}\n\nfunction NbTimePickerComponent_nb_card_0_ng_container_6_nb_list_item_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"nb-list-item\", 12);\n    ɵngcc0.ɵɵelementStart(1, \"nb-timepicker-cell\", 13);\n    ɵngcc0.ɵɵlistener(\"select\", function NbTimePickerComponent_nb_card_0_ng_container_6_nb_list_item_2_Template_nb_timepicker_cell_select_1_listener() {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r13);\n      const item_r11 = restoredCtx.$implicit;\n      const ctx_r12 = ɵngcc0.ɵɵnextContext(3);\n      return ctx_r12.selectFullTime(item_r11);\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r11 = ctx.$implicit;\n    const ctx_r10 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵclassProp(\"selected\", ctx_r10.isSelectedFullTimeValue(item_r11));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"value\", ctx_r10.getFullTimeString(item_r11))(\"selected\", ctx_r10.isSelectedFullTimeValue(item_r11));\n  }\n}\n\nfunction NbTimePickerComponent_nb_card_0_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"nb-list\", 10);\n    ɵngcc0.ɵɵtemplate(2, NbTimePickerComponent_nb_card_0_ng_container_6_nb_list_item_2_Template, 2, 4, \"nb-list-item\", 11);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r4.fullTimeOptions)(\"ngForTrackBy\", ctx_r4.trackBySingleColumnValue.bind(ctx_r4));\n  }\n}\n\nfunction NbTimePickerComponent_nb_card_0_ng_template_7_nb_list_item_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"nb-list-item\", 12);\n    ɵngcc0.ɵɵelementStart(1, \"nb-timepicker-cell\", 13);\n    ɵngcc0.ɵɵlistener(\"select\", function NbTimePickerComponent_nb_card_0_ng_template_7_nb_list_item_1_Template_nb_timepicker_cell_select_1_listener() {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r20);\n      const item_r18 = restoredCtx.$implicit;\n      const ctx_r19 = ɵngcc0.ɵɵnextContext(3);\n      return ctx_r19.setHour(item_r18.value);\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r18 = ctx.$implicit;\n    const ctx_r14 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵclassProp(\"selected\", ctx_r14.isSelectedHour(item_r18.value));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"value\", item_r18.text)(\"selected\", ctx_r14.isSelectedHour(item_r18.value));\n  }\n}\n\nfunction NbTimePickerComponent_nb_card_0_ng_template_7_nb_list_item_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"nb-list-item\", 12);\n    ɵngcc0.ɵɵelementStart(1, \"nb-timepicker-cell\", 13);\n    ɵngcc0.ɵɵlistener(\"select\", function NbTimePickerComponent_nb_card_0_ng_template_7_nb_list_item_3_Template_nb_timepicker_cell_select_1_listener() {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r23);\n      const item_r21 = restoredCtx.$implicit;\n      const ctx_r22 = ɵngcc0.ɵɵnextContext(3);\n      return ctx_r22.setMinute(item_r21.value);\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r21 = ctx.$implicit;\n    const ctx_r15 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵclassProp(\"selected\", ctx_r15.isSelectedMinute(item_r21.value));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"value\", item_r21.text)(\"selected\", ctx_r15.isSelectedMinute(item_r21.value));\n  }\n}\n\nfunction NbTimePickerComponent_nb_card_0_ng_template_7_nb_list_4_nb_list_item_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r27 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"nb-list-item\", 12);\n    ɵngcc0.ɵɵelementStart(1, \"nb-timepicker-cell\", 13);\n    ɵngcc0.ɵɵlistener(\"select\", function NbTimePickerComponent_nb_card_0_ng_template_7_nb_list_4_nb_list_item_1_Template_nb_timepicker_cell_select_1_listener() {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r27);\n      const item_r25 = restoredCtx.$implicit;\n      const ctx_r26 = ɵngcc0.ɵɵnextContext(4);\n      return ctx_r26.setSecond(item_r25.value);\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r25 = ctx.$implicit;\n    const ctx_r24 = ɵngcc0.ɵɵnextContext(4);\n    ɵngcc0.ɵɵclassProp(\"selected\", ctx_r24.isSelectedSecond(item_r25.value));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"value\", item_r25.text)(\"selected\", ctx_r24.isSelectedSecond(item_r25.value));\n  }\n}\n\nfunction NbTimePickerComponent_nb_card_0_ng_template_7_nb_list_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"nb-list\", 10);\n    ɵngcc0.ɵɵtemplate(1, NbTimePickerComponent_nb_card_0_ng_template_7_nb_list_4_nb_list_item_1_Template, 2, 4, \"nb-list-item\", 11);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r16 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r16.secondsColumnOptions)(\"ngForTrackBy\", ctx_r16.trackByTimeValues);\n  }\n}\n\nfunction NbTimePickerComponent_nb_card_0_ng_template_7_nb_list_5_nb_list_item_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r31 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"nb-list-item\", 16);\n    ɵngcc0.ɵɵelementStart(1, \"nb-timepicker-cell\", 13);\n    ɵngcc0.ɵɵlistener(\"select\", function NbTimePickerComponent_nb_card_0_ng_template_7_nb_list_5_nb_list_item_1_Template_nb_timepicker_cell_select_1_listener() {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r31);\n      const dayPeriod_r29 = restoredCtx.$implicit;\n      const ctx_r30 = ɵngcc0.ɵɵnextContext(4);\n      return ctx_r30.changeDayPeriod(dayPeriod_r29);\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const dayPeriod_r29 = ctx.$implicit;\n    const ctx_r28 = ɵngcc0.ɵɵnextContext(4);\n    ɵngcc0.ɵɵclassProp(\"selected\", ctx_r28.isSelectedDayPeriod(dayPeriod_r29));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"value\", dayPeriod_r29)(\"selected\", ctx_r28.isSelectedDayPeriod(dayPeriod_r29));\n  }\n}\n\nfunction NbTimePickerComponent_nb_card_0_ng_template_7_nb_list_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"nb-list\", 10);\n    ɵngcc0.ɵɵtemplate(1, NbTimePickerComponent_nb_card_0_ng_template_7_nb_list_5_nb_list_item_1_Template, 2, 4, \"nb-list-item\", 15);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r17 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r17.dayPeriodColumnOptions)(\"ngForTrackBy\", ctx_r17.trackByDayPeriod);\n  }\n}\n\nfunction NbTimePickerComponent_nb_card_0_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"nb-list\", 10);\n    ɵngcc0.ɵɵtemplate(1, NbTimePickerComponent_nb_card_0_ng_template_7_nb_list_item_1_Template, 2, 4, \"nb-list-item\", 11);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(2, \"nb-list\", 10);\n    ɵngcc0.ɵɵtemplate(3, NbTimePickerComponent_nb_card_0_ng_template_7_nb_list_item_3_Template, 2, 4, \"nb-list-item\", 11);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(4, NbTimePickerComponent_nb_card_0_ng_template_7_nb_list_4_Template, 2, 2, \"nb-list\", 14);\n    ɵngcc0.ɵɵtemplate(5, NbTimePickerComponent_nb_card_0_ng_template_7_nb_list_5_Template, 2, 2, \"nb-list\", 14);\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r6.hoursColumnOptions)(\"ngForTrackBy\", ctx_r6.trackByTimeValues);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r6.minutesColumnOptions)(\"ngForTrackBy\", ctx_r6.trackByTimeValues);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r6.showSeconds());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r6.twelveHoursFormat);\n  }\n}\n\nfunction NbTimePickerComponent_nb_card_0_nb_card_footer_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r33 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"nb-card-footer\", 17);\n    ɵngcc0.ɵɵelementStart(1, \"nb-calendar-actions\", 18);\n    ɵngcc0.ɵɵlistener(\"setCurrentTime\", function NbTimePickerComponent_nb_card_0_nb_card_footer_9_Template_nb_calendar_actions_setCurrentTime_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r33);\n      const ctx_r32 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r32.setCurrentTime();\n    })(\"saveValue\", function NbTimePickerComponent_nb_card_0_nb_card_footer_9_Template_nb_calendar_actions_saveValue_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r33);\n      const ctx_r34 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r34.saveValue();\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"applyButtonText\", ctx_r7.applyButtonText)(\"currentTimeButtonText\", ctx_r7.currentTimeButtonText);\n  }\n}\n\nfunction NbTimePickerComponent_nb_card_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"nb-card\", 1);\n    ɵngcc0.ɵɵelementStart(1, \"nb-card-header\", 2);\n    ɵngcc0.ɵɵtemplate(2, NbTimePickerComponent_nb_card_0_ng_container_2_Template, 3, 0, \"ng-container\", 3);\n    ɵngcc0.ɵɵtemplate(3, NbTimePickerComponent_nb_card_0_ng_template_3_Template, 6, 4, \"ng-template\", null, 4, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"div\", 5);\n    ɵngcc0.ɵɵtemplate(6, NbTimePickerComponent_nb_card_0_ng_container_6_Template, 3, 2, \"ng-container\", 3);\n    ɵngcc0.ɵɵtemplate(7, NbTimePickerComponent_nb_card_0_ng_template_7_Template, 6, 6, \"ng-template\", null, 6, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(9, NbTimePickerComponent_nb_card_0_nb_card_footer_9_Template, 2, 2, \"nb-card-footer\", 7);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r2 = ɵngcc0.ɵɵreference(4);\n\n    const _r5 = ɵngcc0.ɵɵreference(8);\n\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"supports-scrollbar-theming\", !ctx_r0.isFirefox());\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.singleColumn)(\"ngIfElse\", _r2);\n    ɵngcc0.ɵɵadvance(4);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.singleColumn)(\"ngIfElse\", _r5);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.showFooter);\n  }\n}\n\nconst _c9 = [\"layoutTopDynamicArea\"];\nconst _c10 = [\"scrollableContainer\"];\nconst _c11 = [\"layoutContainer\"];\nconst _c12 = [[[\"nb-layout-header\", 3, \"subheader\", \"\"]], [[\"nb-sidebar\"]], [[\"nb-layout-header\", \"subheader\", \"\"]], [[\"nb-layout-column\"]], [[\"nb-layout-footer\"]]];\nconst _c13 = [\"nb-layout-header:not([subheader])\", \"nb-sidebar\", \"nb-layout-header[subheader]\", \"nb-layout-column\", \"nb-layout-footer\"];\nconst _c14 = [\"nbMenuItem\", \"\"];\n\nfunction NbMenuItemComponent_span_0_nb_icon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"nb-icon\", 7);\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"config\", ctx_r8.menuItem.icon);\n  }\n}\n\nfunction NbMenuItemComponent_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtemplate(1, NbMenuItemComponent_span_0_nb_icon_1_Template, 1, 1, \"nb-icon\", 6);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.menuItem.icon);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0.menuItem.title, \"\\n\");\n  }\n}\n\nfunction NbMenuItemComponent_a_1_nb_icon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"nb-icon\", 7);\n  }\n\n  if (rf & 2) {\n    const ctx_r9 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"config\", ctx_r9.menuItem.icon);\n  }\n}\n\nfunction NbMenuItemComponent_a_1_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0, 11);\n  }\n\n  if (rf & 2) {\n    ɵngcc0.ɵɵnextContext(2);\n\n    const _r6 = ɵngcc0.ɵɵreference(7);\n\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", _r6);\n  }\n}\n\nfunction NbMenuItemComponent_a_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"a\", 8);\n    ɵngcc0.ɵɵlistener(\"mouseenter\", function NbMenuItemComponent_a_1_Template_a_mouseenter_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r12);\n      const ctx_r11 = ɵngcc0.ɵɵnextContext();\n      return ctx_r11.onHoverItem(ctx_r11.menuItem);\n    })(\"click\", function NbMenuItemComponent_a_1_Template_a_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r12);\n      const ctx_r13 = ɵngcc0.ɵɵnextContext();\n      return ctx_r13.onItemClick(ctx_r13.menuItem);\n    });\n    ɵngcc0.ɵɵtemplate(1, NbMenuItemComponent_a_1_nb_icon_1_Template, 1, 1, \"nb-icon\", 6);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 9);\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(4, NbMenuItemComponent_a_1_ng_container_4_Template, 1, 1, \"ng-container\", 10);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"active\", ctx_r1.menuItem.selected);\n    ɵngcc0.ɵɵproperty(\"routerLink\", ctx_r1.menuItem.link)(\"queryParams\", ctx_r1.menuItem.queryParams)(\"fragment\", ctx_r1.menuItem.fragment)(\"queryParamsHandling\", ctx_r1.menuItem.queryParamsHandling)(\"preserveFragment\", ctx_r1.menuItem.preserveFragment)(\"skipLocationChange\", ctx_r1.menuItem.skipLocationChange);\n    ɵngcc0.ɵɵattribute(\"target\", ctx_r1.menuItem.target)(\"title\", ctx_r1.menuItem.title);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.menuItem.icon);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r1.menuItem.title);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.badge);\n  }\n}\n\nfunction NbMenuItemComponent_a_2_nb_icon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"nb-icon\", 7);\n  }\n\n  if (rf & 2) {\n    const ctx_r14 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"config\", ctx_r14.menuItem.icon);\n  }\n}\n\nfunction NbMenuItemComponent_a_2_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0, 11);\n  }\n\n  if (rf & 2) {\n    ɵngcc0.ɵɵnextContext(2);\n\n    const _r6 = ɵngcc0.ɵɵreference(7);\n\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", _r6);\n  }\n}\n\nfunction NbMenuItemComponent_a_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"a\", 12);\n    ɵngcc0.ɵɵlistener(\"mouseenter\", function NbMenuItemComponent_a_2_Template_a_mouseenter_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r17);\n      const ctx_r16 = ɵngcc0.ɵɵnextContext();\n      return ctx_r16.onHoverItem(ctx_r16.menuItem);\n    })(\"click\", function NbMenuItemComponent_a_2_Template_a_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r17);\n      const ctx_r18 = ɵngcc0.ɵɵnextContext();\n      return ctx_r18.onSelectItem(ctx_r18.menuItem);\n    });\n    ɵngcc0.ɵɵtemplate(1, NbMenuItemComponent_a_2_nb_icon_1_Template, 1, 1, \"nb-icon\", 6);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 9);\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(4, NbMenuItemComponent_a_2_ng_container_4_Template, 1, 1, \"ng-container\", 10);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"active\", ctx_r2.menuItem.selected);\n    ɵngcc0.ɵɵattribute(\"href\", ctx_r2.menuItem.url, ɵngcc0.ɵɵsanitizeUrl)(\"target\", ctx_r2.menuItem.target)(\"title\", ctx_r2.menuItem.title);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.menuItem.icon);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r2.menuItem.title);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.badge);\n  }\n}\n\nfunction NbMenuItemComponent_a_3_nb_icon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"nb-icon\", 7);\n  }\n\n  if (rf & 2) {\n    const ctx_r19 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"config\", ctx_r19.menuItem.icon);\n  }\n}\n\nfunction NbMenuItemComponent_a_3_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0, 11);\n  }\n\n  if (rf & 2) {\n    ɵngcc0.ɵɵnextContext(2);\n\n    const _r6 = ɵngcc0.ɵɵreference(7);\n\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", _r6);\n  }\n}\n\nfunction NbMenuItemComponent_a_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"a\", 12);\n    ɵngcc0.ɵɵlistener(\"mouseenter\", function NbMenuItemComponent_a_3_Template_a_mouseenter_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r22);\n      const ctx_r21 = ɵngcc0.ɵɵnextContext();\n      return ctx_r21.onHoverItem(ctx_r21.menuItem);\n    })(\"click\", function NbMenuItemComponent_a_3_Template_a_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r22);\n      const ctx_r23 = ɵngcc0.ɵɵnextContext();\n      $event.preventDefault();\n      return ctx_r23.onItemClick(ctx_r23.menuItem);\n    });\n    ɵngcc0.ɵɵtemplate(1, NbMenuItemComponent_a_3_nb_icon_1_Template, 1, 1, \"nb-icon\", 6);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 9);\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(4, NbMenuItemComponent_a_3_ng_container_4_Template, 1, 1, \"ng-container\", 10);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"active\", ctx_r3.menuItem.selected);\n    ɵngcc0.ɵɵattribute(\"target\", ctx_r3.menuItem.target)(\"title\", ctx_r3.menuItem.title);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r3.menuItem.icon);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r3.menuItem.title);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r3.badge);\n  }\n}\n\nfunction NbMenuItemComponent_a_4_nb_icon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"nb-icon\", 7);\n  }\n\n  if (rf & 2) {\n    const ctx_r24 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"config\", ctx_r24.menuItem.icon);\n  }\n}\n\nfunction NbMenuItemComponent_a_4_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0, 11);\n  }\n\n  if (rf & 2) {\n    ɵngcc0.ɵɵnextContext(2);\n\n    const _r6 = ɵngcc0.ɵɵreference(7);\n\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", _r6);\n  }\n}\n\nfunction NbMenuItemComponent_a_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r27 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"a\", 13);\n    ɵngcc0.ɵɵlistener(\"click\", function NbMenuItemComponent_a_4_Template_a_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r27);\n      const ctx_r26 = ɵngcc0.ɵɵnextContext();\n      $event.preventDefault();\n      return ctx_r26.onToggleSubMenu(ctx_r26.menuItem);\n    })(\"mouseenter\", function NbMenuItemComponent_a_4_Template_a_mouseenter_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r27);\n      const ctx_r28 = ɵngcc0.ɵɵnextContext();\n      return ctx_r28.onHoverItem(ctx_r28.menuItem);\n    });\n    ɵngcc0.ɵɵtemplate(1, NbMenuItemComponent_a_4_nb_icon_1_Template, 1, 1, \"nb-icon\", 6);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 9);\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(4, NbMenuItemComponent_a_4_ng_container_4_Template, 1, 1, \"ng-container\", 10);\n    ɵngcc0.ɵɵelement(5, \"nb-icon\", 14);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"active\", ctx_r4.menuItem.selected);\n    ɵngcc0.ɵɵattribute(\"target\", ctx_r4.menuItem.target)(\"title\", ctx_r4.menuItem.title);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r4.menuItem.icon);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r4.menuItem.title);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r4.badge);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"icon\", ctx_r4.getExpandStateIcon());\n  }\n}\n\nfunction NbMenuItemComponent_ul_5_ng_container_1_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r33 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"li\", 18);\n    ɵngcc0.ɵɵlistener(\"hoverItem\", function NbMenuItemComponent_ul_5_ng_container_1_li_1_Template_li_hoverItem_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r33);\n      const ctx_r32 = ɵngcc0.ɵɵnextContext(3);\n      return ctx_r32.onHoverItem($event);\n    })(\"toggleSubMenu\", function NbMenuItemComponent_ul_5_ng_container_1_li_1_Template_li_toggleSubMenu_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r33);\n      const ctx_r34 = ɵngcc0.ɵɵnextContext(3);\n      return ctx_r34.onToggleSubMenu($event);\n    })(\"selectItem\", function NbMenuItemComponent_ul_5_ng_container_1_li_1_Template_li_selectItem_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r33);\n      const ctx_r35 = ɵngcc0.ɵɵnextContext(3);\n      return ctx_r35.onSelectItem($event);\n    })(\"itemClick\", function NbMenuItemComponent_ul_5_ng_container_1_li_1_Template_li_itemClick_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r33);\n      const ctx_r36 = ɵngcc0.ɵɵnextContext(3);\n      return ctx_r36.onItemClick($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r30 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵclassProp(\"menu-group\", item_r30.group);\n    ɵngcc0.ɵɵproperty(\"menuItem\", item_r30)(\"badge\", item_r30.badge);\n  }\n}\n\nfunction NbMenuItemComponent_ul_5_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NbMenuItemComponent_ul_5_ng_container_1_li_1_Template, 1, 4, \"li\", 17);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const item_r30 = ctx.$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !item_r30.hidden);\n  }\n}\n\nfunction NbMenuItemComponent_ul_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"ul\", 15);\n    ɵngcc0.ɵɵtemplate(1, NbMenuItemComponent_ul_5_ng_container_1_Template, 2, 1, \"ng-container\", 16);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"collapsed\", !(ctx_r5.menuItem.children && ctx_r5.menuItem.expanded))(\"expanded\", ctx_r5.menuItem.expanded);\n    ɵngcc0.ɵɵproperty(\"@toggle\", ctx_r5.toggleState);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r5.menuItem.children);\n  }\n}\n\nfunction NbMenuItemComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"nb-badge\", 19);\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"text\", ctx_r7.badge.text)(\"dotMode\", ctx_r7.badge.dotMode)(\"status\", ctx_r7.badge.status);\n  }\n}\n\nfunction NbMenuComponent_ng_container_1_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"li\", 3);\n    ɵngcc0.ɵɵlistener(\"hoverItem\", function NbMenuComponent_ng_container_1_li_1_Template_li_hoverItem_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r4);\n      const ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r3.onHoverItem($event);\n    })(\"toggleSubMenu\", function NbMenuComponent_ng_container_1_li_1_Template_li_toggleSubMenu_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r4);\n      const ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r5.onToggleSubMenu($event);\n    })(\"selectItem\", function NbMenuComponent_ng_container_1_li_1_Template_li_selectItem_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r4);\n      const ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r6.onSelectItem($event);\n    })(\"itemClick\", function NbMenuComponent_ng_container_1_li_1_Template_li_itemClick_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r4);\n      const ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r7.onItemClick($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r1 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵclassProp(\"menu-group\", item_r1.group);\n    ɵngcc0.ɵɵproperty(\"menuItem\", item_r1)(\"badge\", item_r1.badge);\n  }\n}\n\nfunction NbMenuComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NbMenuComponent_ng_container_1_li_1_Template, 1, 4, \"li\", 2);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !item_r1.hidden);\n  }\n}\n\nfunction NbRouteTabsetComponent_ng_container_1_li_1_nb_icon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"nb-icon\", 8);\n  }\n\n  if (rf & 2) {\n    const tab_r1 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    ɵngcc0.ɵɵproperty(\"config\", tab_r1.icon);\n  }\n}\n\nfunction NbRouteTabsetComponent_ng_container_1_li_1_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 9);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const tab_r1 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(tab_r1.title);\n  }\n}\n\nfunction NbRouteTabsetComponent_ng_container_1_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"li\", 4);\n    ɵngcc0.ɵɵelementStart(1, \"a\", 5);\n    ɵngcc0.ɵɵtemplate(2, NbRouteTabsetComponent_ng_container_1_li_1_nb_icon_2_Template, 1, 1, \"nb-icon\", 6);\n    ɵngcc0.ɵɵtemplate(3, NbRouteTabsetComponent_ng_container_1_li_1_span_3_Template, 2, 1, \"span\", 7);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const tab_r1 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵclassProp(\"responsive\", tab_r1.responsive);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", tab_r1.icon);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", tab_r1.title);\n  }\n}\n\nfunction NbRouteTabsetComponent_ng_container_1_ng_template_2_nb_icon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"nb-icon\", 12);\n  }\n\n  if (rf & 2) {\n    const tab_r1 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    ɵngcc0.ɵɵproperty(\"icon\", tab_r1.icon);\n  }\n}\n\nfunction NbRouteTabsetComponent_ng_container_1_ng_template_2_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 9);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const tab_r1 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(tab_r1.title);\n  }\n}\n\nfunction NbRouteTabsetComponent_ng_container_1_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"li\", 10);\n    ɵngcc0.ɵɵlistener(\"click\", function NbRouteTabsetComponent_ng_container_1_ng_template_2_Template_li_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r16);\n      const tab_r1 = ɵngcc0.ɵɵnextContext().$implicit;\n      const ctx_r14 = ɵngcc0.ɵɵnextContext();\n      $event.preventDefault();\n      return ctx_r14.selectTab(tab_r1);\n    });\n    ɵngcc0.ɵɵelementStart(1, \"a\", 5);\n    ɵngcc0.ɵɵtemplate(2, NbRouteTabsetComponent_ng_container_1_ng_template_2_nb_icon_2_Template, 1, 1, \"nb-icon\", 11);\n    ɵngcc0.ɵɵtemplate(3, NbRouteTabsetComponent_ng_container_1_ng_template_2_span_3_Template, 2, 1, \"span\", 7);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const tab_r1 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"responsive\", tab_r1.responsive);\n    ɵngcc0.ɵɵproperty(\"routerLink\", tab_r1.route)(\"routerLinkActiveOptions\", ctx_r4.activeLinkOptions)(\"queryParams\", tab_r1.queryParams)(\"queryParamsHandling\", tab_r1.queryParamsHandling)(\"fragment\", tab_r1.fragment)(\"preserveFragment\", tab_r1.preserveFragment)(\"skipLocationChange\", tab_r1.skipLocationChange)(\"replaceUrl\", tab_r1.replaceUrl)(\"state\", tab_r1.state);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", tab_r1.icon);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", tab_r1.title);\n  }\n}\n\nfunction NbRouteTabsetComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NbRouteTabsetComponent_ng_container_1_li_1_Template, 4, 4, \"li\", 2);\n    ɵngcc0.ɵɵtemplate(2, NbRouteTabsetComponent_ng_container_1_ng_template_2_Template, 4, 13, \"ng-template\", null, 3, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const tab_r1 = ctx.$implicit;\n\n    const _r3 = ɵngcc0.ɵɵreference(3);\n\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", tab_r1.disabled)(\"ngIfElse\", _r3);\n  }\n}\n\nconst _c15 = [[[\"nb-sidebar-header\"]], \"*\", [[\"nb-sidebar-footer\"]]];\nconst _c16 = [\"nb-sidebar-header\", \"*\", \"nb-sidebar-footer\"];\n\nfunction NbTabComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵprojection(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction NbTabsetComponent_li_1_nb_icon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"nb-icon\", 7);\n  }\n\n  if (rf & 2) {\n    const tab_r1 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"config\", tab_r1.tabIcon);\n  }\n}\n\nfunction NbTabsetComponent_li_1_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 8);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const tab_r1 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(tab_r1.tabTitle);\n  }\n}\n\nfunction NbTabsetComponent_li_1_nb_badge_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"nb-badge\", 9);\n  }\n\n  if (rf & 2) {\n    const tab_r1 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"text\", tab_r1.badgeText)(\"dotMode\", tab_r1.badgeDot)(\"status\", tab_r1.badgeStatus)(\"position\", tab_r1.badgePosition);\n  }\n}\n\nfunction NbTabsetComponent_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"li\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function NbTabsetComponent_li_1_Template_li_click_0_listener() {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r9);\n      const tab_r1 = restoredCtx.$implicit;\n      const ctx_r8 = ɵngcc0.ɵɵnextContext();\n      return ctx_r8.selectTab(tab_r1);\n    })(\"keyup.space\", function NbTabsetComponent_li_1_Template_li_keyup_space_0_listener() {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r9);\n      const tab_r1 = restoredCtx.$implicit;\n      const ctx_r10 = ɵngcc0.ɵɵnextContext();\n      return ctx_r10.selectTab(tab_r1);\n    })(\"keyup.enter\", function NbTabsetComponent_li_1_Template_li_keyup_enter_0_listener() {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r9);\n      const tab_r1 = restoredCtx.$implicit;\n      const ctx_r11 = ɵngcc0.ɵɵnextContext();\n      return ctx_r11.selectTab(tab_r1);\n    });\n    ɵngcc0.ɵɵelementStart(1, \"a\", 3);\n    ɵngcc0.ɵɵlistener(\"click\", function NbTabsetComponent_li_1_Template_a_click_1_listener($event) {\n      return $event.preventDefault();\n    });\n    ɵngcc0.ɵɵtemplate(2, NbTabsetComponent_li_1_nb_icon_2_Template, 1, 1, \"nb-icon\", 4);\n    ɵngcc0.ɵɵtemplate(3, NbTabsetComponent_li_1_span_3_Template, 2, 1, \"span\", 5);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(4, NbTabsetComponent_li_1_nb_badge_4_Template, 1, 4, \"nb-badge\", 6);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const tab_r1 = ctx.$implicit;\n    ɵngcc0.ɵɵclassProp(\"responsive\", tab_r1.responsive)(\"active\", tab_r1.active)(\"disabled\", tab_r1.disabled);\n    ɵngcc0.ɵɵattribute(\"tabindex\", tab_r1.disabled ? -1 : 0)(\"data-tab-id\", tab_r1.tabId);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", tab_r1.tabIcon);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", tab_r1.tabTitle);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", tab_r1.badgeText || tab_r1.badgeDot);\n  }\n}\n\nconst _c17 = [[[\"nb-tab\"]]];\nconst _c18 = [\"nb-tab\"];\n\nfunction NbUserComponent_div_1_nb_badge_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"nb-badge\", 8);\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"text\", ctx_r4.badgeText)(\"status\", ctx_r4.badgeStatus)(\"position\", ctx_r4.badgePosition);\n  }\n}\n\nfunction NbUserComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6);\n    ɵngcc0.ɵɵtemplate(1, NbUserComponent_div_1_nb_badge_1_Template, 1, 3, \"nb-badge\", 7);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"background-image\", ctx_r0.imageBackgroundStyle);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.badgeText);\n  }\n}\n\nfunction NbUserComponent_div_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r5.getInitials(), \" \");\n  }\n}\n\nfunction NbUserComponent_div_2_nb_badge_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"nb-badge\", 8);\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"text\", ctx_r6.badgeText)(\"status\", ctx_r6.badgeStatus)(\"position\", ctx_r6.badgePosition);\n  }\n}\n\nfunction NbUserComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 9);\n    ɵngcc0.ɵɵtemplate(1, NbUserComponent_div_2_ng_container_1_Template, 2, 1, \"ng-container\", 10);\n    ɵngcc0.ɵɵtemplate(2, NbUserComponent_div_2_nb_badge_2_Template, 1, 3, \"nb-badge\", 7);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"background-color\", ctx_r1.color);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.showInitials);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.badgeText);\n  }\n}\n\nfunction NbUserComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 11);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r2.name);\n  }\n}\n\nfunction NbUserComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r3.title);\n  }\n}\n\nfunction NbActionComponent_ng_container_0_a_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"a\", 6);\n    ɵngcc0.ɵɵelement(1, \"nb-icon\", 7);\n    ɵngcc0.ɵɵelementContainer(2, 8);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n\n    const _r3 = ɵngcc0.ɵɵreference(4);\n\n    ɵngcc0.ɵɵproperty(\"routerLink\", ctx_r5.link)(\"title\", ctx_r5.title);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"config\", ctx_r5.icon);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", _r3);\n  }\n}\n\nfunction NbActionComponent_ng_container_0_a_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"a\", 9);\n    ɵngcc0.ɵɵelement(1, \"nb-icon\", 7);\n    ɵngcc0.ɵɵelementContainer(2, 8);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n\n    const _r3 = ɵngcc0.ɵɵreference(4);\n\n    ɵngcc0.ɵɵproperty(\"href\", ctx_r6.href, ɵngcc0.ɵɵsanitizeUrl)(\"title\", ctx_r6.title);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"config\", ctx_r6.icon);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", _r3);\n  }\n}\n\nfunction NbActionComponent_ng_container_0_a_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"a\", 10);\n    ɵngcc0.ɵɵlistener(\"click\", function NbActionComponent_ng_container_0_a_3_Template_a_click_0_listener($event) {\n      return $event.preventDefault();\n    });\n    ɵngcc0.ɵɵelement(1, \"nb-icon\", 7);\n    ɵngcc0.ɵɵelementContainer(2, 8);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n\n    const _r3 = ɵngcc0.ɵɵreference(4);\n\n    ɵngcc0.ɵɵproperty(\"title\", ctx_r7.title);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"config\", ctx_r7.icon);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", _r3);\n  }\n}\n\nfunction NbActionComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NbActionComponent_ng_container_0_a_1_Template, 3, 4, \"a\", 3);\n    ɵngcc0.ɵɵtemplate(2, NbActionComponent_ng_container_0_a_2_Template, 3, 4, \"a\", 4);\n    ɵngcc0.ɵɵtemplate(3, NbActionComponent_ng_container_0_a_3_Template, 3, 3, \"a\", 5);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.link);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.href && !ctx_r0.link);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r0.href && !ctx_r0.link);\n  }\n}\n\nfunction NbActionComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n    ɵngcc0.ɵɵelementContainer(1, 8);\n  }\n\n  if (rf & 2) {\n    ɵngcc0.ɵɵnextContext();\n\n    const _r3 = ɵngcc0.ɵɵreference(4);\n\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", _r3);\n  }\n}\n\nfunction NbActionComponent_ng_template_3_nb_badge_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"nb-badge\", 12);\n  }\n\n  if (rf & 2) {\n    const ctx_r9 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"text\", ctx_r9.badgeText)(\"dotMode\", ctx_r9.badgeDot)(\"status\", ctx_r9.badgeStatus)(\"position\", ctx_r9.badgePosition);\n  }\n}\n\nfunction NbActionComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NbActionComponent_ng_template_3_nb_badge_0_Template, 1, 4, \"nb-badge\", 11);\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r4.badgeText || ctx_r4.badgeDot);\n  }\n}\n\nconst _c19 = [[[\"nb-action\"]]];\nconst _c20 = [\"nb-action\"];\nconst _c21 = [\"searchInput\"];\nconst _c22 = [\"searchButton\"];\n\nfunction NbSearchComponent_nb_search_field_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"nb-search-field\", 4);\n    ɵngcc0.ɵɵlistener(\"search\", function NbSearchComponent_nb_search_field_3_Template_nb_search_field_search_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      const ctx_r2 = ɵngcc0.ɵɵnextContext();\n      return ctx_r2.search($event);\n    })(\"searchInput\", function NbSearchComponent_nb_search_field_3_Template_nb_search_field_searchInput_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      const ctx_r4 = ɵngcc0.ɵɵnextContext();\n      return ctx_r4.emitInput($event);\n    })(\"close\", function NbSearchComponent_nb_search_field_3_Template_nb_search_field_close_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      const ctx_r5 = ɵngcc0.ɵɵnextContext();\n      return ctx_r5.emitDeactivate();\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"show\", ctx_r1.showSearchField)(\"type\", ctx_r1.type)(\"placeholder\", ctx_r1.placeholder)(\"hint\", ctx_r1.hint);\n  }\n}\n\nfunction NbCheckboxComponent_nb_icon_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"nb-icon\", 6);\n  }\n}\n\nfunction NbCheckboxComponent_nb_icon_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"nb-icon\", 7);\n  }\n}\n\nfunction NbProgressBarComponent_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\"\", ctx_r0.value, \"%\");\n  }\n}\n\nfunction NbAlertComponent_button_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 1);\n    ɵngcc0.ɵɵlistener(\"click\", function NbAlertComponent_button_0_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r2);\n      const ctx_r1 = ɵngcc0.ɵɵnextContext();\n      return ctx_r1.onClose();\n    });\n    ɵngcc0.ɵɵelementStart(1, \"span\", 2);\n    ɵngcc0.ɵɵtext(2, \"\\u00D7\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction NbChatFormComponent_div_0_ng_container_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵelementStart(1, \"span\", 8);\n    ɵngcc0.ɵɵlistener(\"click\", function NbChatFormComponent_div_0_ng_container_1_div_1_Template_span_click_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      const file_r3 = ɵngcc0.ɵɵnextContext().$implicit;\n      const ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r6.removeFile(file_r3);\n    });\n    ɵngcc0.ɵɵtext(2, \"\\u00D7\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const file_r3 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵstyleProp(\"background-image\", file_r3.urlStyle);\n  }\n}\n\nfunction NbChatFormComponent_div_0_ng_container_1_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵelement(1, \"nb-icon\", 9);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 8);\n    ɵngcc0.ɵɵlistener(\"click\", function NbChatFormComponent_div_0_ng_container_1_div_2_Template_span_click_2_listener() {\n      ɵngcc0.ɵɵrestoreView(_r12);\n      const file_r3 = ɵngcc0.ɵɵnextContext().$implicit;\n      const ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r10.removeFile(file_r3);\n    });\n    ɵngcc0.ɵɵtext(3, \"\\u00D7\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction NbChatFormComponent_div_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NbChatFormComponent_div_0_ng_container_1_div_1_Template, 3, 2, \"div\", 6);\n    ɵngcc0.ɵɵtemplate(2, NbChatFormComponent_div_0_ng_container_1_div_2_Template, 4, 0, \"div\", 7);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const file_r3 = ctx.$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", file_r3.urlStyle);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !file_r3.urlStyle);\n  }\n}\n\nfunction NbChatFormComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 4);\n    ɵngcc0.ɵɵtemplate(1, NbChatFormComponent_div_0_ng_container_1_Template, 3, 2, \"ng-container\", 5);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.droppedFiles);\n  }\n}\n\nfunction NbChatFormComponent_button_3_nb_icon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"nb-icon\", 13);\n  }\n\n  if (rf & 2) {\n    const ctx_r13 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"icon\", ctx_r13.buttonIcon);\n  }\n}\n\nfunction NbChatFormComponent_button_3_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    const ctx_r15 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r15.buttonTitle);\n  }\n}\n\nfunction NbChatFormComponent_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 10);\n    ɵngcc0.ɵɵlistener(\"click\", function NbChatFormComponent_button_3_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r17);\n      const ctx_r16 = ɵngcc0.ɵɵnextContext();\n      return ctx_r16.sendMessage();\n    });\n    ɵngcc0.ɵɵtemplate(1, NbChatFormComponent_button_3_nb_icon_1_Template, 1, 1, \"nb-icon\", 11);\n    ɵngcc0.ɵɵtemplate(2, NbChatFormComponent_button_3_ng_template_2_Template, 1, 1, \"ng-template\", null, 12, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r14 = ɵngcc0.ɵɵreference(3);\n\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"with-icon\", !ctx_r1.buttonTitle);\n    ɵngcc0.ɵɵproperty(\"status\", ctx_r1.getButtonStatus());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r1.buttonTitle)(\"ngIfElse\", _r14);\n  }\n}\n\nfunction NbChatMessageComponent_nb_chat_avatar_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"nb-chat-avatar\", 4);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"initials\", ctx_r0.getInitials())(\"avatarStyle\", ctx_r0.avatarStyle);\n  }\n}\n\nfunction NbChatMessageComponent_ng_container_2_nb_chat_message_file_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"nb-chat-message-file\", 10);\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"sender\", ctx_r4.sender)(\"date\", ctx_r4.date)(\"dateFormat\", ctx_r4.dateFormat)(\"message\", ctx_r4.message)(\"files\", ctx_r4.files);\n  }\n}\n\nfunction NbChatMessageComponent_ng_container_2_nb_chat_message_quote_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"nb-chat-message-quote\", 11);\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"sender\", ctx_r5.sender)(\"date\", ctx_r5.date)(\"dateFormat\", ctx_r5.dateFormat)(\"message\", ctx_r5.message)(\"quote\", ctx_r5.quote);\n  }\n}\n\nfunction NbChatMessageComponent_ng_container_2_nb_chat_message_map_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"nb-chat-message-map\", 12);\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"sender\", ctx_r6.sender)(\"date\", ctx_r6.date)(\"message\", ctx_r6.message)(\"latitude\", ctx_r6.latitude)(\"longitude\", ctx_r6.longitude);\n  }\n}\n\nfunction NbChatMessageComponent_ng_container_2_nb_chat_message_text_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"nb-chat-message-text\", 13);\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"sender\", ctx_r7.sender)(\"date\", ctx_r7.date)(\"dateFormat\", ctx_r7.dateFormat)(\"message\", ctx_r7.message);\n  }\n}\n\nfunction NbChatMessageComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0, 5);\n    ɵngcc0.ɵɵtemplate(1, NbChatMessageComponent_ng_container_2_nb_chat_message_file_1_Template, 1, 5, \"nb-chat-message-file\", 6);\n    ɵngcc0.ɵɵtemplate(2, NbChatMessageComponent_ng_container_2_nb_chat_message_quote_2_Template, 1, 5, \"nb-chat-message-quote\", 7);\n    ɵngcc0.ɵɵtemplate(3, NbChatMessageComponent_ng_container_2_nb_chat_message_map_3_Template, 1, 5, \"nb-chat-message-map\", 8);\n    ɵngcc0.ɵɵtemplate(4, NbChatMessageComponent_ng_container_2_nb_chat_message_text_4_Template, 1, 4, \"nb-chat-message-text\", 9);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx_r1.type);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"file\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"quote\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"map\");\n  }\n}\n\nfunction NbChatMessageComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"nb-chat-message-text\", 13);\n    ɵngcc0.ɵɵelementStart(1, \"div\");\n    ɵngcc0.ɵɵelementContainer(2, 14);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"sender\", ctx_r3.sender)(\"date\", ctx_r3.date)(\"dateFormat\", ctx_r3.dateFormat)(\"message\", ctx_r3.message);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"nb-custom-message\", ctx_r3._areDefaultStylesEnabled())(\"nb-custom-message-no-space\", ctx_r3._addNoSpaceClass)(\"nb-custom-message-reply\", ctx_r3._addReplyClass)(\"nb-custom-message-not-reply\", ctx_r3._addNotReplyClass)(\"nb-custom-message-full-width\", !ctx_r3._areDefaultStylesEnabled());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r3._getTemplate())(\"ngTemplateOutletContext\", ctx_r3._getTemplateContext());\n  }\n}\n\nconst _c23 = [\"scrollable\"];\n\nfunction NbChatComponent_p_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"p\", 6);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r1.noMessagesPlaceholder);\n  }\n}\n\nconst _c24 = [[[\"nb-chat-message\"]], [[\"nb-chat-form\"]]];\nconst _c25 = [\"nb-chat-message\", \"nb-chat-form\"];\n\nconst _c26 = function (a0) {\n  return [a0];\n};\n\nfunction NbChatMessageFileComponent_ng_container_2_a_2_nb_icon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"nb-icon\", 7);\n  }\n\n  if (rf & 2) {\n    const file_r3 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"icon\", file_r3.icon);\n  }\n}\n\nfunction NbChatMessageFileComponent_ng_container_2_a_2_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\");\n  }\n\n  if (rf & 2) {\n    const file_r3 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵstyleProp(\"background-image\", file_r3.urlStyle);\n  }\n}\n\nfunction NbChatMessageFileComponent_ng_container_2_a_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"a\", 4);\n    ɵngcc0.ɵɵtemplate(1, NbChatMessageFileComponent_ng_container_2_a_2_nb_icon_1_Template, 1, 1, \"nb-icon\", 5);\n    ɵngcc0.ɵɵtemplate(2, NbChatMessageFileComponent_ng_container_2_a_2_div_2_Template, 1, 2, \"div\", 6);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const file_r3 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"href\", file_r3.url, ɵngcc0.ɵɵsanitizeUrl);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !file_r3.urlStyle && file_r3.icon);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", file_r3.urlStyle);\n  }\n}\n\nfunction NbChatMessageFileComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 2);\n    ɵngcc0.ɵɵtemplate(2, NbChatMessageFileComponent_ng_container_2_a_2_Template, 3, 3, \"a\", 3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.readyFiles);\n  }\n}\n\nfunction NbChatMessageFileComponent_ng_container_3_nb_icon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"nb-icon\", 7);\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"icon\", ctx_r8.readyFiles[0].icon);\n  }\n}\n\nfunction NbChatMessageFileComponent_ng_container_3_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\");\n  }\n\n  if (rf & 2) {\n    const ctx_r9 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵstyleProp(\"background-image\", ctx_r9.readyFiles[0].urlStyle);\n  }\n}\n\nfunction NbChatMessageFileComponent_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"a\", 4);\n    ɵngcc0.ɵɵtemplate(2, NbChatMessageFileComponent_ng_container_3_nb_icon_2_Template, 1, 1, \"nb-icon\", 5);\n    ɵngcc0.ɵɵtemplate(3, NbChatMessageFileComponent_ng_container_3_div_3_Template, 1, 2, \"div\", 6);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"href\", ctx_r1.readyFiles[0].url, ɵngcc0.ɵɵsanitizeUrl);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r1.readyFiles[0].urlStyle && ctx_r1.readyFiles[0].icon);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.readyFiles[0].urlStyle);\n  }\n}\n\nfunction NbChatMessageQuoteComponent_p_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"p\", 3);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementStart(2, \"time\");\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵpipe(4, \"date\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\"\", ctx_r0.sender, \" \");\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(4, 2, ctx_r0.date, ctx_r0.dateFormat));\n  }\n}\n\nfunction NbChatMessageTextComponent_p_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"p\", 2);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementStart(2, \"time\");\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵpipe(4, \"date\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\"\", ctx_r0.sender, \" \");\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(4, 2, ctx_r0.date, ctx_r0.dateFormat));\n  }\n}\n\nfunction NbChatMessageTextComponent_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"p\", 3);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r1.message);\n  }\n}\n\nfunction NbChatAvatarComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0.initials, \" \");\n  }\n}\n\nfunction NbSpinnerComponent_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 2);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r0.message);\n  }\n}\n\nfunction NbStepComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n  }\n}\n\nfunction NbStepperComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n  }\n}\n\nfunction NbStepperComponent_ng_container_2_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 6);\n  }\n\n  if (rf & 2) {\n    const index_r3 = ɵngcc0.ɵɵnextContext().index;\n    const ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"connector-past\", index_r3 <= ctx_r5.selectedIndex);\n  }\n}\n\nfunction NbStepperComponent_ng_container_2_div_2_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const index_r3 = ɵngcc0.ɵɵnextContext(2).index;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(index_r3 + 1);\n  }\n}\n\nfunction NbStepperComponent_ng_container_2_div_2_nb_icon_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"nb-icon\", 12);\n  }\n}\n\nfunction NbStepperComponent_ng_container_2_div_2_ng_container_5_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nfunction NbStepperComponent_ng_container_2_div_2_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NbStepperComponent_ng_container_2_div_2_ng_container_5_ng_container_1_Template, 1, 0, \"ng-container\", 13);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const step_r2 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    const ctx_r10 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r10.getStepTemplate(step_r2));\n  }\n}\n\nfunction NbStepperComponent_ng_container_2_div_2_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const step_r2 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(step_r2.label);\n  }\n}\n\nfunction NbStepperComponent_ng_container_2_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 7);\n    ɵngcc0.ɵɵlistener(\"click\", function NbStepperComponent_ng_container_2_div_2_Template_div_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r17);\n      const step_r2 = ɵngcc0.ɵɵnextContext().$implicit;\n      const ctx_r16 = ɵngcc0.ɵɵnextContext();\n      return !ctx_r16.disableStepNavigation && step_r2.select();\n    });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 8);\n    ɵngcc0.ɵɵtemplate(2, NbStepperComponent_ng_container_2_div_2_span_2_Template, 2, 1, \"span\", 9);\n    ɵngcc0.ɵɵtemplate(3, NbStepperComponent_ng_container_2_div_2_nb_icon_3_Template, 1, 0, \"nb-icon\", 10);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(4, \"div\", 11);\n    ɵngcc0.ɵɵtemplate(5, NbStepperComponent_ng_container_2_div_2_ng_container_5_Template, 2, 1, \"ng-container\", 9);\n    ɵngcc0.ɵɵtemplate(6, NbStepperComponent_ng_container_2_div_2_span_6_Template, 2, 1, \"span\", 9);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const step_r2 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r6 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"selected\", ctx_r6.isStepSelected(step_r2))(\"completed\", !ctx_r6.isStepSelected(step_r2) && step_r2.completed)(\"noninteractive\", ctx_r6.disableStepNavigation);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !step_r2.completed || ctx_r6.isStepSelected(step_r2));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r6.isStepSelected(step_r2) && step_r2.completed);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", step_r2.isLabelTemplate);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !step_r2.isLabelTemplate);\n  }\n}\n\nfunction NbStepperComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NbStepperComponent_ng_container_2_div_1_Template, 1, 2, \"div\", 4);\n    ɵngcc0.ɵɵtemplate(2, NbStepperComponent_ng_container_2_div_2_Template, 7, 10, \"div\", 5);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const step_r2 = ctx.$implicit;\n    const first_r4 = ctx.first;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !first_r4 && !step_r2.hidden);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !step_r2.hidden);\n  }\n}\n\nconst _c27 = [[[\"nb-step\"]]];\nconst _c28 = [\"nb-step\"];\nconst _c29 = [[[\"nb-accordion-item\"]]];\nconst _c30 = [\"nb-accordion-item\"];\nconst _c31 = [[[\"nb-accordion-item-header\"]], [[\"nb-accordion-item-body\"]]];\nconst _c32 = [\"nb-accordion-item-header\", \"nb-accordion-item-body\"];\n\nconst _c33 = function (a0) {\n  return {\n    value: a0\n  };\n};\n\nfunction NbAccordionItemHeaderComponent_nb_icon_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"nb-icon\", 1);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@expansionIndicator\", ctx_r0.state);\n  }\n}\n\nconst _c34 = [[[\"nb-accordion-item-title\"]], [[\"nb-accordion-item-description\"]], \"*\"];\nconst _c35 = [\"nb-accordion-item-title\", \"nb-accordion-item-description\", \"*\"];\nconst _c36 = [[[\"nb-list-item\"]]];\nconst _c37 = [\"nb-list-item\"];\n\nfunction NbDialogContainerComponent_ng_template_0_Template(rf, ctx) {}\n\nfunction NbToastComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 4);\n    ɵngcc0.ɵɵelement(1, \"nb-icon\", 5);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"config\", ctx_r0.icon);\n  }\n}\n\nfunction NbToastrContainerComponent_nb_toast_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"nb-toast\", 1);\n  }\n\n  if (rf & 2) {\n    const toast_r1 = ctx.$implicit;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@fadeIn\", ctx_r0.fadeIn)(\"toast\", toast_r1);\n  }\n}\n\nfunction NbTooltipComponent_nb_icon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"nb-icon\", 4);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"config\", ctx_r0.context.icon);\n  }\n}\n\nfunction NbTooltipComponent_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r1.content);\n  }\n}\n\nfunction NbOptionComponent_nb_checkbox_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"nb-checkbox\", 1);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"checked\", ctx_r0.selected)(\"disabled\", ctx_r0.disabled);\n  }\n}\n\nconst _c38 = [\"selectButton\"];\n\nfunction NbSelectComponent_ng_container_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵprojection(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction NbSelectComponent_ng_container_2_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r7.selectionView);\n  }\n}\n\nfunction NbSelectComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NbSelectComponent_ng_container_2_ng_container_1_Template, 2, 0, \"ng-container\", 2);\n    ɵngcc0.ɵɵtemplate(2, NbSelectComponent_ng_container_2_ng_template_2_Template, 1, 1, \"ng-template\", null, 6, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const _r6 = ɵngcc0.ɵɵreference(3);\n\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.customLabel)(\"ngIfElse\", _r6);\n  }\n}\n\nfunction NbSelectComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵtextInterpolate(ctx_r3.placeholder);\n  }\n}\n\nfunction NbSelectComponent_nb_option_list_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"nb-option-list\", 7);\n    ɵngcc0.ɵɵprojection(1, 1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r4.hostWidth, \"px\");\n    ɵngcc0.ɵɵproperty(\"size\", ctx_r4.size)(\"position\", ctx_r4.overlayPosition)(\"ngClass\", ctx_r4.optionsListClass);\n  }\n}\n\nconst _c39 = [[[\"nb-select-label\"]], [[\"nb-option\"], [\"nb-option-group\"]]];\nconst _c40 = [\"nb-select-label\", \"nb-option, nb-option-group\"];\nconst _c41 = [[[\"nb-option\"], [\"ng-container\"]]];\nconst _c42 = [\"nb-option, ng-container\"];\n\nfunction NbAutocompleteComponent_nb_option_list_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"nb-option-list\", 1);\n    ɵngcc0.ɵɵprojection(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r0.hostWidth, \"px\");\n    ɵngcc0.ɵɵclassProp(\"empty\", !(ctx_r0.options == null ? null : ctx_r0.options.length));\n    ɵngcc0.ɵɵproperty(\"size\", ctx_r0.size)(\"position\", ctx_r0.overlayPosition)(\"id\", ctx_r0.id)(\"ngClass\", ctx_r0.optionsListClass);\n  }\n}\n\nconst _c43 = [[[\"nb-option\"], [\"nb-option-group\"]]];\nconst _c44 = [\"nb-option, nb-option-group\"];\nconst _c45 = [\"viewContainerRef\"];\n\nfunction NbWindowComponent_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"button\", 3);\n    ɵngcc0.ɵɵlistener(\"click\", function NbWindowComponent_ng_container_5_Template_button_click_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      const ctx_r4 = ɵngcc0.ɵɵnextContext();\n      return ctx_r4.minimize();\n    });\n    ɵngcc0.ɵɵelement(2, \"nb-icon\", 5);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction NbWindowComponent_ng_container_6_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 3);\n    ɵngcc0.ɵɵlistener(\"click\", function NbWindowComponent_ng_container_6_button_1_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      const ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r7.maximize();\n    });\n    ɵngcc0.ɵɵelement(1, \"nb-icon\", 7);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction NbWindowComponent_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NbWindowComponent_ng_container_6_button_1_Template, 2, 0, \"button\", 6);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.isFullScreen);\n  }\n}\n\nfunction NbWindowComponent_ng_container_7_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 3);\n    ɵngcc0.ɵɵlistener(\"click\", function NbWindowComponent_ng_container_7_button_1_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r11);\n      const ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r10.maximizeOrFullScreen();\n    });\n    ɵngcc0.ɵɵelement(1, \"nb-icon\", 8);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction NbWindowComponent_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NbWindowComponent_ng_container_7_button_1_Template, 2, 0, \"button\", 6);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.minimized || ctx_r2.maximized);\n  }\n}\n\nfunction NbWindowComponent_nb_card_body_10_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"nb-card-body\");\n    ɵngcc0.ɵɵelement(1, \"nb-overlay-container\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nconst _c46 = [\"valueContainer\"];\nconst _c47 = [\"input\"];\nconst _c48 = [[[\"nb-radio\"]]];\nconst _c49 = [\"nb-radio\"];\n\nfunction NbTagComponent_nb_icon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"nb-icon\", 1);\n    ɵngcc0.ɵɵlistener(\"click\", function NbTagComponent_nb_icon_1_Template_nb_icon_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r2);\n      const ctx_r1 = ɵngcc0.ɵɵnextContext();\n      return ctx_r1._remove();\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMapInterpolate1(\"nb-tag-remove size-\", ctx_r0.size, \"\");\n  }\n}\n\nconst _c50 = [[[\"nb-tag\"], [\"input\", \"nbTagInput\", \"\"]]];\nconst _c51 = [\"nb-tag, input[nbTagInput]\"];\n\nfunction NbSortIconComponent_ng_container_0_nb_icon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"nb-icon\", 3);\n  }\n}\n\nfunction NbSortIconComponent_ng_container_0_nb_icon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"nb-icon\", 4);\n  }\n}\n\nfunction NbSortIconComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NbSortIconComponent_ng_container_0_nb_icon_1_Template, 1, 0, \"nb-icon\", 1);\n    ɵngcc0.ɵɵtemplate(2, NbSortIconComponent_ng_container_0_nb_icon_2_Template, 1, 0, \"nb-icon\", 2);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.isAscending());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.isDescending());\n  }\n}\n\nconst _c52 = [\"nbSortHeader\", \"\"];\n\nfunction NbSortHeaderComponent_nb_sort_icon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"nb-sort-icon\", 4);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"direction\", ctx_r0.direction);\n  }\n}\n\nfunction NbSortHeaderComponent_ng_template_3_Template(rf, ctx) {}\n\nconst _c53 = [\"nbTreeGrid\", \"\"];\nconst _c54 = [\"nbTreeGridRow\", \"\"];\nconst _c55 = [\"nbTreeGridHeaderRow\", \"\"];\nconst _c56 = [\"nbTreeGridFooterRow\", \"\"];\n\nfunction NbToggleComponent_nb_icon_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"nb-icon\", 6);\n  }\n}\n\nfunction NbFormFieldComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵpipe(1, \"async\");\n    ɵngcc0.ɵɵprojection(2, 1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpipeBind1(1, 1, ctx_r0.prefixClasses$));\n  }\n}\n\nfunction NbFormFieldComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵpipe(1, \"async\");\n    ɵngcc0.ɵɵprojection(2, 2);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpipeBind1(1, 1, ctx_r1.suffixClasses$));\n  }\n}\n\nconst _c57 = [\"*\", [[\"\", \"nbPrefix\", \"\"]], [[\"\", \"nbSuffix\", \"\"]]];\nconst _c58 = [\"*\", \"[nbPrefix]\", \"[nbSuffix]\"];\nconst NB_THEME_OPTIONS = new InjectionToken('Nebular Theme Options');\nconst NB_MEDIA_BREAKPOINTS = new InjectionToken('Nebular Media Breakpoints');\nconst NB_BUILT_IN_JS_THEMES = new InjectionToken('Nebular Built-in JS Themes');\nconst NB_JS_THEMES = new InjectionToken('Nebular JS Themes');\n/**\n * We're providing browser apis with tokens to improve testing capabilities.\n * */\n\nconst NB_WINDOW = new InjectionToken('Window');\nconst NB_DOCUMENT = new InjectionToken('Document');\nconst palette = {\n  primary: '#3366ff',\n  success: '#00d68f',\n  info: '#0095ff',\n  warning: '#ffaa00',\n  danger: '#ff3d71'\n};\nconst DEFAULT_THEME = {\n  name: 'default',\n  variables: {\n    fontMain: 'Open Sans, sans-serif',\n    fontSecondary: 'Raleway, sans-serif',\n    bg: '#ffffff',\n    bg2: '#f7f9fc',\n    bg3: '#edf1f7',\n    bg4: '#e4e9f2',\n    border: '#ffffff',\n    border2: '#f7f9fc',\n    border3: '#edf1f7',\n    border4: '#e4e9f2',\n    border5: '#c5cee0',\n    fg: '#8f9bb3',\n    fgHeading: '#1a2138',\n    fgText: '#1a2138',\n    fgHighlight: palette.primary,\n    layoutBg: '#f7f9fc',\n    separator: '#edf1f7',\n    primary: palette.primary,\n    success: palette.success,\n    info: palette.info,\n    warning: palette.warning,\n    danger: palette.danger,\n    primaryLight: '#598bff',\n    successLight: '#2ce69b',\n    infoLight: '#42aaff',\n    warningLight: '#ffc94d',\n    dangerLight: '#ff708d'\n  }\n};\nconst palette$1 = {\n  primary: '#a16eff',\n  success: '#00d68f',\n  info: '#0095ff',\n  warning: '#ffaa00',\n  danger: '#ff3d71'\n};\nconst COSMIC_THEME = {\n  name: 'cosmic',\n  variables: {\n    fontMain: 'Open Sans, sans-serif',\n    fontSecondary: 'Raleway, sans-serif',\n    bg: '#323259',\n    bg2: '#252547',\n    bg3: '#1b1b38',\n    bg4: '#13132b',\n    border: '#323259',\n    border2: '#252547',\n    border3: '#1b1b38',\n    border4: '#13132b',\n    border5: '#13132b',\n    fg: '#b4b4db',\n    fgHeading: '#ffffff',\n    fgText: '#ffffff',\n    fgHighlight: palette$1.primary,\n    layoutBg: '#151a30',\n    separator: '#151a30',\n    primary: palette$1.primary,\n    success: palette$1.success,\n    info: palette$1.info,\n    warning: palette$1.warning,\n    danger: palette$1.danger,\n    primaryLight: '#b18aff',\n    successLight: '#2ce69b',\n    infoLight: '#42aaff',\n    warningLight: '#ffc94d',\n    dangerLight: '#ff708d'\n  }\n};\nconst palette$2 = {\n  primary: '#73a1ff',\n  success: '#5dcfe3',\n  info: '#ba7fec',\n  warning: '#ffa36b',\n  danger: '#ff6b83'\n};\nconst CORPORATE_THEME = {\n  name: 'corporate',\n  base: 'default',\n  variables: {\n    fontMain: 'Open Sans, sans-serif',\n    fontSecondary: 'Raleway, sans-serif',\n    bg: '#ffffff',\n    bg2: '#f7f9fc',\n    bg3: '#edf1f7',\n    bg4: '#e4e9f2',\n    border: '#ffffff',\n    border2: '#f7f9fc',\n    border3: '#edf1f7',\n    border4: '#e4e9f2',\n    border5: '#c5cee0',\n    fg: '#8f9bb3',\n    fgHeading: '#1a2138',\n    fgText: '#1a2138',\n    fgHighlight: palette$2.primary,\n    layoutBg: '#f7f9fc',\n    separator: '#edf1f7',\n    primary: palette$2.primary,\n    success: palette$2.success,\n    info: palette$2.info,\n    warning: palette$2.warning,\n    danger: palette$2.danger,\n    primaryLight: '#598bff',\n    successLight: '#2ce69b',\n    infoLight: '#42aaff',\n    warningLight: '#ffc94d',\n    dangerLight: '#ff708d'\n  }\n};\nconst palette$3 = {\n  primary: '#3366ff',\n  success: '#00d68f',\n  info: '#0095ff',\n  warning: '#ffaa00',\n  danger: '#ff3d71'\n};\nconst DARK_THEME = {\n  name: 'dark',\n  variables: {\n    fontMain: 'Open Sans, sans-serif',\n    fontSecondary: 'Raleway, sans-serif',\n    bg: '#222b45',\n    bg2: '#1a2138',\n    bg3: '#151a30',\n    bg4: '#101426',\n    border: '#222b45',\n    border2: '#1a2138',\n    border3: '#151a30',\n    border4: '#101426',\n    border5: '#101426',\n    fg: '#8f9bb3',\n    fgHeading: '#ffffff',\n    fgText: '#ffffff',\n    fgHighlight: palette$3.primary,\n    layoutBg: '#1b1b38',\n    separator: '#1b1b38',\n    primary: palette$3.primary,\n    success: palette$3.success,\n    info: palette$3.info,\n    warning: palette$3.warning,\n    danger: palette$3.danger,\n    primaryLight: '#598bff',\n    successLight: '#2ce69b',\n    infoLight: '#42aaff',\n    warningLight: '#ffc94d',\n    dangerLight: '#ff708d'\n  }\n};\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nconst BUILT_IN_THEMES = [DEFAULT_THEME, COSMIC_THEME, CORPORATE_THEME, DARK_THEME];\n/**\n * Js Themes registry - provides access to the JS themes' variables.\n * Usually shouldn't be used directly, but through the NbThemeService class methods (getJsTheme).\n */\n\nlet NbJSThemesRegistry = /*#__PURE__*/(() => {\n  class NbJSThemesRegistry {\n    constructor(builtInThemes, newThemes = []) {\n      this.themes = {};\n      const themes = this.combineByNames(newThemes, builtInThemes);\n      themes.forEach(theme => {\n        this.register(theme, theme.name, theme.base);\n      });\n    }\n    /**\n     * Registers a new JS theme\n     * @param config any\n     * @param themeName string\n     * @param baseTheme string\n     */\n\n\n    register(config, themeName, baseTheme) {\n      const base = this.has(baseTheme) ? this.get(baseTheme) : {};\n      this.themes[themeName] = this.mergeDeep({}, base, config);\n    }\n    /**\n     * Checks whether the theme is registered\n     * @param themeName\n     * @returns boolean\n     */\n\n\n    has(themeName) {\n      return !!this.themes[themeName];\n    }\n    /**\n     * Return a theme\n     * @param themeName\n     * @returns NbJSThemeOptions\n     */\n\n\n    get(themeName) {\n      if (!this.themes[themeName]) {\n        throw Error(`NbThemeConfig: no theme '${themeName}' found registered.`);\n      }\n\n      return JSON.parse(JSON.stringify(this.themes[themeName]));\n    }\n\n    combineByNames(newThemes, oldThemes) {\n      if (newThemes) {\n        const mergedThemes = [];\n        newThemes.forEach(theme => {\n          const sameOld = oldThemes.find(tm => tm.name === theme.name) || {};\n          const mergedTheme = this.mergeDeep({}, sameOld, theme);\n          mergedThemes.push(mergedTheme);\n        });\n        oldThemes.forEach(theme => {\n          if (!mergedThemes.find(tm => tm.name === theme.name)) {\n            mergedThemes.push(theme);\n          }\n        });\n        return mergedThemes;\n      }\n\n      return oldThemes;\n    }\n\n    isObject(item) {\n      return item && typeof item === 'object' && !Array.isArray(item);\n    } // TODO: move to helpers\n\n\n    mergeDeep(target, ...sources) {\n      if (!sources.length) {\n        return target;\n      }\n\n      const source = sources.shift();\n\n      if (this.isObject(target) && this.isObject(source)) {\n        for (const key in source) {\n          if (this.isObject(source[key])) {\n            if (!target[key]) {\n              Object.assign(target, {\n                [key]: {}\n              });\n            }\n\n            this.mergeDeep(target[key], source[key]);\n          } else {\n            Object.assign(target, {\n              [key]: source[key]\n            });\n          }\n        }\n      }\n\n      return this.mergeDeep(target, ...sources);\n    }\n\n  }\n\n  NbJSThemesRegistry.ɵfac = function NbJSThemesRegistry_Factory(t) {\n    return new (t || NbJSThemesRegistry)(ɵngcc0.ɵɵinject(NB_BUILT_IN_JS_THEMES), ɵngcc0.ɵɵinject(NB_JS_THEMES));\n  };\n\n  NbJSThemesRegistry.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: NbJSThemesRegistry,\n    factory: NbJSThemesRegistry.ɵfac\n  });\n  return NbJSThemesRegistry;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nconst DEFAULT_MEDIA_BREAKPOINTS = [{\n  name: 'xs',\n  width: 0\n}, {\n  name: 'is',\n  width: 400\n}, {\n  name: 'sm',\n  width: 576\n}, {\n  name: 'md',\n  width: 768\n}, {\n  name: 'lg',\n  width: 992\n}, {\n  name: 'xl',\n  width: 1200\n}, {\n  name: 'xxl',\n  width: 1400\n}, {\n  name: 'xxxl',\n  width: 1600\n}];\n/**\n * Manages media breakpoints\n *\n * Provides access to available media breakpoints to convert window width to a configured breakpoint,\n * e.g. 200px - *xs* breakpoint\n */\n\nlet NbMediaBreakpointsService = /*#__PURE__*/(() => {\n  class NbMediaBreakpointsService {\n    constructor(breakpoints) {\n      this.breakpoints = breakpoints;\n      this.breakpointsMap = this.breakpoints.reduce((res, b) => {\n        res[b.name] = b.width;\n        return res;\n      }, {});\n    }\n    /**\n     * Returns a configured breakpoint by width\n     * @param width number\n     * @returns {Z|{name: string, width: number}}\n     */\n\n\n    getByWidth(width) {\n      const unknown = {\n        name: 'unknown',\n        width: width\n      };\n      const breakpoints = this.getBreakpoints();\n      return breakpoints.find((point, index) => {\n        const next = breakpoints[index + 1];\n        return width >= point.width && (!next || width < next.width);\n      }) || unknown;\n    }\n    /**\n     * Returns a configured breakpoint by name\n     * @param name string\n     * @returns NbMediaBreakpoint\n     */\n\n\n    getByName(name) {\n      const unknown = {\n        name: 'unknown',\n        width: NaN\n      };\n      const breakpoints = this.getBreakpoints();\n      return breakpoints.find(point => name === point.name) || unknown;\n    }\n    /**\n     * Returns a list of configured breakpoints for the theme\n     * @returns NbMediaBreakpoint[]\n     */\n\n\n    getBreakpoints() {\n      return this.breakpoints;\n    }\n    /**\n     * Returns a map of configured breakpoints for the theme\n     * @returns {[p: string]: number}\n     */\n\n\n    getBreakpointsMap() {\n      return this.breakpointsMap;\n    }\n\n  }\n\n  NbMediaBreakpointsService.ɵfac = function NbMediaBreakpointsService_Factory(t) {\n    return new (t || NbMediaBreakpointsService)(ɵngcc0.ɵɵinject(NB_MEDIA_BREAKPOINTS));\n  };\n\n  NbMediaBreakpointsService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: NbMediaBreakpointsService,\n    factory: NbMediaBreakpointsService.ɵfac\n  });\n  return NbMediaBreakpointsService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * Main Nebular service. Includes various helper methods.\n */\n\n\nlet NbThemeService = /*#__PURE__*/(() => {\n  class NbThemeService {\n    constructor(options, breakpointService, jsThemesRegistry) {\n      this.options = options;\n      this.breakpointService = breakpointService;\n      this.jsThemesRegistry = jsThemesRegistry;\n      this.themeChanges$ = new ReplaySubject(1);\n      this.appendLayoutClass$ = new Subject();\n      this.removeLayoutClass$ = new Subject();\n      this.changeWindowWidth$ = new ReplaySubject(2);\n\n      if (options && options.name) {\n        this.changeTheme(options.name);\n      }\n    }\n    /**\n     * Change current application theme\n     * @param {string} name\n     */\n\n\n    changeTheme(name) {\n      this.themeChanges$.next({\n        name,\n        previous: this.currentTheme\n      });\n      this.currentTheme = name;\n    }\n\n    changeWindowWidth(width) {\n      this.changeWindowWidth$.next(width);\n    }\n    /**\n     * Returns a theme object with variables (color/paddings/etc) on a theme change.\n     * Once subscribed - returns current theme.\n     *\n     * @returns {Observable<NbJSThemeOptions>}\n     */\n\n\n    getJsTheme() {\n      return this.onThemeChange().pipe(map(theme => {\n        return this.jsThemesRegistry.get(theme.name);\n      }));\n    }\n    /**\n     * Triggers media query breakpoint change\n     * Returns a pair where the first item is previous media breakpoint and the second item is current breakpoit.\n     * ```ts\n     *  [{ name: 'xs', width: 0 }, { name: 'md', width: 768 }] // change from `xs` to `md`\n     * ```\n     * @returns {Observable<[NbMediaBreakpoint, NbMediaBreakpoint]>}\n     */\n\n\n    onMediaQueryChange() {\n      return this.changeWindowWidth$.pipe(startWith(undefined), pairwise(), map(([prevWidth, width]) => {\n        return [this.breakpointService.getByWidth(prevWidth), this.breakpointService.getByWidth(width)];\n      }), filter(([prevPoint, point]) => {\n        return prevPoint.name !== point.name;\n      }), distinctUntilChanged(null, params => params[0].name + params[1].name), share());\n    }\n    /**\n     * Triggered when current theme is changed\n     * @returns {Observable<any>}\n     */\n\n\n    onThemeChange() {\n      return this.themeChanges$.pipe(share());\n    }\n    /**\n     * Append a class to nb-layout\n     * @param {string} className\n     */\n\n\n    appendLayoutClass(className) {\n      this.appendLayoutClass$.next(className);\n    }\n    /**\n     * Triggered when a new class is added to nb-layout through `appendLayoutClass` method\n     * @returns {Observable<any>}\n     */\n\n\n    onAppendLayoutClass() {\n      return this.appendLayoutClass$.pipe(share());\n    }\n    /**\n     * Removes a class from nb-layout\n     * @param {string} className\n     */\n\n\n    removeLayoutClass(className) {\n      this.removeLayoutClass$.next(className);\n    }\n    /**\n     * Triggered when a class is removed from nb-layout through `removeLayoutClass` method\n     * @returns {Observable<any>}\n     */\n\n\n    onRemoveLayoutClass() {\n      return this.removeLayoutClass$.pipe(share());\n    }\n\n  }\n\n  NbThemeService.ɵfac = function NbThemeService_Factory(t) {\n    return new (t || NbThemeService)(ɵngcc0.ɵɵinject(NB_THEME_OPTIONS), ɵngcc0.ɵɵinject(NbMediaBreakpointsService), ɵngcc0.ɵɵinject(NbJSThemesRegistry));\n  };\n\n  NbThemeService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: NbThemeService,\n    factory: NbThemeService.ɵfac\n  });\n  return NbThemeService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * Service to control the global page spinner.\n */\n\n\nlet NbSpinnerService = /*#__PURE__*/(() => {\n  class NbSpinnerService {\n    constructor(document) {\n      this.document = document;\n      this.loaders = [];\n      this.selector = 'nb-global-spinner';\n    }\n    /**\n     * Appends new loader to the list of loader to be completed before\n     * spinner will be hidden\n     * @param method Promise<any>\n     */\n\n\n    registerLoader(method) {\n      this.loaders.push(method);\n    }\n    /**\n     * Clears the list of loader\n     */\n\n\n    clear() {\n      this.loaders = [];\n    }\n    /**\n     * Start the loader process, show spinnder and execute loaders\n     */\n\n\n    load() {\n      this.showSpinner();\n      this.executeAll();\n    }\n\n    executeAll(done = () => {}) {\n      Promise.all(this.loaders).then(values => {\n        this.hideSpinner();\n        done.call(null, values);\n      }).catch(error => {\n        // TODO: Promise.reject\n        console.error(error);\n      });\n    } // TODO is there any better way of doing this?\n\n\n    showSpinner() {\n      const el = this.getSpinnerElement();\n\n      if (el) {\n        el.style['display'] = 'block';\n      }\n    }\n\n    hideSpinner() {\n      const el = this.getSpinnerElement();\n\n      if (el) {\n        el.style['display'] = 'none';\n      }\n    }\n\n    getSpinnerElement() {\n      return this.document.getElementById(this.selector);\n    }\n\n  }\n\n  NbSpinnerService.ɵfac = function NbSpinnerService_Factory(t) {\n    return new (t || NbSpinnerService)(ɵngcc0.ɵɵinject(NB_DOCUMENT));\n  };\n\n  NbSpinnerService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: NbSpinnerService,\n    factory: NbSpinnerService.ɵfac\n  });\n  return NbSpinnerService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Layout direction.\n * */\n\n\nvar NbLayoutDirection = /*#__PURE__*/(() => {\n  (function (NbLayoutDirection) {\n    NbLayoutDirection[\"LTR\"] = \"ltr\";\n    NbLayoutDirection[\"RTL\"] = \"rtl\";\n  })(NbLayoutDirection || (NbLayoutDirection = {}));\n\n  return NbLayoutDirection;\n})();\n\n/**\n * Layout direction setting injection token.\n * */\nconst NB_LAYOUT_DIRECTION = new InjectionToken('Layout direction');\n/**\n * Layout Direction Service.\n * Allows to set or get layout direction and listen to its changes\n */\n\nlet NbLayoutDirectionService = /*#__PURE__*/(() => {\n  class NbLayoutDirectionService {\n    constructor(direction = NbLayoutDirection.LTR) {\n      this.direction = direction;\n      this.$directionChange = new ReplaySubject(1);\n      this.setDirection(direction);\n    }\n    /**\n     * Returns true if layout direction set to left to right.\n     * @returns boolean.\n     * */\n\n\n    isLtr() {\n      return this.direction === NbLayoutDirection.LTR;\n    }\n    /**\n     * Returns true if layout direction set to right to left.\n     * @returns boolean.\n     * */\n\n\n    isRtl() {\n      return this.direction === NbLayoutDirection.RTL;\n    }\n    /**\n     * Returns current layout direction.\n     * @returns NbLayoutDirection.\n     * */\n\n\n    getDirection() {\n      return this.direction;\n    }\n    /**\n     * Sets layout direction\n     * @param {NbLayoutDirection} direction\n     */\n\n\n    setDirection(direction) {\n      this.direction = direction;\n      this.$directionChange.next(direction);\n    }\n    /**\n     * Triggered when direction was changed.\n     * @returns Observable<NbLayoutDirection>.\n     */\n\n\n    onDirectionChange() {\n      return this.$directionChange.pipe(share());\n    }\n\n  }\n\n  NbLayoutDirectionService.ɵfac = function NbLayoutDirectionService_Factory(t) {\n    return new (t || NbLayoutDirectionService)(ɵngcc0.ɵɵinject(NB_LAYOUT_DIRECTION, 8));\n  };\n\n  NbLayoutDirectionService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: NbLayoutDirectionService,\n    factory: NbLayoutDirectionService.ɵfac\n  });\n  return NbLayoutDirectionService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Layout scroll service. Provides information about current scroll position,\n * as well as methods to update position of the scroll.\n *\n * The reason we added this service is that in Nebular there are two scroll modes:\n * - the default mode when scroll is on body\n * - and the `withScroll` mode, when scroll is removed from the body and moved to an element inside of the\n * `nb-layout` component\n */\n\n\nlet NbLayoutScrollService = /*#__PURE__*/(() => {\n  class NbLayoutScrollService {\n    constructor() {\n      this.scrollPositionReq$ = new Subject();\n      this.manualScroll$ = new Subject();\n      this.scroll$ = new Subject();\n      this.scrollable$ = new Subject();\n    }\n    /**\n     * Returns scroll position\n     *\n     * @returns {Observable<NbScrollPosition>}\n     */\n\n\n    getPosition() {\n      return new Observable(observer => {\n        const listener = new Subject();\n        listener.subscribe(observer);\n        this.scrollPositionReq$.next({\n          listener\n        });\n        return () => listener.complete();\n      });\n    }\n    /**\n     * Sets scroll position\n     *\n     * @param {number} x\n     * @param {number} y\n     */\n\n\n    scrollTo(x = null, y = null) {\n      this.manualScroll$.next({\n        x,\n        y\n      });\n    }\n    /**\n     * Returns a stream of scroll events\n     *\n     * @returns {Observable<any>}\n     */\n\n\n    onScroll() {\n      return this.scroll$.pipe(share());\n    }\n    /**\n     * @private\n     * @returns Observable<NbScrollPosition>.\n     */\n\n\n    onManualScroll() {\n      return this.manualScroll$.pipe(share());\n    }\n    /**\n     * @private\n     * @returns {Subject<any>}\n     */\n\n\n    onGetPosition() {\n      return this.scrollPositionReq$;\n    }\n\n    onScrollableChange() {\n      return this.scrollable$.pipe(share());\n    }\n    /**\n     * @private\n     * @param {any} event\n     */\n\n\n    fireScrollChange(event) {\n      this.scroll$.next(event);\n    }\n\n    scrollable(scrollable) {\n      this.scrollable$.next(scrollable);\n    }\n\n  }\n\n  NbLayoutScrollService.ɵfac = function NbLayoutScrollService_Factory(t) {\n    return new (t || NbLayoutScrollService)();\n  };\n\n  NbLayoutScrollService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: NbLayoutScrollService,\n    factory: NbLayoutScrollService.ɵfac\n  });\n  return NbLayoutScrollService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Simple helper service to return Layout dimensions\n * Depending of current Layout scroll mode (default or `withScroll` when scroll is moved to an element\n * inside of the layout) corresponding dimensions will be returns  - of `documentElement` in first case and\n * `.scrollable-container` in the second.\n */\n\n\nlet NbLayoutRulerService = /*#__PURE__*/(() => {\n  class NbLayoutRulerService {\n    constructor() {\n      this.contentDimensionsReq$ = new Subject();\n    }\n    /**\n     * Content dimensions\n     * @returns {Observable<NbLayoutDimensions>}\n     */\n\n\n    getDimensions() {\n      return new Observable(observer => {\n        const listener = new Subject();\n        listener.subscribe(observer);\n        this.contentDimensionsReq$.next({\n          listener\n        });\n        return () => listener.complete();\n      });\n    }\n    /**\n     * @private\n     * @returns {Subject<any>}\n     */\n\n\n    onGetDimensions() {\n      return this.contentDimensionsReq$;\n    }\n\n  }\n\n  NbLayoutRulerService.ɵfac = function NbLayoutRulerService_Factory(t) {\n    return new (t || NbLayoutRulerService)();\n  };\n\n  NbLayoutRulerService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: NbLayoutRulerService,\n    factory: NbLayoutRulerService.ɵfac\n  });\n  return NbLayoutRulerService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nlet NbSharedModule = /*#__PURE__*/(() => {\n  class NbSharedModule {}\n\n  NbSharedModule.ɵfac = function NbSharedModule_Factory(t) {\n    return new (t || NbSharedModule)();\n  };\n\n  NbSharedModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NbSharedModule\n  });\n  NbSharedModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [CommonModule, // TODO: probably we don't need FormsModule in SharedModule\n    FormsModule, RouterModule]\n  });\n  return NbSharedModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NbSharedModule, {\n    exports: function () {\n      return [CommonModule, // TODO: probably we don't need FormsModule in SharedModule\n      FormsModule, RouterModule];\n    }\n  });\n})();\n/**\n * Overrides angular cdk focus trap to keep restore functionality inside trap.\n * */\n\n\nclass NbFocusTrap extends FocusTrap {\n  constructor(element, checker, ngZone, document, deferAnchors) {\n    super(element, checker, ngZone, document, deferAnchors);\n    this.element = element;\n    this.checker = checker;\n    this.ngZone = ngZone;\n    this.document = document;\n    this.savePreviouslyFocusedElement();\n  }\n\n  restoreFocus() {\n    this.previouslyFocusedElement.focus();\n    this.destroy();\n  }\n\n  blurPreviouslyFocusedElement() {\n    this.previouslyFocusedElement.blur();\n  }\n\n  savePreviouslyFocusedElement() {\n    this.previouslyFocusedElement = this.document.activeElement;\n  }\n\n}\n\nlet NbFocusTrapFactoryService = /*#__PURE__*/(() => {\n  class NbFocusTrapFactoryService extends FocusTrapFactory {\n    constructor(checker, ngZone, document) {\n      super(checker, ngZone, document);\n      this.checker = checker;\n      this.ngZone = ngZone;\n      this.document = document;\n    }\n\n    create(element, deferCaptureElements) {\n      return new NbFocusTrap(element, this.checker, this.ngZone, this.document, deferCaptureElements);\n    }\n\n  }\n\n  NbFocusTrapFactoryService.ɵfac = function NbFocusTrapFactoryService_Factory(t) {\n    return new (t || NbFocusTrapFactoryService)(ɵngcc0.ɵɵinject(ɵngcc1.InteractivityChecker), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(NB_DOCUMENT));\n  };\n\n  NbFocusTrapFactoryService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: NbFocusTrapFactoryService,\n    factory: NbFocusTrapFactoryService.ɵfac\n  });\n  return NbFocusTrapFactoryService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nclass NbFocusKeyManager extends FocusKeyManager {}\n\nclass NbFocusKeyManagerFactoryService {\n  create(items) {\n    return new NbFocusKeyManager(items);\n  }\n\n}\n\nclass NbActiveDescendantKeyManager extends ActiveDescendantKeyManager {}\n\nclass NbActiveDescendantKeyManagerFactoryService {\n  create(items) {\n    return new NbActiveDescendantKeyManager(items);\n  }\n\n}\n\nvar NbKeyManagerActiveItemMode = /*#__PURE__*/(() => {\n  (function (NbKeyManagerActiveItemMode) {\n    NbKeyManagerActiveItemMode[NbKeyManagerActiveItemMode[\"RESET_ACTIVE\"] = -1] = \"RESET_ACTIVE\";\n    NbKeyManagerActiveItemMode[NbKeyManagerActiveItemMode[\"FIRST_ACTIVE\"] = 0] = \"FIRST_ACTIVE\";\n  })(NbKeyManagerActiveItemMode || (NbKeyManagerActiveItemMode = {}));\n\n  return NbKeyManagerActiveItemMode;\n})();\nlet NbFocusMonitor = /*#__PURE__*/(() => {\n  class NbFocusMonitor extends FocusMonitor {}\n\n  NbFocusMonitor.ɵfac = /*@__PURE__*/function () {\n    let ɵNbFocusMonitor_BaseFactory;\n    return function NbFocusMonitor_Factory(t) {\n      return (ɵNbFocusMonitor_BaseFactory || (ɵNbFocusMonitor_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(NbFocusMonitor)))(t || NbFocusMonitor);\n    };\n  }();\n\n  NbFocusMonitor.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: NbFocusMonitor,\n    factory: NbFocusMonitor.ɵfac\n  });\n  return NbFocusMonitor;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet NbA11yModule = /*#__PURE__*/(() => {\n  class NbA11yModule {\n    static forRoot() {\n      return {\n        ngModule: NbA11yModule,\n        providers: [NbFocusTrapFactoryService, NbFocusKeyManagerFactoryService, NbActiveDescendantKeyManagerFactoryService, {\n          provide: NbFocusMonitor,\n          useClass: FocusMonitor\n        }]\n      };\n    }\n\n  }\n\n  NbA11yModule.ɵfac = function NbA11yModule_Factory(t) {\n    return new (t || NbA11yModule)();\n  };\n\n  NbA11yModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NbA11yModule\n  });\n  NbA11yModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n  return NbA11yModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet NbPortalDirective = /*#__PURE__*/(() => {\n  class NbPortalDirective extends CdkPortal {}\n\n  NbPortalDirective.ɵfac = /*@__PURE__*/function () {\n    let ɵNbPortalDirective_BaseFactory;\n    return function NbPortalDirective_Factory(t) {\n      return (ɵNbPortalDirective_BaseFactory || (ɵNbPortalDirective_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(NbPortalDirective)))(t || NbPortalDirective);\n    };\n  }();\n\n  NbPortalDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NbPortalDirective,\n    selectors: [[\"\", \"nbPortal\", \"\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return NbPortalDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet NbPortalOutletDirective = /*#__PURE__*/(() => {\n  class NbPortalOutletDirective extends CdkPortalOutlet {}\n\n  NbPortalOutletDirective.ɵfac = /*@__PURE__*/function () {\n    let ɵNbPortalOutletDirective_BaseFactory;\n    return function NbPortalOutletDirective_Factory(t) {\n      return (ɵNbPortalOutletDirective_BaseFactory || (ɵNbPortalOutletDirective_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(NbPortalOutletDirective)))(t || NbPortalOutletDirective);\n    };\n  }();\n\n  NbPortalOutletDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NbPortalOutletDirective,\n    selectors: [[\"\", \"nbPortalOutlet\", \"\"]],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return NbPortalOutletDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nclass NbComponentPortal extends ComponentPortal {}\n\nlet NbOverlay = /*#__PURE__*/(() => {\n  class NbOverlay extends Overlay {}\n\n  NbOverlay.ɵfac = /*@__PURE__*/function () {\n    let ɵNbOverlay_BaseFactory;\n    return function NbOverlay_Factory(t) {\n      return (ɵNbOverlay_BaseFactory || (ɵNbOverlay_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(NbOverlay)))(t || NbOverlay);\n    };\n  }();\n\n  NbOverlay.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: NbOverlay,\n    factory: NbOverlay.ɵfac\n  });\n  return NbOverlay;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet NbOverlayPositionBuilder = /*#__PURE__*/(() => {\n  class NbOverlayPositionBuilder extends OverlayPositionBuilder {}\n\n  NbOverlayPositionBuilder.ɵfac = /*@__PURE__*/function () {\n    let ɵNbOverlayPositionBuilder_BaseFactory;\n    return function NbOverlayPositionBuilder_Factory(t) {\n      return (ɵNbOverlayPositionBuilder_BaseFactory || (ɵNbOverlayPositionBuilder_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(NbOverlayPositionBuilder)))(t || NbOverlayPositionBuilder);\n    };\n  }();\n\n  NbOverlayPositionBuilder.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: NbOverlayPositionBuilder,\n    factory: NbOverlayPositionBuilder.ɵfac\n  });\n  return NbOverlayPositionBuilder;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nclass NbTemplatePortal extends TemplatePortal {\n  constructor(template, viewContainerRef, context) {\n    super(template, viewContainerRef, context);\n  }\n\n}\n\nlet NbOverlayContainer = /*#__PURE__*/(() => {\n  class NbOverlayContainer extends OverlayContainer {}\n\n  NbOverlayContainer.ɵfac = /*@__PURE__*/function () {\n    let ɵNbOverlayContainer_BaseFactory;\n    return function NbOverlayContainer_Factory(t) {\n      return (ɵNbOverlayContainer_BaseFactory || (ɵNbOverlayContainer_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(NbOverlayContainer)))(t || NbOverlayContainer);\n    };\n  }();\n\n  NbOverlayContainer.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: NbOverlayContainer,\n    factory: NbOverlayContainer.ɵfac\n  });\n  return NbOverlayContainer;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nclass NbFlexibleConnectedPositionStrategy extends FlexibleConnectedPositionStrategy {}\n\nclass NbPortalInjector extends PortalInjector {}\n\nconst CDK_MODULES = [OverlayModule, PortalModule];\n/**\n * This module helps us to keep all angular/cdk deps inside our cdk module via providing aliases.\n * Approach will help us move cdk in separate npm package and refactor nebular/theme code.\n * */\n\nlet NbCdkMappingModule = /*#__PURE__*/(() => {\n  class NbCdkMappingModule {\n    static forRoot() {\n      return {\n        ngModule: NbCdkMappingModule,\n        providers: [NbOverlay, NbOverlayPositionBuilder]\n      };\n    }\n\n  }\n\n  NbCdkMappingModule.ɵfac = function NbCdkMappingModule_Factory(t) {\n    return new (t || NbCdkMappingModule)();\n  };\n\n  NbCdkMappingModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NbCdkMappingModule\n  });\n  NbCdkMappingModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[...CDK_MODULES], OverlayModule, PortalModule]\n  });\n  return NbCdkMappingModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NbCdkMappingModule, {\n    declarations: [NbPortalDirective, NbPortalOutletDirective],\n    imports: [OverlayModule, PortalModule],\n    exports: [OverlayModule, PortalModule, NbPortalDirective, NbPortalOutletDirective]\n  });\n})();\n\nlet NbPlatform = /*#__PURE__*/(() => {\n  class NbPlatform extends Platform {}\n\n  NbPlatform.ɵfac = /*@__PURE__*/function () {\n    let ɵNbPlatform_BaseFactory;\n    return function NbPlatform_Factory(t) {\n      return (ɵNbPlatform_BaseFactory || (ɵNbPlatform_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(NbPlatform)))(t || NbPlatform);\n    };\n  }();\n\n  NbPlatform.ɵprov = ɵɵdefineInjectable({\n    factory: function NbPlatform_Factory() {\n      return new Platform(ɵɵinject(PLATFORM_ID));\n    },\n    token: NbPlatform,\n    providedIn: \"root\"\n  });\n  return NbPlatform;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Provides nb-layout as overlay container.\n * Container has to be cleared when layout destroys.\n * Another way previous version of the container will be used\n * but it isn't inserted in DOM and exists in memory only.\n * This case important only if you switch between multiple layouts.\n * */\n\n\nlet NbOverlayContainerAdapter = /*#__PURE__*/(() => {\n  class NbOverlayContainerAdapter extends NbOverlayContainer {\n    setContainer(container) {\n      this.container = container;\n    }\n\n    clearContainer() {\n      this.container = null;\n      this._containerElement = null;\n    }\n\n    _createContainer() {\n      const container = this._document.createElement('div');\n\n      container.classList.add('cdk-overlay-container');\n      this.container.appendChild(container);\n      this._containerElement = container;\n    }\n\n  }\n\n  NbOverlayContainerAdapter.ɵfac = /*@__PURE__*/function () {\n    let ɵNbOverlayContainerAdapter_BaseFactory;\n    return function NbOverlayContainerAdapter_Factory(t) {\n      return (ɵNbOverlayContainerAdapter_BaseFactory || (ɵNbOverlayContainerAdapter_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(NbOverlayContainerAdapter)))(t || NbOverlayContainerAdapter);\n    };\n  }();\n\n  NbOverlayContainerAdapter.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: NbOverlayContainerAdapter,\n    factory: NbOverlayContainerAdapter.ɵfac\n  });\n  return NbOverlayContainerAdapter;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet NbViewportRulerAdapter = /*#__PURE__*/(() => {\n  class NbViewportRulerAdapter extends ViewportRuler {\n    constructor(platform, ngZone, ruler, scroll, document) {\n      super(platform, ngZone, document);\n      this.ruler = ruler;\n      this.scroll = scroll;\n    }\n\n    getViewportSize() {\n      let res;\n      /*\n      * getDimensions call is really synchronous operation.\n      * And we have to conform with the interface of the original service.\n      * */\n\n      this.ruler.getDimensions().pipe(map(dimensions => ({\n        width: dimensions.clientWidth,\n        height: dimensions.clientHeight\n      }))).subscribe(rect => res = rect);\n      return res;\n    }\n\n    getViewportScrollPosition() {\n      let res;\n      /*\n      * getPosition call is really synchronous operation.\n      * And we have to conform with the interface of the original service.\n      * */\n\n      this.scroll.getPosition().pipe(map(position => ({\n        top: position.y,\n        left: position.x\n      }))).subscribe(position => res = position);\n      return res;\n    }\n\n  }\n\n  NbViewportRulerAdapter.ɵfac = function NbViewportRulerAdapter_Factory(t) {\n    return new (t || NbViewportRulerAdapter)(ɵngcc0.ɵɵinject(NbPlatform), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(NbLayoutRulerService), ɵngcc0.ɵɵinject(NbLayoutScrollService), ɵngcc0.ɵɵinject(NB_DOCUMENT));\n  };\n\n  NbViewportRulerAdapter.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: NbViewportRulerAdapter,\n    factory: NbViewportRulerAdapter.ɵfac\n  });\n  return NbViewportRulerAdapter;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar NbGlobalLogicalPosition = /*#__PURE__*/(() => {\n  (function (NbGlobalLogicalPosition) {\n    NbGlobalLogicalPosition[\"TOP_START\"] = \"top-start\";\n    NbGlobalLogicalPosition[\"TOP_END\"] = \"top-end\";\n    NbGlobalLogicalPosition[\"BOTTOM_START\"] = \"bottom-start\";\n    NbGlobalLogicalPosition[\"BOTTOM_END\"] = \"bottom-end\";\n  })(NbGlobalLogicalPosition || (NbGlobalLogicalPosition = {}));\n\n  return NbGlobalLogicalPosition;\n})();\nvar NbGlobalPhysicalPosition = /*#__PURE__*/(() => {\n  (function (NbGlobalPhysicalPosition) {\n    NbGlobalPhysicalPosition[\"TOP_RIGHT\"] = \"top-right\";\n    NbGlobalPhysicalPosition[\"TOP_LEFT\"] = \"top-left\";\n    NbGlobalPhysicalPosition[\"BOTTOM_RIGHT\"] = \"bottom-right\";\n    NbGlobalPhysicalPosition[\"BOTTOM_LEFT\"] = \"bottom-left\";\n  })(NbGlobalPhysicalPosition || (NbGlobalPhysicalPosition = {}));\n\n  return NbGlobalPhysicalPosition;\n})();\nlet NbPositionHelper = /*#__PURE__*/(() => {\n  class NbPositionHelper {\n    constructor(layoutDirection) {\n      this.layoutDirection = layoutDirection;\n    }\n\n    toLogicalPosition(position) {\n      if (Object.values(NbGlobalLogicalPosition).includes(position)) {\n        return position;\n      }\n\n      if (this.layoutDirection.isLtr()) {\n        return this.toLogicalPositionWhenLtr(position);\n      } else {\n        return this.toLogicalPositionWhenRtl(position);\n      }\n    }\n\n    toPhysicalPosition(position) {\n      if (Object.values(NbGlobalPhysicalPosition).includes(position)) {\n        return position;\n      }\n\n      if (this.layoutDirection.isLtr()) {\n        return this.toPhysicalPositionWhenLtr(position);\n      } else {\n        return this.toPhysicalPositionWhenRtl(position);\n      }\n    }\n\n    isTopPosition(position) {\n      const logicalPosition = this.toLogicalPosition(position);\n      return logicalPosition === NbGlobalLogicalPosition.TOP_END || logicalPosition === NbGlobalLogicalPosition.TOP_START;\n    }\n\n    isRightPosition(position) {\n      const physicalPosition = this.toPhysicalPosition(position);\n      return physicalPosition === NbGlobalPhysicalPosition.TOP_RIGHT || physicalPosition === NbGlobalPhysicalPosition.BOTTOM_RIGHT;\n    }\n\n    toLogicalPositionWhenLtr(position) {\n      switch (position) {\n        case NbGlobalPhysicalPosition.TOP_RIGHT:\n          return NbGlobalLogicalPosition.TOP_END;\n\n        case NbGlobalPhysicalPosition.TOP_LEFT:\n          return NbGlobalLogicalPosition.TOP_START;\n\n        case NbGlobalPhysicalPosition.BOTTOM_RIGHT:\n          return NbGlobalLogicalPosition.BOTTOM_END;\n\n        case NbGlobalPhysicalPosition.BOTTOM_LEFT:\n          return NbGlobalLogicalPosition.BOTTOM_START;\n      }\n    }\n\n    toLogicalPositionWhenRtl(position) {\n      switch (position) {\n        case NbGlobalPhysicalPosition.TOP_RIGHT:\n          return NbGlobalLogicalPosition.TOP_START;\n\n        case NbGlobalPhysicalPosition.TOP_LEFT:\n          return NbGlobalLogicalPosition.TOP_END;\n\n        case NbGlobalPhysicalPosition.BOTTOM_RIGHT:\n          return NbGlobalLogicalPosition.BOTTOM_START;\n\n        case NbGlobalPhysicalPosition.BOTTOM_LEFT:\n          return NbGlobalLogicalPosition.BOTTOM_END;\n      }\n    }\n\n    toPhysicalPositionWhenLtr(position) {\n      switch (position) {\n        case NbGlobalLogicalPosition.TOP_START:\n          return NbGlobalPhysicalPosition.TOP_LEFT;\n\n        case NbGlobalLogicalPosition.TOP_END:\n          return NbGlobalPhysicalPosition.TOP_RIGHT;\n\n        case NbGlobalLogicalPosition.BOTTOM_START:\n          return NbGlobalPhysicalPosition.BOTTOM_LEFT;\n\n        case NbGlobalLogicalPosition.BOTTOM_END:\n          return NbGlobalPhysicalPosition.BOTTOM_RIGHT;\n      }\n    }\n\n    toPhysicalPositionWhenRtl(position) {\n      switch (position) {\n        case NbGlobalLogicalPosition.TOP_START:\n          return NbGlobalPhysicalPosition.TOP_RIGHT;\n\n        case NbGlobalLogicalPosition.TOP_END:\n          return NbGlobalPhysicalPosition.TOP_LEFT;\n\n        case NbGlobalLogicalPosition.BOTTOM_START:\n          return NbGlobalPhysicalPosition.BOTTOM_RIGHT;\n\n        case NbGlobalLogicalPosition.BOTTOM_END:\n          return NbGlobalPhysicalPosition.BOTTOM_LEFT;\n      }\n    }\n\n  }\n\n  NbPositionHelper.ɵfac = function NbPositionHelper_Factory(t) {\n    return new (t || NbPositionHelper)(ɵngcc0.ɵɵinject(NbLayoutDirectionService));\n  };\n\n  NbPositionHelper.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: NbPositionHelper,\n    factory: NbPositionHelper.ɵfac\n  });\n  return NbPositionHelper;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar NbAdjustment = /*#__PURE__*/(() => {\n  (function (NbAdjustment) {\n    NbAdjustment[\"NOOP\"] = \"noop\";\n    NbAdjustment[\"CLOCKWISE\"] = \"clockwise\";\n    NbAdjustment[\"COUNTERCLOCKWISE\"] = \"counterclockwise\";\n    NbAdjustment[\"VERTICAL\"] = \"vertical\";\n    NbAdjustment[\"HORIZONTAL\"] = \"horizontal\";\n  })(NbAdjustment || (NbAdjustment = {}));\n\n  return NbAdjustment;\n})();\nvar NbPosition = /*#__PURE__*/(() => {\n  (function (NbPosition) {\n    NbPosition[\"TOP\"] = \"top\";\n    NbPosition[\"BOTTOM\"] = \"bottom\";\n    NbPosition[\"LEFT\"] = \"left\";\n    NbPosition[\"RIGHT\"] = \"right\";\n    NbPosition[\"START\"] = \"start\";\n    NbPosition[\"END\"] = \"end\";\n    NbPosition[\"TOP_END\"] = \"top-end\";\n    NbPosition[\"TOP_START\"] = \"top-start\";\n    NbPosition[\"BOTTOM_END\"] = \"bottom-end\";\n    NbPosition[\"BOTTOM_START\"] = \"bottom-start\";\n    NbPosition[\"END_TOP\"] = \"end-top\";\n    NbPosition[\"END_BOTTOM\"] = \"end-bottom\";\n    NbPosition[\"START_TOP\"] = \"start-top\";\n    NbPosition[\"START_BOTTOM\"] = \"start-bottom\";\n  })(NbPosition || (NbPosition = {}));\n\n  return NbPosition;\n})();\nconst POSITIONS = {\n  [NbPosition.RIGHT](offset) {\n    return {\n      originX: 'end',\n      originY: 'center',\n      overlayX: 'start',\n      overlayY: 'center',\n      offsetX: offset\n    };\n  },\n\n  [NbPosition.BOTTOM](offset) {\n    return {\n      originX: 'center',\n      originY: 'bottom',\n      overlayX: 'center',\n      overlayY: 'top',\n      offsetY: offset\n    };\n  },\n\n  [NbPosition.LEFT](offset) {\n    return {\n      originX: 'start',\n      originY: 'center',\n      overlayX: 'end',\n      overlayY: 'center',\n      offsetX: -offset\n    };\n  },\n\n  [NbPosition.TOP](offset) {\n    return {\n      originX: 'center',\n      originY: 'top',\n      overlayX: 'center',\n      overlayY: 'bottom',\n      offsetY: -offset\n    };\n  },\n\n  [NbPosition.START](offset) {\n    return this[NbPosition.LEFT](offset);\n  },\n\n  [NbPosition.END](offset) {\n    return this[NbPosition.RIGHT](offset);\n  },\n\n  [NbPosition.END_TOP](offset) {\n    return {\n      originX: 'end',\n      originY: 'bottom',\n      overlayX: 'start',\n      overlayY: 'bottom',\n      offsetX: offset\n    };\n  },\n\n  [NbPosition.END_BOTTOM](offset) {\n    return {\n      originX: 'end',\n      originY: 'top',\n      overlayX: 'start',\n      overlayY: 'top',\n      offsetX: offset\n    };\n  },\n\n  [NbPosition.BOTTOM_START](offset) {\n    return {\n      originX: 'end',\n      originY: 'bottom',\n      overlayX: 'end',\n      overlayY: 'top',\n      offsetY: offset\n    };\n  },\n\n  [NbPosition.BOTTOM_END](offset) {\n    return {\n      originX: 'start',\n      originY: 'bottom',\n      overlayX: 'start',\n      overlayY: 'top',\n      offsetY: offset\n    };\n  },\n\n  [NbPosition.START_TOP](offset) {\n    return {\n      originX: 'start',\n      originY: 'bottom',\n      overlayX: 'end',\n      overlayY: 'bottom',\n      offsetX: -offset\n    };\n  },\n\n  [NbPosition.START_BOTTOM](offset) {\n    return {\n      originX: 'start',\n      originY: 'top',\n      overlayX: 'end',\n      overlayY: 'top',\n      offsetX: -offset\n    };\n  },\n\n  [NbPosition.TOP_START](offset) {\n    return {\n      originX: 'end',\n      originY: 'top',\n      overlayX: 'end',\n      overlayY: 'bottom',\n      offsetY: -offset\n    };\n  },\n\n  [NbPosition.TOP_END](offset) {\n    return {\n      originX: 'start',\n      originY: 'top',\n      overlayX: 'start',\n      overlayY: 'bottom',\n      offsetY: -offset\n    };\n  }\n\n};\nconst COUNTER_CLOCKWISE_POSITIONS = [NbPosition.TOP, NbPosition.TOP_END, NbPosition.TOP_START, NbPosition.START, NbPosition.START_TOP, NbPosition.START_BOTTOM, NbPosition.BOTTOM, NbPosition.BOTTOM_START, NbPosition.BOTTOM_END, NbPosition.END, NbPosition.END_BOTTOM, NbPosition.END_TOP];\nconst CLOCKWISE_POSITIONS = [NbPosition.TOP, NbPosition.TOP_START, NbPosition.TOP_END, NbPosition.END, NbPosition.END_TOP, NbPosition.END_BOTTOM, NbPosition.BOTTOM, NbPosition.BOTTOM_END, NbPosition.BOTTOM_START, NbPosition.START, NbPosition.START_BOTTOM, NbPosition.START_TOP];\nconst VERTICAL_POSITIONS = [NbPosition.BOTTOM, NbPosition.TOP];\nconst HORIZONTAL_POSITIONS = [NbPosition.START, NbPosition.END];\n\nfunction comparePositions(p1, p2) {\n  return p1.originX === p2.originX && p1.originY === p2.originY && p1.overlayX === p2.overlayX && p1.overlayY === p2.overlayY;\n}\n/**\n * The main idea of the adjustable connected strategy is to provide predefined set of positions for your overlay.\n * You have to provide adjustment and appropriate strategy will be chosen in runtime.\n * */\n\n\nclass NbAdjustableConnectedPositionStrategy extends NbFlexibleConnectedPositionStrategy {\n  constructor() {\n    super(...arguments);\n    this._offset = 15;\n    this.positionChange = this.positionChanges.pipe(map(positionChange => positionChange.connectionPair), map(connectionPair => {\n      return this.appliedPositions.find(({\n        connectedPosition\n      }) => {\n        return comparePositions(connectedPosition, connectionPair);\n      }).key;\n    }));\n  }\n\n  attach(overlayRef) {\n    /**\n     * We have to apply positions before attach because super.attach() validates positions and crashes app\n     * if no positions provided.\n     * */\n    this.applyPositions();\n    super.attach(overlayRef);\n  }\n\n  apply() {\n    this.applyPositions();\n    super.apply();\n  }\n\n  position(position) {\n    this._position = position;\n    return this;\n  }\n\n  adjustment(adjustment) {\n    this._adjustment = adjustment;\n    return this;\n  }\n\n  offset(offset) {\n    this._offset = offset;\n    return this;\n  }\n\n  applyPositions() {\n    const positions = this.createPositions();\n    this.persistChosenPositions(positions);\n    this.withPositions(this.appliedPositions.map(({\n      connectedPosition\n    }) => connectedPosition));\n  }\n\n  createPositions() {\n    switch (this._adjustment) {\n      case NbAdjustment.NOOP:\n        return [this._position];\n\n      case NbAdjustment.CLOCKWISE:\n        return this.reorderPreferredPositions(CLOCKWISE_POSITIONS);\n\n      case NbAdjustment.COUNTERCLOCKWISE:\n        return this.reorderPreferredPositions(COUNTER_CLOCKWISE_POSITIONS);\n\n      case NbAdjustment.HORIZONTAL:\n        return this.reorderPreferredPositions(HORIZONTAL_POSITIONS);\n\n      case NbAdjustment.VERTICAL:\n        return this.reorderPreferredPositions(VERTICAL_POSITIONS);\n    }\n  }\n\n  persistChosenPositions(positions) {\n    this.appliedPositions = positions.map(position => ({\n      key: position,\n      connectedPosition: POSITIONS[position](this._offset)\n    }));\n  }\n\n  reorderPreferredPositions(positions) {\n    // Physical positions should be mapped to logical as adjustments use logical positions.\n    const startPositionIndex = positions.indexOf(this.mapToLogicalPosition(this._position));\n    const firstPart = positions.slice(startPositionIndex);\n    const secondPart = positions.slice(0, startPositionIndex);\n    return firstPart.concat(secondPart);\n  }\n\n  mapToLogicalPosition(position) {\n    if (position === NbPosition.LEFT) {\n      return NbPosition.START;\n    }\n\n    if (position === NbPosition.RIGHT) {\n      return NbPosition.END;\n    }\n\n    return position;\n  }\n\n}\n\nclass NbGlobalPositionStrategy extends GlobalPositionStrategy {\n  position(position) {\n    switch (position) {\n      case NbGlobalLogicalPosition.TOP_START:\n        return this.top().left();\n\n      case NbGlobalLogicalPosition.TOP_END:\n        return this.top().right();\n\n      case NbGlobalLogicalPosition.BOTTOM_START:\n        return this.bottom().left();\n\n      case NbGlobalLogicalPosition.BOTTOM_END:\n        return this.bottom().right();\n    }\n  }\n\n}\n\nlet NbPositionBuilderService = /*#__PURE__*/(() => {\n  class NbPositionBuilderService {\n    constructor(document, viewportRuler, platform, positionBuilder, overlayContainer) {\n      this.document = document;\n      this.viewportRuler = viewportRuler;\n      this.platform = platform;\n      this.positionBuilder = positionBuilder;\n      this.overlayContainer = overlayContainer;\n    }\n\n    global() {\n      return new NbGlobalPositionStrategy();\n    }\n\n    connectedTo(elementRef) {\n      return new NbAdjustableConnectedPositionStrategy(elementRef, this.viewportRuler, this.document, this.platform, this.overlayContainer).withFlexibleDimensions(false).withPush(false);\n    }\n\n  }\n\n  NbPositionBuilderService.ɵfac = function NbPositionBuilderService_Factory(t) {\n    return new (t || NbPositionBuilderService)(ɵngcc0.ɵɵinject(NB_DOCUMENT), ɵngcc0.ɵɵinject(NbViewportRulerAdapter), ɵngcc0.ɵɵinject(NbPlatform), ɵngcc0.ɵɵinject(NbOverlayPositionBuilder), ɵngcc0.ɵɵinject(NbOverlayContainerAdapter));\n  };\n\n  NbPositionBuilderService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: NbPositionBuilderService,\n    factory: NbPositionBuilderService.ɵfac\n  });\n  return NbPositionBuilderService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet NbPositionedContainerComponent = /*#__PURE__*/(() => {\n  class NbPositionedContainerComponent {\n    get top() {\n      return this.position === NbPosition.TOP;\n    }\n\n    get topStart() {\n      return this.position === NbPosition.TOP_START;\n    }\n\n    get topEnd() {\n      return this.position === NbPosition.TOP_END;\n    }\n\n    get right() {\n      return this.position === NbPosition.RIGHT || this.position === NbPosition.END;\n    }\n\n    get endTop() {\n      return this.position === NbPosition.END_TOP;\n    }\n\n    get endBottom() {\n      return this.position === NbPosition.END_BOTTOM;\n    }\n\n    get bottom() {\n      return this.position === NbPosition.BOTTOM;\n    }\n\n    get bottomStart() {\n      return this.position === NbPosition.BOTTOM_START;\n    }\n\n    get bottomEnd() {\n      return this.position === NbPosition.BOTTOM_END;\n    }\n\n    get left() {\n      return this.position === NbPosition.LEFT || this.position === NbPosition.START;\n    }\n\n    get startTop() {\n      return this.position === NbPosition.START_TOP;\n    }\n\n    get startBottom() {\n      return this.position === NbPosition.START_BOTTOM;\n    }\n\n  }\n\n  NbPositionedContainerComponent.ɵfac = function NbPositionedContainerComponent_Factory(t) {\n    return new (t || NbPositionedContainerComponent)();\n  };\n\n  NbPositionedContainerComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbPositionedContainerComponent,\n    selectors: [[\"ng-component\"]],\n    hostVars: 24,\n    hostBindings: function NbPositionedContainerComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"nb-overlay-top\", ctx.top)(\"nb-overlay-top-start\", ctx.topStart)(\"nb-overlay-top-end\", ctx.topEnd)(\"nb-overlay-right\", ctx.right)(\"nb-overlay-end-top\", ctx.endTop)(\"nb-overlay-end-bottom\", ctx.endBottom)(\"nb-overlay-bottom\", ctx.bottom)(\"nb-overlay-bottom-start\", ctx.bottomStart)(\"nb-overlay-bottom-end\", ctx.bottomEnd)(\"nb-overlay-left\", ctx.left)(\"nb-overlay-start-top\", ctx.startTop)(\"nb-overlay-start-bottom\", ctx.startBottom);\n      }\n    },\n    inputs: {\n      position: \"position\"\n    },\n    decls: 0,\n    vars: 0,\n    template: function NbPositionedContainerComponent_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n  return NbPositionedContainerComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet NbOverlayContainerComponent = /*#__PURE__*/(() => {\n  class NbOverlayContainerComponent {\n    constructor(vcr, injector, changeDetectorRef) {\n      this.vcr = vcr;\n      this.injector = injector;\n      this.changeDetectorRef = changeDetectorRef;\n      this.isAttached = false;\n    }\n\n    get isStringContent() {\n      return !!this.content;\n    }\n\n    attachComponentPortal(portal, context) {\n      portal.injector = this.createChildInjector(portal.componentFactoryResolver);\n      const componentRef = this.portalOutlet.attachComponentPortal(portal);\n\n      if (context) {\n        Object.assign(componentRef.instance, context);\n      }\n\n      componentRef.changeDetectorRef.markForCheck();\n      componentRef.changeDetectorRef.detectChanges();\n      this.isAttached = true;\n      return componentRef;\n    }\n\n    attachTemplatePortal(portal) {\n      const templateRef = this.portalOutlet.attachTemplatePortal(portal);\n      templateRef.detectChanges();\n      this.isAttached = true;\n      return templateRef;\n    }\n\n    attachStringContent(content) {\n      this.content = content;\n      this.changeDetectorRef.markForCheck();\n      this.changeDetectorRef.detectChanges();\n      this.isAttached = true;\n    }\n\n    detach() {\n      if (this.portalOutlet.hasAttached()) {\n        this.portalOutlet.detach();\n      }\n\n      this.attachStringContent(null);\n      this.isAttached = false;\n    }\n\n    createChildInjector(cfr) {\n      return new NbPortalInjector(this.injector, new WeakMap([[ComponentFactoryResolver, cfr]]));\n    }\n\n  }\n\n  NbOverlayContainerComponent.ɵfac = function NbOverlayContainerComponent_Factory(t) {\n    return new (t || NbOverlayContainerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n  };\n\n  NbOverlayContainerComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbOverlayContainerComponent,\n    selectors: [[\"nb-overlay-container\"]],\n    viewQuery: function NbOverlayContainerComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(NbPortalOutletDirective, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.portalOutlet = _t.first);\n      }\n    },\n    decls: 2,\n    vars: 1,\n    consts: [[\"class\", \"primitive-overlay\", 4, \"ngIf\"], [\"nbPortalOutlet\", \"\"], [1, \"primitive-overlay\"]],\n    template: function NbOverlayContainerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, NbOverlayContainerComponent_div_0_Template, 2, 1, \"div\", 0);\n        ɵngcc0.ɵɵtemplate(1, NbOverlayContainerComponent_ng_template_1_Template, 0, 0, \"ng-template\", 1);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isStringContent);\n      }\n    },\n    directives: [ɵngcc2.NgIf, NbPortalOutletDirective],\n    encapsulation: 2\n  });\n  return NbOverlayContainerComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nfunction patch(container, containerContext) {\n  Object.assign(container.instance, containerContext);\n  container.changeDetectorRef.detectChanges();\n  return container;\n}\n\nfunction createContainer(ref, container, context, componentFactoryResolver) {\n  const containerRef = ref.attach(new NbComponentPortal(container, null, null, componentFactoryResolver));\n  patch(containerRef, context);\n  return containerRef;\n}\n\nlet NbOverlayService = /*#__PURE__*/(() => {\n  class NbOverlayService {\n    constructor(overlay, layoutDirection) {\n      this.overlay = overlay;\n      this.layoutDirection = layoutDirection;\n    }\n\n    get scrollStrategies() {\n      return this.overlay.scrollStrategies;\n    }\n\n    create(config) {\n      const overlayRef = this.overlay.create(config);\n      this.layoutDirection.onDirectionChange().subscribe(dir => overlayRef.setDirection(dir));\n      return overlayRef;\n    }\n\n  }\n\n  NbOverlayService.ɵfac = function NbOverlayService_Factory(t) {\n    return new (t || NbOverlayService)(ɵngcc0.ɵɵinject(NbOverlay), ɵngcc0.ɵɵinject(NbLayoutDirectionService));\n  };\n\n  NbOverlayService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: NbOverlayService,\n    factory: NbOverlayService.ɵfac\n  });\n  return NbOverlayService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet NbScrollDispatcherAdapter = /*#__PURE__*/(() => {\n  class NbScrollDispatcherAdapter extends ScrollDispatcher {\n    constructor(ngZone, platform, scrollService, document) {\n      super(ngZone, platform, document);\n      this.scrollService = scrollService;\n    }\n\n    scrolled(auditTimeInMs) {\n      return merge(super.scrolled(auditTimeInMs), this.scrollService.onScroll());\n    }\n\n  }\n\n  NbScrollDispatcherAdapter.ɵfac = function NbScrollDispatcherAdapter_Factory(t) {\n    return new (t || NbScrollDispatcherAdapter)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(NbPlatform), ɵngcc0.ɵɵinject(NbLayoutScrollService), ɵngcc0.ɵɵinject(NB_DOCUMENT));\n  };\n\n  NbScrollDispatcherAdapter.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: NbScrollDispatcherAdapter,\n    factory: NbScrollDispatcherAdapter.ɵfac\n  });\n  return NbScrollDispatcherAdapter;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Overrides default block scroll strategy because default strategy blocks scrolling on the body only.\n * But Nebular has its own scrollable container - nb-layout. So, we need to block scrolling in it to.\n * */\n\n\nlet NbBlockScrollStrategyAdapter = /*#__PURE__*/(() => {\n  class NbBlockScrollStrategyAdapter extends BlockScrollStrategy {\n    constructor(document, viewportRuler, scrollService) {\n      super(viewportRuler, document);\n      this.scrollService = scrollService;\n    }\n\n    enable() {\n      super.enable();\n      this.scrollService.scrollable(false);\n    }\n\n    disable() {\n      super.disable();\n      this.scrollService.scrollable(true);\n    }\n\n  }\n\n  NbBlockScrollStrategyAdapter.ɵfac = function NbBlockScrollStrategyAdapter_Factory(t) {\n    return new (t || NbBlockScrollStrategyAdapter)(ɵngcc0.ɵɵinject(NB_DOCUMENT), ɵngcc0.ɵɵinject(NbViewportRulerAdapter), ɵngcc0.ɵɵinject(NbLayoutScrollService));\n  };\n\n  NbBlockScrollStrategyAdapter.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: NbBlockScrollStrategyAdapter,\n    factory: NbBlockScrollStrategyAdapter.ɵfac\n  });\n  return NbBlockScrollStrategyAdapter;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet NbScrollStrategyOptions = /*#__PURE__*/(() => {\n  class NbScrollStrategyOptions extends ScrollStrategyOptions {\n    constructor(scrollService, scrollDispatcher, viewportRuler, ngZone, document) {\n      super(scrollDispatcher, viewportRuler, ngZone, document);\n      this.scrollService = scrollService;\n      this.scrollDispatcher = scrollDispatcher;\n      this.viewportRuler = viewportRuler;\n      this.ngZone = ngZone;\n      this.document = document;\n\n      this.block = () => new NbBlockScrollStrategyAdapter(this.document, this.viewportRuler, this.scrollService);\n    }\n\n  }\n\n  NbScrollStrategyOptions.ɵfac = function NbScrollStrategyOptions_Factory(t) {\n    return new (t || NbScrollStrategyOptions)(ɵngcc0.ɵɵinject(NbLayoutScrollService), ɵngcc0.ɵɵinject(ɵngcc3.ScrollDispatcher), ɵngcc0.ɵɵinject(NbViewportRulerAdapter), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(NB_DOCUMENT));\n  };\n\n  NbScrollStrategyOptions.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: NbScrollStrategyOptions,\n    factory: NbScrollStrategyOptions.ɵfac\n  });\n  return NbScrollStrategyOptions;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet NbCdkAdapterModule = /*#__PURE__*/(() => {\n  class NbCdkAdapterModule {\n    static forRoot() {\n      return {\n        ngModule: NbCdkAdapterModule,\n        providers: [NbViewportRulerAdapter, NbOverlayContainerAdapter, NbBlockScrollStrategyAdapter, NbScrollDispatcherAdapter, NbScrollStrategyOptions, {\n          provide: OverlayContainer,\n          useExisting: NbOverlayContainerAdapter\n        }, {\n          provide: NbOverlayContainer,\n          useExisting: NbOverlayContainerAdapter\n        }, {\n          provide: ScrollDispatcher,\n          useExisting: NbScrollDispatcherAdapter\n        }, {\n          provide: ScrollStrategyOptions,\n          useExisting: NbScrollStrategyOptions\n        }]\n      };\n    }\n\n  }\n\n  NbCdkAdapterModule.ɵfac = function NbCdkAdapterModule_Factory(t) {\n    return new (t || NbCdkAdapterModule)();\n  };\n\n  NbCdkAdapterModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NbCdkAdapterModule\n  });\n  NbCdkAdapterModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n  return NbCdkAdapterModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar NbTrigger = /*#__PURE__*/(() => {\n  (function (NbTrigger) {\n    NbTrigger[\"NOOP\"] = \"noop\";\n    NbTrigger[\"CLICK\"] = \"click\";\n    NbTrigger[\"HOVER\"] = \"hover\";\n    NbTrigger[\"HINT\"] = \"hint\";\n    NbTrigger[\"FOCUS\"] = \"focus\";\n  })(NbTrigger || (NbTrigger = {}));\n\n  return NbTrigger;\n})();\n\n/**\n * TODO maybe we have to use renderer.listen instead of observableFromEvent?\n * Renderer provides capability use it in service worker, ssr and so on.\n * */\nclass NbTriggerStrategyBase {\n  constructor(document, host, container) {\n    this.document = document;\n    this.host = host;\n    this.container = container;\n    this.destroyed$ = new Subject();\n  }\n\n  destroy() {\n    this.destroyed$.next();\n  }\n\n  isNotOnHostOrContainer(event) {\n    return !this.isOnHost(event) && !this.isOnContainer(event);\n  }\n\n  isOnHostOrContainer(event) {\n    return this.isOnHost(event) || this.isOnContainer(event);\n  }\n\n  isOnHost({\n    target\n  }) {\n    return this.host.contains(target);\n  }\n\n  isOnContainer({\n    target\n  }) {\n    return this.container() && this.container().location.nativeElement.contains(target);\n  }\n\n}\n/**\n * Creates show and hide event streams.\n * Fires toggle event when the click was performed on the host element.\n * Fires close event when the click was performed on the document but\n * not on the host or container.\n * */\n\n\nclass NbClickTriggerStrategy extends NbTriggerStrategyBase {\n  constructor() {\n    super(...arguments); // since we should track click for both SHOW and HIDE event we firstly need to track the click and the state\n    // of the container and then later on decide should we hide it or show\n    // if we track the click & state separately this will case a behavior when the container is getting shown\n    // and then hidden right away\n\n    this.click$ = fromEvent(this.document, 'click').pipe(map(event => [!this.container() && this.isOnHost(event), event]), share(), takeUntil(this.destroyed$));\n    this.show$ = this.click$.pipe(filter(([shouldShow]) => shouldShow), map(([, event]) => event), takeUntil(this.destroyed$));\n    this.hide$ = this.click$.pipe(filter(([shouldShow, event]) => !shouldShow && !this.isOnContainer(event)), map(([, event]) => event), takeUntil(this.destroyed$));\n  }\n\n}\n/**\n * Creates show and hide event streams.\n * Fires open event when a mouse hovers over the host element and stay over at least 100 milliseconds.\n * Fires close event when the mouse leaves the host element and stops out of the host and popover container.\n * */\n\n\nclass NbHoverTriggerStrategy extends NbTriggerStrategyBase {\n  constructor() {\n    super(...arguments);\n    this.show$ = fromEvent(this.host, 'mouseenter').pipe(filter(() => !this.container()), // this `delay & takeUntil & repeat` operators combination is a synonym for `conditional debounce`\n    // meaning that if one event occurs in some time after the initial one we won't react to it\n    delay(100), // tslint:disable-next-line:rxjs-no-unsafe-takeuntil\n    takeUntil(fromEvent(this.host, 'mouseleave')), repeat(), takeUntil(this.destroyed$));\n    this.hide$ = fromEvent(this.host, 'mouseleave').pipe(switchMap(() => fromEvent(this.document, 'mousemove').pipe(debounceTime(100), takeWhile(() => !!this.container()), filter(event => this.isNotOnHostOrContainer(event)))), takeUntil(this.destroyed$));\n  }\n\n}\n/**\n * Creates show and hide event streams.\n * Fires open event when a mouse hovers over the host element and stay over at least 100 milliseconds.\n * Fires close event when the mouse leaves the host element.\n * */\n\n\nclass NbHintTriggerStrategy extends NbTriggerStrategyBase {\n  constructor() {\n    super(...arguments);\n    this.show$ = fromEvent(this.host, 'mouseenter').pipe( // this `delay & takeUntil & repeat` operators combination is a synonym for `conditional debounce`\n    // meaning that if one event occurs in some time after the initial one we won't react to it\n    delay(100), // tslint:disable-next-line:rxjs-no-unsafe-takeuntil\n    takeUntil(fromEvent(this.host, 'mouseleave')), repeat(), takeUntil(this.destroyed$));\n    this.hide$ = fromEvent(this.host, 'mouseleave').pipe(takeUntil(this.destroyed$));\n  }\n\n}\n/**\n * Creates show and hide event streams.\n * Fires open event when a focus is on the host element and stay over at least 100 milliseconds.\n * Fires close event when the focus leaves the host element.\n * */\n\n\nclass NbFocusTriggerStrategy extends NbTriggerStrategyBase {\n  constructor() {\n    super(...arguments);\n    this.focusOut$ = fromEvent(this.host, 'focusout').pipe(switchMap(() => fromEvent(this.document, 'focusin').pipe(takeWhile(() => !!this.container()), filter(event => this.isNotOnHostOrContainer(event)))), takeUntil(this.destroyed$));\n    this.clickIn$ = fromEvent(this.host, 'click').pipe(filter(() => !this.container()), takeUntil(this.destroyed$));\n    this.clickOut$ = fromEvent(this.document, 'click').pipe(filter(() => !!this.container()), filter(event => this.isNotOnHostOrContainer(event)), takeUntil(this.destroyed$));\n    this.tabKeyPress$ = fromEvent(this.document, 'keydown').pipe(filter(event => event.keyCode === 9), filter(() => !!this.container()), takeUntil(this.destroyed$));\n    this.show$ = merge(fromEvent(this.host, 'focusin'), this.clickIn$).pipe(filter(() => !this.container()), debounceTime(100), // tslint:disable-next-line:rxjs-no-unsafe-takeuntil\n    takeUntil(fromEvent(this.host, 'focusout')), repeat(), takeUntil(this.destroyed$));\n    this.hide$ = merge(this.focusOut$, this.tabKeyPress$, this.clickOut$).pipe(takeUntil(this.destroyed$));\n  }\n\n}\n/**\n * Creates empty show and hide event streams.\n * */\n\n\nclass NbNoopTriggerStrategy extends NbTriggerStrategyBase {\n  constructor() {\n    super(...arguments);\n    this.show$ = EMPTY;\n    this.hide$ = EMPTY;\n  }\n\n}\n\nlet NbTriggerStrategyBuilderService = /*#__PURE__*/(() => {\n  class NbTriggerStrategyBuilderService {\n    constructor(_document) {\n      this._document = _document;\n    }\n\n    trigger(trigger$$1) {\n      this._trigger = trigger$$1;\n      return this;\n    }\n\n    host(host) {\n      this._host = host;\n      return this;\n    }\n\n    container(container) {\n      this._container = container;\n      return this;\n    }\n\n    build() {\n      switch (this._trigger) {\n        case NbTrigger.CLICK:\n          return new NbClickTriggerStrategy(this._document, this._host, this._container);\n\n        case NbTrigger.HINT:\n          return new NbHintTriggerStrategy(this._document, this._host, this._container);\n\n        case NbTrigger.HOVER:\n          return new NbHoverTriggerStrategy(this._document, this._host, this._container);\n\n        case NbTrigger.FOCUS:\n          return new NbFocusTriggerStrategy(this._document, this._host, this._container);\n\n        case NbTrigger.NOOP:\n          return new NbNoopTriggerStrategy(this._document, this._host, this._container);\n\n        default:\n          throw new Error('Trigger have to be provided');\n      }\n    }\n\n  }\n\n  NbTriggerStrategyBuilderService.ɵfac = function NbTriggerStrategyBuilderService_Factory(t) {\n    return new (t || NbTriggerStrategyBuilderService)(ɵngcc0.ɵɵinject(NB_DOCUMENT));\n  };\n\n  NbTriggerStrategyBuilderService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: NbTriggerStrategyBuilderService,\n    factory: NbTriggerStrategyBuilderService.ɵfac\n  });\n  return NbTriggerStrategyBuilderService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet NbOverlayModule = /*#__PURE__*/(() => {\n  class NbOverlayModule {\n    static forRoot() {\n      return {\n        ngModule: NbOverlayModule,\n        providers: [NbPositionBuilderService, NbTriggerStrategyBuilderService, NbOverlayService, NbPositionHelper, ...NbCdkMappingModule.forRoot().providers, ...NbCdkAdapterModule.forRoot().providers, ...NbA11yModule.forRoot().providers]\n      };\n    }\n\n  }\n\n  NbOverlayModule.ɵfac = function NbOverlayModule_Factory(t) {\n    return new (t || NbOverlayModule)();\n  };\n\n  NbOverlayModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NbOverlayModule\n  });\n  NbOverlayModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[NbCdkMappingModule, NbSharedModule], NbCdkMappingModule, NbCdkAdapterModule]\n  });\n  return NbOverlayModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NbOverlayModule, {\n    declarations: [NbPositionedContainerComponent, NbOverlayContainerComponent],\n    imports: [NbCdkMappingModule, NbSharedModule],\n    exports: [NbCdkMappingModule, NbCdkAdapterModule, NbOverlayContainerComponent]\n  });\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nlet NbStatusService = /*#__PURE__*/(() => {\n  class NbStatusService {\n    constructor() {\n      this.coreStatuses = ['basic', 'primary', 'info', 'warning', 'danger', 'control'];\n    }\n\n    isCoreStatus(status) {\n      return this.coreStatuses.includes(status);\n    }\n\n    isCustomStatus(status) {\n      if (this.isValidStatusString(status)) {\n        return !this.isCoreStatus(status);\n      }\n\n      return false;\n    }\n\n    getStatusClass(status) {\n      if (this.isValidStatusString(status)) {\n        return `status-${status}`;\n      }\n\n      return undefined;\n    }\n\n    isValidStatusString(status) {\n      return typeof status === 'string' && status.length > 0;\n    }\n\n  }\n\n  NbStatusService.ɵfac = function NbStatusService_Factory(t) {\n    return new (t || NbStatusService)();\n  };\n\n  NbStatusService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: NbStatusService,\n    factory: NbStatusService.ɵfac\n  });\n  return NbStatusService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nfunction windowFactory(platformId) {\n  if (isPlatformBrowser(platformId)) {\n    return window;\n  } // Provide undefined to get the error when trying to access the window as it\n  // shouldn't be used outside the browser. Those who need to provide something\n  // instead of window (e.g. domino window when running in node) could override\n  // NB_WINDOW token.\n\n\n  return undefined;\n}\n\nlet NbThemeModule = /*#__PURE__*/(() => {\n  class NbThemeModule {\n    // TODO: check the options (throw exception?)\n\n    /**\n     * Main Theme Module\n     *\n     * @param nbThemeOptions {NbThemeOptions} Main theme options\n     * @param nbJSThemes {NbJSThemeOptions[]} List of JS Themes, will be merged with default themes\n     * @param nbMediaBreakpoints {NbMediaBreakpoint} Available media breakpoints\n     * @param layoutDirection {NbLayoutDirection} Layout direction\n     *\n     * @returns {ModuleWithProviders}\n     */\n    static forRoot(nbThemeOptions = {\n      name: 'default'\n    }, nbJSThemes, nbMediaBreakpoints, layoutDirection) {\n      return {\n        ngModule: NbThemeModule,\n        providers: [{\n          provide: NB_THEME_OPTIONS,\n          useValue: nbThemeOptions || {}\n        }, {\n          provide: NB_BUILT_IN_JS_THEMES,\n          useValue: BUILT_IN_THEMES\n        }, {\n          provide: NB_JS_THEMES,\n          useValue: nbJSThemes || []\n        }, {\n          provide: NB_MEDIA_BREAKPOINTS,\n          useValue: nbMediaBreakpoints || DEFAULT_MEDIA_BREAKPOINTS\n        }, {\n          provide: NB_DOCUMENT,\n          useExisting: DOCUMENT\n        }, {\n          provide: NB_WINDOW,\n          useFactory: windowFactory,\n          deps: [PLATFORM_ID]\n        }, NbJSThemesRegistry, NbThemeService, NbMediaBreakpointsService, NbSpinnerService, {\n          provide: NB_LAYOUT_DIRECTION,\n          useValue: layoutDirection || NbLayoutDirection.LTR\n        }, NbLayoutDirectionService, NbLayoutScrollService, NbLayoutRulerService, ...NbOverlayModule.forRoot().providers, NbStatusService]\n      };\n    }\n\n  }\n\n  NbThemeModule.ɵfac = function NbThemeModule_Factory(t) {\n    return new (t || NbThemeModule)();\n  };\n\n  NbThemeModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NbThemeModule\n  });\n  NbThemeModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return NbThemeModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NbThemeModule, {\n    imports: function () {\n      return [CommonModule];\n    }\n  });\n})();\n\nclass NbColorHelper {\n  static shade(color, weight) {\n    return NbColorHelper.mix('#000000', color, weight);\n  }\n\n  static tint(color, weight) {\n    return NbColorHelper.mix('#ffffff', color, weight);\n  }\n\n  static mix(color1, color2, weight) {\n    const d2h = d => d.toString(16);\n\n    const h2d = h => parseInt(h, 16);\n\n    let result = '#';\n\n    for (let i = 1; i < 7; i += 2) {\n      const firstPart = h2d(color1.substr(i, 2));\n      const secondPart = h2d(color2.substr(i, 2));\n      const resultPart = d2h(Math.floor(secondPart + (firstPart - secondPart) * (weight / 100.0)));\n      result += ('0' + resultPart).slice(-2);\n    }\n\n    return result;\n  }\n\n  static hexToRgbA(hex, alpha) {\n    let c;\n\n    if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {\n      c = hex.substring(1).split('');\n\n      if (c.length === 3) {\n        c = [c[0], c[0], c[1], c[1], c[2], c[2]];\n      }\n\n      c = '0x' + c.join('');\n      return 'rgba(' + [c >> 16 & 255, c >> 8 & 255, c & 255].join(',') + ',' + alpha + ')';\n    }\n\n    throw new Error('Bad Hex');\n  }\n\n}\n\nvar NbIconPackType = /*#__PURE__*/(() => {\n  (function (NbIconPackType) {\n    NbIconPackType[\"SVG\"] = \"svg\";\n    NbIconPackType[\"FONT\"] = \"font\";\n  })(NbIconPackType || (NbIconPackType = {}));\n\n  return NbIconPackType;\n})();\n\nclass NbFontIcon {\n  constructor(name, content, params = {}) {\n    this.name = name;\n    this.content = content;\n    this.params = params;\n  }\n\n  getClasses(options) {\n    const classes = [];\n\n    if (this.params.packClass) {\n      classes.push(this.params.packClass);\n    }\n\n    const name = this.params.iconClassPrefix ? `${this.params.iconClassPrefix}-${this.name}` : this.name;\n    classes.push(name);\n    return classes;\n  }\n\n  getContent(options) {\n    return this.content;\n  }\n\n}\n\nclass NbSvgIcon {\n  constructor(name, content, params = {}) {\n    this.name = name;\n    this.content = content;\n    this.params = params;\n  }\n\n  getClasses(options) {\n    const classes = [];\n\n    if (this.params.packClass) {\n      classes.push(this.params.packClass);\n    }\n\n    return classes;\n  }\n\n  getContent(options) {\n    return this.content;\n  }\n\n}\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nclass NbIconDefinition {}\n\nfunction throwPackNotFoundError(name) {\n  throw Error(`Icon Pack '${name}' is not registered`);\n}\n\nfunction throwNoDefaultPackError() {\n  throw Error('Default pack is not registered.');\n}\n\nfunction throwWrongPackTypeError(name, type, desiredType) {\n  throw Error(`Pack '${name}' is not an '${desiredType}' Pack and its type is '${type}'`);\n}\n/**\n * This service allows to register multiple icon packs to use them later within `<nb-icon></nb-icon>` component.\n */\n\n\nlet NbIconLibraries = /*#__PURE__*/(() => {\n  class NbIconLibraries {\n    constructor() {\n      this.packs = new Map();\n    }\n    /**\n     * Registers new Svg icon pack\n     * @param {string} name\n     * @param {NbIcon} icons\n     * @param {NbIconPackParams} params\n     */\n\n\n    registerSvgPack(name, icons, params = {}) {\n      this.packs.set(name, {\n        name,\n        icons: new Map(Object.entries(icons)),\n        params,\n        type: NbIconPackType.SVG\n      });\n    }\n    /**\n     * Registers new font pack\n     * @param {string} name\n     * @param {NbIconPackParams} params\n     */\n\n\n    registerFontPack(name, params = {}) {\n      this.packs.set(name, {\n        name,\n        params,\n        icons: new Map(),\n        type: NbIconPackType.FONT\n      });\n    }\n    /**\n     * Returns pack by name\n     * @param {string} name\n     */\n\n\n    getPack(name) {\n      return this.packs.get(name);\n    }\n    /**\n     * Sets pack as a default\n     * @param {string} name\n     */\n\n\n    setDefaultPack(name) {\n      if (!this.packs.has(name)) {\n        throwPackNotFoundError(name);\n      }\n\n      this.defaultPack = this.packs.get(name);\n    }\n    /**\n     * Returns Svg icon\n     * @param {string} name\n     * @param {string} pack\n     *\n     * @returns NbIconDefinition\n     */\n\n\n    getSvgIcon(name, pack) {\n      const iconsPack = pack ? this.getPackOrThrow(pack) : this.getDefaultPackOrThrow();\n\n      if (iconsPack.type !== NbIconPackType.SVG) {\n        throwWrongPackTypeError(iconsPack.name, iconsPack.type, 'SVG');\n      }\n\n      const icon = this.getIconFromPack(name, iconsPack);\n\n      if (!icon) {\n        return null;\n      }\n\n      return {\n        name,\n        pack: iconsPack.name,\n        type: NbIconPackType.SVG,\n        icon: this.createSvgIcon(name, icon, iconsPack.params)\n      };\n    }\n    /**\n     * Returns Font icon\n     * @param {string} name\n     * @param {string} pack\n     *\n     * @returns NbIconDefinition\n     */\n\n\n    getFontIcon(name, pack) {\n      const iconsPack = pack ? this.getPackOrThrow(pack) : this.getDefaultPackOrThrow();\n\n      if (iconsPack.type !== NbIconPackType.FONT) {\n        throwWrongPackTypeError(iconsPack.name, iconsPack.type, 'Font');\n      }\n\n      const icon = this.getIconFromPack(name, iconsPack);\n      return {\n        name,\n        pack: iconsPack.name,\n        type: NbIconPackType.FONT,\n        icon: this.createFontIcon(name, icon ? icon : '', iconsPack.params)\n      };\n    }\n    /**\n     * Returns an icon\n     * @param {string} name\n     * @param {string} pack\n     *\n     * @returns NbIconDefinition\n     */\n\n\n    getIcon(name, pack) {\n      const iconsPack = pack ? this.getPackOrThrow(pack) : this.getDefaultPackOrThrow();\n\n      if (iconsPack.type === NbIconPackType.SVG) {\n        return this.getSvgIcon(name, pack);\n      }\n\n      return this.getFontIcon(name, pack);\n    }\n\n    createSvgIcon(name, content, params) {\n      return content instanceof NbSvgIcon ? content : new NbSvgIcon(name, content, params);\n    }\n\n    createFontIcon(name, content, params) {\n      return content instanceof NbFontIcon ? content : new NbFontIcon(name, content, params);\n    }\n\n    getPackOrThrow(name) {\n      const pack = this.packs.get(name);\n\n      if (!pack) {\n        throwPackNotFoundError(name);\n      }\n\n      return pack;\n    }\n\n    getDefaultPackOrThrow() {\n      if (!this.defaultPack) {\n        throwNoDefaultPackError();\n      }\n\n      return this.defaultPack;\n    }\n\n    getIconFromPack(name, pack) {\n      if (pack.icons.has(name)) {\n        return pack.icons.get(name);\n      }\n\n      return null;\n    }\n\n  }\n\n  NbIconLibraries.ɵfac = function NbIconLibraries_Factory(t) {\n    return new (t || NbIconLibraries)();\n  };\n\n  NbIconLibraries.ɵprov = ɵɵdefineInjectable({\n    factory: function NbIconLibraries_Factory() {\n      return new NbIconLibraries();\n    },\n    token: NbIconLibraries,\n    providedIn: \"root\"\n  });\n  return NbIconLibraries;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * Icon component. Allows to render both `svg` and `font` icons.\n * Starting from Nebular 4.0 uses [Eva Icons](https://akveo.github.io/eva-icons/) pack by default.\n *\n * Basic icon example:\n * @stacked-example(Showcase, icon/icon-showcase.component)\n *\n * Icon configuration:\n *\n * ```html\n * <nb-icon icon=\"star\"></nb-icon>\n * ```\n * ### Installation\n *\n * By default Nebular comes without any pre-installed icon pack.\n * Starting with Nebular 4.0.0 we ship separate package called `@nebular/eva-icons`\n * which integrates SVG [Eva Icons](https://akveo.github.io/eva-icons/) pack to Nebular. To add it to your\n * project run:\n * ```sh\n * npm i eva-icons @nebular/eva-icons\n * ```\n * This command will install Eva Icons pack. Then register `NbEvaIconsModule` into your app module:\n * ```ts\n * import { NbEvaIconsModule } from '@nebular/eva-icons';\n *\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbEvaIconsModule,\n *   ],\n * })\n * export class AppModule { }\n * ```\n * Last thing, import `NbIconModule` to your feature module where you need to show an icon:\n * ```ts\n * import { NbIconModule } from '@nebular/theme';\n *\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbIconModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * Icon can be colored using `status` input:\n * ```html\n * <nb-icon icon=\"star\" status=\"warning\"></nb-icon>\n * ```\n *\n * Colored icons:\n * @stacked-example(Colored Icons, icon/icon-colors.component)\n *\n * In case you need to specify an icon from a specific icon pack, this could be done using `pack` input property:\n * ```html\n * <nb-icon icon=\"star\" pack=\"font-awesome\"></nb-icon>\n * ```\n * Additional icon settings (if available by the icon pack) could be passed using `options` input:\n *\n * ```html\n * <nb-icon icon=\"star\" [options]=\"{ animation: { type: 'zoom' } }\"></nb-icon>\n * ```\n *\n * @styles\n *\n * icon-font-size:\n * icon-line-height:\n * icon-width:\n * icon-height:\n * icon-svg-vertical-align:\n * icon-basic-color:\n * icon-primary-color:\n * icon-info-color:\n * icon-success-color:\n * icon-warning-color:\n * icon-danger-color:\n * icon-control-color:\n */\n\n\nlet NbIconComponent = /*#__PURE__*/(() => {\n  class NbIconComponent {\n    constructor(sanitizer, iconLibrary, el, renderer, statusService) {\n      this.sanitizer = sanitizer;\n      this.iconLibrary = iconLibrary;\n      this.el = el;\n      this.renderer = renderer;\n      this.statusService = statusService;\n      this.prevClasses = [];\n      this.html = '';\n    }\n\n    get primary() {\n      return this.status === 'primary';\n    }\n\n    get info() {\n      return this.status === 'info';\n    }\n\n    get success() {\n      return this.status === 'success';\n    }\n\n    get warning() {\n      return this.status === 'warning';\n    }\n\n    get danger() {\n      return this.status === 'danger';\n    }\n\n    get basic() {\n      return this.status === 'basic';\n    }\n\n    get control() {\n      return this.status === 'control';\n    }\n\n    get additionalClasses() {\n      if (this.statusService.isCustomStatus(this.status)) {\n        return [this.statusService.getStatusClass(this.status)];\n      }\n\n      return [];\n    }\n    /**\n     * Sets all icon configurable properties via config object.\n     * If passed value is a string set icon name.\n     * @docs-private\n     */\n\n\n    get config() {\n      return this._config;\n    }\n\n    set config(value) {\n      if (!value) {\n        return;\n      }\n\n      this._config = value;\n\n      if (typeof value === 'string') {\n        this.icon = value;\n      } else {\n        this.icon = value.icon;\n        this.pack = value.pack;\n        this.status = value.status;\n        this.options = value.options;\n      }\n    }\n\n    ngOnInit() {\n      this.iconDef = this.renderIcon(this.icon, this.pack, this.options);\n    }\n\n    ngOnChanges() {\n      const iconDef = this.iconLibrary.getIcon(this.icon, this.pack);\n\n      if (iconDef) {\n        this.renderIcon(this.icon, this.pack, this.options);\n      } else {\n        this.clearIcon();\n      }\n    }\n\n    renderIcon(name, pack, options) {\n      const iconDefinition = this.iconLibrary.getIcon(name, pack);\n\n      if (!iconDefinition) {\n        return;\n      }\n\n      const content = iconDefinition.icon.getContent(options);\n\n      if (content) {\n        this.html = this.sanitizer.bypassSecurityTrustHtml(content);\n      }\n\n      this.assignClasses(iconDefinition.icon.getClasses(options));\n      return iconDefinition;\n    }\n\n    clearIcon() {\n      this.html = '';\n      this.assignClasses([]);\n    }\n\n    assignClasses(classes) {\n      this.prevClasses.forEach(className => {\n        this.renderer.removeClass(this.el.nativeElement, className);\n      });\n      classes.forEach(className => {\n        this.renderer.addClass(this.el.nativeElement, className);\n      });\n      this.prevClasses = classes;\n    }\n\n  }\n\n  NbIconComponent.ɵfac = function NbIconComponent_Factory(t) {\n    return new (t || NbIconComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.DomSanitizer), ɵngcc0.ɵɵdirectiveInject(NbIconLibraries), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(NbStatusService));\n  };\n\n  NbIconComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbIconComponent,\n    selectors: [[\"nb-icon\"]],\n    hostVars: 17,\n    hostBindings: function NbIconComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"innerHtml\", ctx.html, ɵngcc0.ɵɵsanitizeHtml);\n        ɵngcc0.ɵɵclassMap(ctx.additionalClasses);\n        ɵngcc0.ɵɵclassProp(\"status-primary\", ctx.primary)(\"status-info\", ctx.info)(\"status-success\", ctx.success)(\"status-warning\", ctx.warning)(\"status-danger\", ctx.danger)(\"status-basic\", ctx.basic)(\"status-control\", ctx.control);\n      }\n    },\n    inputs: {\n      config: \"config\",\n      icon: \"icon\",\n      pack: \"pack\",\n      status: \"status\",\n      options: \"options\"\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature],\n    decls: 0,\n    vars: 0,\n    template: function NbIconComponent_Template(rf, ctx) {},\n    styles: [\"[_nghost-%COMP%]{display:inline-block}\"],\n    changeDetection: 0\n  });\n  return NbIconComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nlet NbIconModule = /*#__PURE__*/(() => {\n  class NbIconModule {\n    constructor(iconsLibrary) {\n      this.iconsLibrary = iconsLibrary;\n      this.essentialsPackName = 'nebular-essentials'; // in case of consequent calls we don't need to enable `nebular-essentials` pack again\n\n      if (this.iconsLibrary.getPack(this.essentialsPackName)) {\n        return;\n      } // tslint:disable:max-line-length\n\n\n      this.iconsLibrary.registerSvgPack(this.essentialsPackName, {\n        'chevron-down-outline': '<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"100%\" height=\"100%\" viewBox=\"0 0 24 24\"><g data-name=\"Layer 2\"><g data-name=\"chevron-down\"><rect width=\"24\" height=\"24\" opacity=\"0\"/><path d=\"M12 15.5a1 1 0 0 1-.71-.29l-4-4a1 1 0 1 1 1.42-1.42L12 13.1l3.3-3.18a1 1 0 1 1 1.38 1.44l-4 3.86a1 1 0 0 1-.68.28z\"/></g></g></svg>',\n        'chevron-up-outline': '<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"100%\" height=\"100%\" viewBox=\"0 0 24 24\"><g data-name=\"Layer 2\"><g data-name=\"chevron-up\"><rect width=\"24\" height=\"24\" transform=\"rotate(180 12 12)\" opacity=\"0\"/><path d=\"M16 14.5a1 1 0 0 1-.71-.29L12 10.9l-3.3 3.18a1 1 0 0 1-1.41 0 1 1 0 0 1 0-1.42l4-3.86a1 1 0 0 1 1.4 0l4 4a1 1 0 0 1 0 1.42 1 1 0 0 1-.69.28z\"/></g></g></svg>',\n        'chevron-left-outline': '<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"100%\" height=\"100%\" viewBox=\"0 0 24 24\"><g data-name=\"Layer 2\"><g data-name=\"chevron-left\"><rect width=\"24\" height=\"24\" transform=\"rotate(90 12 12)\" opacity=\"0\"/><path d=\"M13.36 17a1 1 0 0 1-.72-.31l-3.86-4a1 1 0 0 1 0-1.4l4-4a1 1 0 1 1 1.42 1.42L10.9 12l3.18 3.3a1 1 0 0 1 0 1.41 1 1 0 0 1-.72.29z\"/></g></g></svg>',\n        'chevron-right-outline': '<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"100%\" height=\"100%\" viewBox=\"0 0 24 24\"><g data-name=\"Layer 2\"><g data-name=\"chevron-right\"><rect width=\"24\" height=\"24\" transform=\"rotate(-90 12 12)\" opacity=\"0\"/><path d=\"M10.5 17a1 1 0 0 1-.71-.29 1 1 0 0 1 0-1.42L13.1 12 9.92 8.69a1 1 0 0 1 0-1.41 1 1 0 0 1 1.42 0l3.86 4a1 1 0 0 1 0 1.4l-4 4a1 1 0 0 1-.7.32z\"/></g></g></svg>',\n        'checkmark-outline': '<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"100%\" height=\"100%\" viewBox=\"0 0 24 24\"><g data-name=\"Layer 2\"><g data-name=\"checkmark\"><rect width=\"24\" height=\"24\" opacity=\"0\"/><path d=\"M9.86 18a1 1 0 0 1-.73-.32l-4.86-5.17a1 1 0 1 1 1.46-1.37l4.12 4.39 8.41-9.2a1 1 0 1 1 1.48 1.34l-9.14 10a1 1 0 0 1-.73.33z\"/></g></g></svg>',\n        'paper-plane-outline': '<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"100%\" height=\"100%\" viewBox=\"0 0 24 24\"><g data-name=\"Layer 2\"><g data-name=\"paper-plane\"><rect width=\"24\" height=\"24\" opacity=\"0\"/><path d=\"M21 4a1.31 1.31 0 0 0-.06-.27v-.09a1 1 0 0 0-.2-.3 1 1 0 0 0-.29-.19h-.09a.86.86 0 0 0-.31-.15H20a1 1 0 0 0-.3 0l-18 6a1 1 0 0 0 0 1.9l8.53 2.84 2.84 8.53a1 1 0 0 0 1.9 0l6-18A1 1 0 0 0 21 4zm-4.7 2.29l-5.57 5.57L5.16 10zM14 18.84l-1.86-5.57 5.57-5.57z\"/></g></g></svg>',\n        'file-text-outline': '<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"100%\" height=\"100%\" viewBox=\"0 0 24 24\"><g data-name=\"Layer 2\"><g data-name=\"file-text\"><rect width=\"24\" height=\"24\" opacity=\"0\"/><path d=\"M15 16H9a1 1 0 0 0 0 2h6a1 1 0 0 0 0-2z\"/><path d=\"M9 14h3a1 1 0 0 0 0-2H9a1 1 0 0 0 0 2z\"/><path d=\"M19.74 8.33l-5.44-6a1 1 0 0 0-.74-.33h-7A2.53 2.53 0 0 0 4 4.5v15A2.53 2.53 0 0 0 6.56 22h10.88A2.53 2.53 0 0 0 20 19.5V9a1 1 0 0 0-.26-.67zM14 5l2.74 3h-2a.79.79 0 0 1-.74-.85zm3.44 15H6.56a.53.53 0 0 1-.56-.5v-15a.53.53 0 0 1 .56-.5H12v3.15A2.79 2.79 0 0 0 14.71 10H18v9.5a.53.53 0 0 1-.56.5z\"/></g></g></svg>',\n        'alert-triangle-outline': '<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"100%\" height=\"100%\" viewBox=\"0 0 24 24\"><g data-name=\"Layer 2\"><g data-name=\"alert-triangle\"><rect width=\"24\" height=\"24\" transform=\"rotate(90 12 12)\" opacity=\"0\"/><path d=\"M22.56 16.3L14.89 3.58a3.43 3.43 0 0 0-5.78 0L1.44 16.3a3 3 0 0 0-.05 3A3.37 3.37 0 0 0 4.33 21h15.34a3.37 3.37 0 0 0 2.94-1.66 3 3 0 0 0-.05-3.04zm-1.7 2.05a1.31 1.31 0 0 1-1.19.65H4.33a1.31 1.31 0 0 1-1.19-.65 1 1 0 0 1 0-1l7.68-12.73a1.48 1.48 0 0 1 2.36 0l7.67 12.72a1 1 0 0 1 .01 1.01z\"/><circle cx=\"12\" cy=\"16\" r=\"1\"/><path d=\"M12 8a1 1 0 0 0-1 1v4a1 1 0 0 0 2 0V9a1 1 0 0 0-1-1z\"/></g></g></svg>',\n        'question-mark-outline': '<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"100%\" height=\"100%\" viewBox=\"0 0 24 24\"><g data-name=\"Layer 2\"><g data-name=\"question-mark\"><rect width=\"24\" height=\"24\" transform=\"rotate(180 12 12)\" opacity=\"0\"/><path d=\"M17 9A5 5 0 0 0 7 9a1 1 0 0 0 2 0 3 3 0 1 1 3 3 1 1 0 0 0-1 1v2a1 1 0 0 0 2 0v-1.1A5 5 0 0 0 17 9z\"/><circle cx=\"12\" cy=\"19\" r=\"1\"/></g></g></svg>',\n        'email-outline': '<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"100%\" height=\"100%\" viewBox=\"0 0 24 24\"><g data-name=\"Layer 2\"><g data-name=\"email\"><rect width=\"24\" height=\"24\" opacity=\"0\"/><path d=\"M19 4H5a3 3 0 0 0-3 3v10a3 3 0 0 0 3 3h14a3 3 0 0 0 3-3V7a3 3 0 0 0-3-3zm-.67 2L12 10.75 5.67 6zM19 18H5a1 1 0 0 1-1-1V7.25l7.4 5.55a1 1 0 0 0 .6.2 1 1 0 0 0 .6-.2L20 7.25V17a1 1 0 0 1-1 1z\"/></g></g></svg>',\n        'flash-outline': '<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"100%\" height=\"100%\" viewBox=\"0 0 24 24\"><g data-name=\"Layer 2\"><g data-name=\"flash\"><rect width=\"24\" height=\"24\" opacity=\"0\"/><path d=\"M11.11 23a1 1 0 0 1-.34-.06 1 1 0 0 1-.65-1.05l.77-7.09H5a1 1 0 0 1-.83-1.56l7.89-11.8a1 1 0 0 1 1.17-.38 1 1 0 0 1 .65 1l-.77 7.14H19a1 1 0 0 1 .83 1.56l-7.89 11.8a1 1 0 0 1-.83.44zM6.87 12.8H12a1 1 0 0 1 .74.33 1 1 0 0 1 .25.78l-.45 4.15 4.59-6.86H12a1 1 0 0 1-1-1.11l.45-4.15z\"/></g></g></svg>',\n        'search-outline': '<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"100%\" height=\"100%\" viewBox=\"0 0 24 24\"><g data-name=\"Layer 2\"><g data-name=\"search\"><rect width=\"24\" height=\"24\" opacity=\"0\"/><path d=\"M20.71 19.29l-3.4-3.39A7.92 7.92 0 0 0 19 11a8 8 0 1 0-8 8 7.92 7.92 0 0 0 4.9-1.69l3.39 3.4a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42zM5 11a6 6 0 1 1 6 6 6 6 0 0 1-6-6z\"/></g></g></svg>',\n        'close-outline': '<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"100%\" height=\"100%\" viewBox=\"0 0 24 24\"><g data-name=\"Layer 2\"><g data-name=\"close\"><rect width=\"24\" height=\"24\" transform=\"rotate(180 12 12)\" opacity=\"0\"/><path d=\"M13.41 12l4.3-4.29a1 1 0 1 0-1.42-1.42L12 10.59l-4.29-4.3a1 1 0 0 0-1.42 1.42l4.3 4.29-4.3 4.29a1 1 0 0 0 0 1.42 1 1 0 0 0 1.42 0l4.29-4.3 4.29 4.3a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42z\"/></g></g></svg>',\n        'collapse-outline': '<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"100%\" height=\"100%\" viewBox=\"0 0 24 24\"><g data-name=\"Layer 2\"><g data-name=\"collapse\"><rect width=\"24\" height=\"24\" transform=\"rotate(180 12 12)\" opacity=\"0\"/><path d=\"M19 9h-2.58l3.29-3.29a1 1 0 1 0-1.42-1.42L15 7.57V5a1 1 0 0 0-1-1 1 1 0 0 0-1 1v5a1 1 0 0 0 1 1h5a1 1 0 0 0 0-2z\"/><path d=\"M10 13H5a1 1 0 0 0 0 2h2.57l-3.28 3.29a1 1 0 0 0 0 1.42 1 1 0 0 0 1.42 0L9 16.42V19a1 1 0 0 0 1 1 1 1 0 0 0 1-1v-5a1 1 0 0 0-1-1z\"/></g></g></svg>',\n        'expand-outline': '<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"100%\" height=\"100%\" viewBox=\"0 0 24 24\"><g data-name=\"Layer 2\"><g data-name=\"expand\"><rect width=\"24\" height=\"24\" transform=\"rotate(180 12 12)\" opacity=\"0\"/><path d=\"M20 5a1 1 0 0 0-1-1h-5a1 1 0 0 0 0 2h2.57l-3.28 3.29a1 1 0 0 0 0 1.42 1 1 0 0 0 1.42 0L18 7.42V10a1 1 0 0 0 1 1 1 1 0 0 0 1-1z\"/><path d=\"M10.71 13.29a1 1 0 0 0-1.42 0L6 16.57V14a1 1 0 0 0-1-1 1 1 0 0 0-1 1v5a1 1 0 0 0 1 1h5a1 1 0 0 0 0-2H7.42l3.29-3.29a1 1 0 0 0 0-1.42z\"/></g></g></svg>',\n        'minus-outline': '<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"100%\" height=\"100%\" viewBox=\"0 0 24 24\"><g data-name=\"Layer 2\"><g data-name=\"minus\"><rect width=\"24\" height=\"24\" transform=\"rotate(180 12 12)\" opacity=\"0\"/><path d=\"M19 13H5a1 1 0 0 1 0-2h14a1 1 0 0 1 0 2z\"/></g></g></svg>',\n        'minus-bold-outline': '<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" fill=\"currentColor\" viewBox=\"0 0 8 2\" width=\"100%\" height=\"100%\"><defs><rect id=\"nb-mbo\" y=\"3\" width=\"8\" height=\"2\" rx=\"1\"/></defs><use xlink:href=\"#nb-mbo\" transform=\"translate(0 -3)\" fill-rule=\"evenodd\"/></svg>',\n        'checkmark-bold-outline': '<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" fill=\"currentColor\" viewBox=\"0 0 8 7\" width=\"100%\" height=\"100%\"><defs><path id=\"nb-cbo\" d=\"M6.039 1.43a1.11 1.11 0 0 1 1.517-.228c.483.342.588.998.234 1.466L4.431 7.1a1 1 0 0 1-1.492.115L.317 4.677a1.023 1.023 0 0 1 .002-1.483 1.113 1.113 0 0 1 1.535.002l1.641 1.59L6.04 1.428z\"/></defs><use xlink:href=\"#nb-cbo\" transform=\"translate(0 -1)\" fill-rule=\"evenodd\"/></svg>',\n        'arrow-back': '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><g data-name=\"Layer 2\"><g data-name=\"arrow-back\"><rect width=\"24\" height=\"24\" transform=\"rotate(90 12 12)\" opacity=\"0\"/><path d=\"M19 11H7.14l3.63-4.36a1 1 0 1 0-1.54-1.28l-5 6a1.19 1.19 0 0 0-.09.15c0 .05 0 .08-.07.13A1 1 0 0 0 4 12a1 1 0 0 0 .07.36c0 .05 0 .08.07.13a1.19 1.19 0 0 0 .09.15l5 6A1 1 0 0 0 10 19a1 1 0 0 0 .64-.23 1 1 0 0 0 .13-1.41L7.14 13H19a1 1 0 0 0 0-2z\"/></g></g></svg>'\n      }); // tslint:enable:max-line-length\n    }\n\n  }\n\n  NbIconModule.ɵfac = function NbIconModule_Factory(t) {\n    return new (t || NbIconModule)(ɵngcc0.ɵɵinject(NbIconLibraries));\n  };\n\n  NbIconModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NbIconModule\n  });\n  NbIconModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return NbIconModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NbIconModule, {\n    declarations: function () {\n      return [NbIconComponent];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [NbIconComponent];\n    }\n  });\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * Component intended to be used within the `<nb-card>` component.\n * It adds styles for a preset header section.\n *\n * @styles\n *\n * card-header-text-color:\n * card-header-text-font-family:\n * card-header-text-font-size:\n * card-header-text-font-weight:\n * card-header-text-line-height:\n * card-header-basic-background-color:\n * card-header-basic-text-color:\n * card-header-primary-background-color:\n * card-header-primary-text-color:\n * card-header-info-background-color:\n * card-header-info-text-color:\n * card-header-success-background-color:\n * card-header-success-text-color:\n * card-header-warning-background-color:\n * card-header-warning-text-color:\n * card-header-danger-background-color:\n * card-header-danger-text-color:\n * card-header-control-background-color:\n * card-header-control-text-color:\n */\n\n\nlet NbCardHeaderComponent = /*#__PURE__*/(() => {\n  class NbCardHeaderComponent {}\n\n  NbCardHeaderComponent.ɵfac = function NbCardHeaderComponent_Factory(t) {\n    return new (t || NbCardHeaderComponent)();\n  };\n\n  NbCardHeaderComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbCardHeaderComponent,\n    selectors: [[\"nb-card-header\"]],\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function NbCardHeaderComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2\n  });\n  return NbCardHeaderComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Component intended to be used within  the `<nb-card>` component.\n * Adds styles for a preset body section.\n */\n\n\nlet NbCardBodyComponent = /*#__PURE__*/(() => {\n  class NbCardBodyComponent {}\n\n  NbCardBodyComponent.ɵfac = function NbCardBodyComponent_Factory(t) {\n    return new (t || NbCardBodyComponent)();\n  };\n\n  NbCardBodyComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbCardBodyComponent,\n    selectors: [[\"nb-card-body\"]],\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function NbCardBodyComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2\n  });\n  return NbCardBodyComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Component intended to be used within  the `<nb-card>` component.\n * Adds styles for a preset footer section.\n */\n\n\nlet NbCardFooterComponent = /*#__PURE__*/(() => {\n  class NbCardFooterComponent {}\n\n  NbCardFooterComponent.ɵfac = function NbCardFooterComponent_Factory(t) {\n    return new (t || NbCardFooterComponent)();\n  };\n\n  NbCardFooterComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbCardFooterComponent,\n    selectors: [[\"nb-card-footer\"]],\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function NbCardFooterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2\n  });\n  return NbCardFooterComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Basic content container component.\n *\n * Basic card example:\n * @stacked-example(Showcase, card/card-showcase.component)\n *\n * Basic card configuration:\n *\n * ```html\n * <nb-card>\n *   <nb-card-body>\n *     Card\n *   </nb-card-body>\n * </nb-card>\n * ```\n *\n * ### Installation\n *\n * Import `NbCardModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbCardModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * Card with header and footer:\n * @stacked-example(With Header & Footer, card/card-full.component)\n *\n * Most of the time main card content goes to `nb-card-body`,\n * so it is styled and aligned in accordance with the header and footer.\n * In case you need a higher level of control, you can pass contend directly to `nb-card`,\n * so `nb-card-body` styling will not be applied.\n *\n * Consider an example with `nb-list` component:\n * @stacked-example(Card with list, card/card-without-body.component)\n *\n * Colored cards could be simply configured by providing a `status` property:\n * @stacked-example(Colored Card, card/card-colors.component)\n *\n * It is also possible to assign an `accent` property for a slight card highlight\n * as well as combine it with `status`:\n * @stacked-example(Accent Card, card/card-accents.component)\n *\n * Cards of smaller sizes could be combined and put on the same row with a bigger card so they have the same heights.\n * @stacked-example(Card sizes combinations, card/card-sizes-combinations.component)\n *\n * @additional-example(Multiple Sizes, card/card-sizes.component)\n *\n * @styles\n *\n * card-background-color:\n * card-text-color:\n * card-text-font-family:\n * card-text-font-size:\n * card-text-font-weight:\n * card-text-line-height:\n * card-border-width:\n * card-border-style:\n * card-border-color:\n * card-border-radius:\n * card-padding:\n * card-shadow:\n * card-divider-color:\n * card-divider-style:\n * card-divider-width:\n * card-height-tiny:\n * card-height-small:\n * card-height-medium:\n * card-height-large:\n * card-height-giant:\n * card-margin-bottom:\n * card-scrollbar-color:\n * card-scrollbar-background-color:\n * card-scrollbar-width:\n */\n\n\nlet NbCardComponent = /*#__PURE__*/(() => {\n  class NbCardComponent {\n    constructor(statusService) {\n      this.statusService = statusService;\n      this._size = '';\n      /**\n       * Card status:\n       * `basic`, `primary`, `info`, `success`, `warning`, `danger`, `control`\n       */\n\n      this.status = '';\n      /**\n       * Card accent (color of the top border):\n       * `basic`, `primary`, `info`, `success`, `warning`, `danger`, `control`\n       */\n\n      this.accent = '';\n    }\n    /**\n     * Card size, available sizes:\n     * tiny, small, medium, large, giant\n     */\n\n\n    get size() {\n      return this._size;\n    }\n\n    set size(value) {\n      this._size = value;\n    }\n\n    get tiny() {\n      return this.size === 'tiny';\n    }\n\n    get small() {\n      return this.size === 'small';\n    }\n\n    get medium() {\n      return this.size === 'medium';\n    }\n\n    get large() {\n      return this.size === 'large';\n    }\n\n    get giant() {\n      return this.size === 'giant';\n    }\n\n    get primary() {\n      return this.status === 'primary';\n    }\n\n    get info() {\n      return this.status === 'info';\n    }\n\n    get success() {\n      return this.status === 'success';\n    }\n\n    get warning() {\n      return this.status === 'warning';\n    }\n\n    get danger() {\n      return this.status === 'danger';\n    }\n\n    get basic() {\n      return this.status === 'basic';\n    }\n\n    get control() {\n      return this.status === 'control';\n    }\n\n    get hasAccent() {\n      return this.accent;\n    }\n\n    get primaryAccent() {\n      return this.accent === 'primary';\n    }\n\n    get infoAccent() {\n      return this.accent === 'info';\n    }\n\n    get successAccent() {\n      return this.accent === 'success';\n    }\n\n    get warningAccent() {\n      return this.accent === 'warning';\n    }\n\n    get dangerAccent() {\n      return this.accent === 'danger';\n    }\n\n    get basicAccent() {\n      return this.accent === 'basic';\n    }\n\n    get controlAccent() {\n      return this.accent === 'control';\n    }\n\n    get additionalClasses() {\n      if (this.statusService.isCustomStatus(this.status)) {\n        return [this.statusService.getStatusClass(this.status)];\n      }\n\n      return [];\n    }\n\n  }\n\n  NbCardComponent.ɵfac = function NbCardComponent_Factory(t) {\n    return new (t || NbCardComponent)(ɵngcc0.ɵɵdirectiveInject(NbStatusService));\n  };\n\n  NbCardComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbCardComponent,\n    selectors: [[\"nb-card\"]],\n    hostVars: 42,\n    hostBindings: function NbCardComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassMap(ctx.additionalClasses);\n        ɵngcc0.ɵɵclassProp(\"size-tiny\", ctx.tiny)(\"size-small\", ctx.small)(\"size-medium\", ctx.medium)(\"size-large\", ctx.large)(\"size-giant\", ctx.giant)(\"status-primary\", ctx.primary)(\"status-info\", ctx.info)(\"status-success\", ctx.success)(\"status-warning\", ctx.warning)(\"status-danger\", ctx.danger)(\"status-basic\", ctx.basic)(\"status-control\", ctx.control)(\"accent\", ctx.hasAccent)(\"accent-primary\", ctx.primaryAccent)(\"accent-info\", ctx.infoAccent)(\"accent-success\", ctx.successAccent)(\"accent-warning\", ctx.warningAccent)(\"accent-danger\", ctx.dangerAccent)(\"accent-basic\", ctx.basicAccent)(\"accent-control\", ctx.controlAccent);\n      }\n    },\n    inputs: {\n      status: \"status\",\n      accent: \"accent\",\n      size: \"size\"\n    },\n    ngContentSelectors: _c2,\n    decls: 4,\n    vars: 0,\n    template: function NbCardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵprojection(1, 1);\n        ɵngcc0.ɵɵprojection(2, 2);\n        ɵngcc0.ɵɵprojection(3, 3);\n      }\n    },\n    styles: [_c8]\n  });\n  return NbCardComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n *\n * Reveal card example:\n * @stacked-example(My example, reveal-card/reveal-card-showcase.component)\n *\n * As a content Reveal card accepts two instances of `nb-card` - for front and back sides.\n *\n * Basic reveal card configuration:\n *\n * ```html\n * <nb-reveal-card>\n *   <nb-card-front>\n *     <nb-card>\n *       <nb-card-body>\n *         Front\n *       </nb-card-body>\n *     </nb-card>\n *   </nb-card-front>\n *   <nb-card-back>\n *     <nb-card>\n *       <nb-card-body>\n *         Back\n *       </nb-card-body>\n *     </nb-card>\n *   </nb-card-back>\n * </nb-reveal-card>\n * ```\n *\n * ### Installation\n *\n * Import `NbCardModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbCardModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * Reveal Card with header and footer:\n * @stacked-example(With Header & Footer, reveal-card/reveal-card-full.component)\n *\n * Colored reveal-cards could be simply configured by providing a `status` property:\n * @stacked-example(Colored Card, reveal-card/reveal-card-colors.component)\n *\n * It is also possible to assign an `accent` property for a slight card highlight\n * as well as combine it with `status`:\n * @stacked-example(Accent Card, reveal-card/reveal-card-accents.component)\n *\n * @additional-example(Multiple Sizes, reveal-card/reveal-card-sizes.component)\n */\n\n\nlet NbRevealCardComponent = /*#__PURE__*/(() => {\n  class NbRevealCardComponent {\n    constructor() {\n      /**\n       * Reveal state\n       * @type boolean\n       */\n      this.revealed = false;\n      /**\n       * Show/hide toggle button to be able to control toggle from your code\n       * @type {boolean}\n       */\n\n      this.showToggleButton = true;\n    }\n\n    toggle() {\n      this.revealed = !this.revealed;\n    }\n\n  }\n\n  NbRevealCardComponent.ɵfac = function NbRevealCardComponent_Factory(t) {\n    return new (t || NbRevealCardComponent)();\n  };\n\n  NbRevealCardComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbRevealCardComponent,\n    selectors: [[\"nb-reveal-card\"]],\n    hostVars: 2,\n    hostBindings: function NbRevealCardComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"revealed\", ctx.revealed);\n      }\n    },\n    inputs: {\n      revealed: \"revealed\",\n      showToggleButton: \"showToggleButton\"\n    },\n    ngContentSelectors: _c4,\n    decls: 4,\n    vars: 1,\n    consts: [[1, \"second-card-container\"], [\"class\", \"reveal-button\", 3, \"click\", 4, \"ngIf\"], [1, \"reveal-button\", 3, \"click\"], [\"icon\", \"chevron-down-outline\", \"pack\", \"nebular-essentials\", \"aria-hidden\", \"true\"]],\n    template: function NbRevealCardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c3);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(3, NbRevealCardComponent_a_3_Template, 2, 0, \"a\", 1);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showToggleButton);\n      }\n    },\n    directives: [ɵngcc2.NgIf, NbIconComponent],\n    styles: [\"[_nghost-%COMP%]{display:block;position:relative;overflow:hidden}[_nghost-%COMP%]   .second-card-container[_ngcontent-%COMP%]{position:absolute;top:100%;right:0;left:0;overflow:hidden;transition:top 0s 0.5s}[_nghost-%COMP%]     nb-card-front nb-card, [_nghost-%COMP%]     nb-card-back nb-card{box-shadow:none;margin:0}[_nghost-%COMP%]     nb-card-front{display:block;height:100%}[_nghost-%COMP%]     nb-card-back{position:absolute;left:0;top:100%;width:100%;transition:top 0.5s}[_nghost-%COMP%]   .reveal-button[_ngcontent-%COMP%]{cursor:pointer;position:absolute;right:0;bottom:0;transform:rotate(180deg);transition:transform 0.3s}.revealed[_nghost-%COMP%]   .second-card-container[_ngcontent-%COMP%]{top:0;transition:none}.revealed[_nghost-%COMP%]   .second-card-container[_ngcontent-%COMP%]     nb-card-back{top:0}.revealed[_nghost-%COMP%]   .reveal-button[_ngcontent-%COMP%]{transform:none}\"]\n  });\n  return NbRevealCardComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n *\n * Flip card example:\n * @stacked-example(Showcase, flip-card/flip-card-showcase.component)\n *\n * As a content Flip card accepts two instances of `nb-card` - for front and back sides.\n *\n * Basic flip card configuration:\n *\n * ```html\n * <nb-flip-card>\n *   <nb-card-front>\n *     <nb-card>\n *       <nb-card-body>\n *         Front\n *       </nb-card-body>\n *     </nb-card>\n *   </nb-card-front>\n *   <nb-card-back>\n *     <nb-card>\n *       <nb-card-body>\n *         Back\n *       </nb-card-body>\n *     </nb-card>\n *   </nb-card-back>\n * </nb-flip-card>\n * ```\n *\n * ### Installation\n *\n * Import `NbCardModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbCardModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * Flip Card with header and footer:\n * @stacked-example(With Header & Footer, flip-card/flip-card-full.component.ts)\n *\n * Colored flip-cards could be simply configured by providing a `status` property:\n * @stacked-example(Colored Card, flip-card/flip-card-colors.component)\n *\n * It is also possible to assign an `accent` property for a slight card highlight\n * as well as combine it with `status`:\n * @stacked-example(Accent Card, flip-card/flip-card-accents.component)\n *\n * @additional-example(Multiple Sizes, flip-card/flip-card-sizes.component)\n *\n */\n\n\nlet NbFlipCardComponent = /*#__PURE__*/(() => {\n  class NbFlipCardComponent {\n    constructor() {\n      /**\n       * Flip state\n       * @type boolean\n       */\n      this.flipped = false;\n      /**\n       * Show/hide toggle button to be able to control toggle from your code\n       * @type {boolean}\n       */\n\n      this.showToggleButton = true;\n    }\n\n    toggle() {\n      this.flipped = !this.flipped;\n    }\n\n  }\n\n  NbFlipCardComponent.ɵfac = function NbFlipCardComponent_Factory(t) {\n    return new (t || NbFlipCardComponent)();\n  };\n\n  NbFlipCardComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbFlipCardComponent,\n    selectors: [[\"nb-flip-card\"]],\n    hostVars: 2,\n    hostBindings: function NbFlipCardComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"flipped\", ctx.flipped);\n      }\n    },\n    inputs: {\n      flipped: \"flipped\",\n      showToggleButton: \"showToggleButton\"\n    },\n    ngContentSelectors: _c4,\n    decls: 7,\n    vars: 2,\n    consts: [[1, \"flipcard-body\"], [1, \"front-container\"], [\"class\", \"flip-button\", 3, \"click\", 4, \"ngIf\"], [1, \"back-container\"], [1, \"flip-button\", 3, \"click\"], [\"icon\", \"chevron-left-outline\", \"pack\", \"nebular-essentials\", \"aria-hidden\", \"true\"]],\n    template: function NbFlipCardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c3);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵtemplate(3, NbFlipCardComponent_a_3_Template, 2, 0, \"a\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(4, \"div\", 3);\n        ɵngcc0.ɵɵprojection(5, 1);\n        ɵngcc0.ɵɵtemplate(6, NbFlipCardComponent_a_6_Template, 2, 0, \"a\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showToggleButton);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showToggleButton);\n      }\n    },\n    directives: [ɵngcc2.NgIf, NbIconComponent],\n    styles: [\"[_nghost-%COMP%]{display:block;perspective:1200px;position:relative}.flipped[_nghost-%COMP%]   .flipcard-body[_ngcontent-%COMP%], .flipped   [_nghost-%COMP%]   .flipcard-body[_ngcontent-%COMP%]{transform:rotateY(-180deg)}.flipped[_nghost-%COMP%]   .flipcard-body[_ngcontent-%COMP%]   .front-container[_ngcontent-%COMP%], .flipped   [_nghost-%COMP%]   .flipcard-body[_ngcontent-%COMP%]   .front-container[_ngcontent-%COMP%]{opacity:0;transition:opacity 0s 0.25s;backface-visibility:hidden;-webkit-backface-visibility:hidden}.flipped[_nghost-%COMP%]   .flipcard-body[_ngcontent-%COMP%]   .front-container[_ngcontent-%COMP%]   .flip-button[_ngcontent-%COMP%], .flipped   [_nghost-%COMP%]   .flipcard-body[_ngcontent-%COMP%]   .front-container[_ngcontent-%COMP%]   .flip-button[_ngcontent-%COMP%]{opacity:0;z-index:-1}.flipped[_nghost-%COMP%]   .flipcard-body[_ngcontent-%COMP%]   .back-container[_ngcontent-%COMP%], .flipped   [_nghost-%COMP%]   .flipcard-body[_ngcontent-%COMP%]   .back-container[_ngcontent-%COMP%]{backface-visibility:visible;-webkit-backface-visibility:visible}.flipcard-body[_ngcontent-%COMP%]{display:flex;transition:transform 0.5s;transform-style:preserve-3d}.flipcard-body[_ngcontent-%COMP%]   .front-container[_ngcontent-%COMP%], .flipcard-body[_ngcontent-%COMP%]   .back-container[_ngcontent-%COMP%]{flex:1}.flipcard-body[_ngcontent-%COMP%]   .front-container[_ngcontent-%COMP%]   .flip-button[_ngcontent-%COMP%], .flipcard-body[_ngcontent-%COMP%]   .back-container[_ngcontent-%COMP%]   .flip-button[_ngcontent-%COMP%]{cursor:pointer;position:absolute;right:0;bottom:0;opacity:1;transition:opacity 0s 0.15s}.flipcard-body[_ngcontent-%COMP%]   .front-container[_ngcontent-%COMP%]{backface-visibility:visible;-webkit-backface-visibility:visible;transition:opacity 0s 0.2s}.flipcard-body[_ngcontent-%COMP%]   .back-container[_ngcontent-%COMP%]{backface-visibility:hidden;-webkit-backface-visibility:hidden;transform:rotateY(180deg)}\"]\n  });\n  return NbFlipCardComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Component intended to be used within the `<nb-flip-card>` and `<nb-reveal-card>` components.\n *\n * Use it as a container for the front card.\n */\n\n\nlet NbCardFrontComponent = /*#__PURE__*/(() => {\n  class NbCardFrontComponent {}\n\n  NbCardFrontComponent.ɵfac = function NbCardFrontComponent_Factory(t) {\n    return new (t || NbCardFrontComponent)();\n  };\n\n  NbCardFrontComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbCardFrontComponent,\n    selectors: [[\"nb-card-front\"]],\n    ngContentSelectors: _c6,\n    decls: 1,\n    vars: 0,\n    template: function NbCardFrontComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c5);\n        ɵngcc0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2\n  });\n  return NbCardFrontComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Component intended to be used within the `<nb-flip-card>` and `<nb-reveal-card>` components.\n *\n * Use it as a container for the back card.\n */\n\n\nlet NbCardBackComponent = /*#__PURE__*/(() => {\n  class NbCardBackComponent {}\n\n  NbCardBackComponent.ɵfac = function NbCardBackComponent_Factory(t) {\n    return new (t || NbCardBackComponent)();\n  };\n\n  NbCardBackComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbCardBackComponent,\n    selectors: [[\"nb-card-back\"]],\n    ngContentSelectors: _c6,\n    decls: 1,\n    vars: 0,\n    template: function NbCardBackComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c5);\n        ɵngcc0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2\n  });\n  return NbCardBackComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nconst NB_CARD_COMPONENTS = [NbCardComponent, NbCardBodyComponent, NbCardFooterComponent, NbCardHeaderComponent, NbRevealCardComponent, NbFlipCardComponent, NbCardFrontComponent, NbCardBackComponent];\nlet NbCardModule = /*#__PURE__*/(() => {\n  class NbCardModule {}\n\n  NbCardModule.ɵfac = function NbCardModule_Factory(t) {\n    return new (t || NbCardModule)();\n  };\n\n  NbCardModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NbCardModule\n  });\n  NbCardModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[NbSharedModule, NbIconModule]]\n  });\n  return NbCardModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NbCardModule, {\n    declarations: [NbCardComponent, NbCardBodyComponent, NbCardFooterComponent, NbCardHeaderComponent, NbRevealCardComponent, NbFlipCardComponent, NbCardFrontComponent, NbCardBackComponent],\n    imports: [NbSharedModule, NbIconModule],\n    exports: [NbCardComponent, NbCardBodyComponent, NbCardFooterComponent, NbCardHeaderComponent, NbRevealCardComponent, NbFlipCardComponent, NbCardFrontComponent, NbCardBackComponent]\n  });\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nvar NbCalendarViewMode = /*#__PURE__*/(() => {\n  (function (NbCalendarViewMode) {\n    NbCalendarViewMode[\"YEAR\"] = \"year\";\n    NbCalendarViewMode[\"MONTH\"] = \"month\";\n    NbCalendarViewMode[\"DATE\"] = \"date\";\n  })(NbCalendarViewMode || (NbCalendarViewMode = {}));\n\n  return NbCalendarViewMode;\n})();\nvar NbCalendarSize = /*#__PURE__*/(() => {\n  (function (NbCalendarSize) {\n    NbCalendarSize[\"MEDIUM\"] = \"medium\";\n    NbCalendarSize[\"LARGE\"] = \"large\";\n  })(NbCalendarSize || (NbCalendarSize = {}));\n\n  return NbCalendarSize;\n})();\n\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nfunction convertToBoolProperty(val) {\n  if (typeof val === 'string') {\n    val = val.toLowerCase().trim();\n    return val === 'true' || val === '';\n  }\n\n  return !!val;\n}\n\nfunction firstChildNotComment(node) {\n  const children = Array.from(node.childNodes).filter(child => child.nodeType !== Node.COMMENT_NODE);\n  return children[0];\n}\n\nfunction lastChildNotComment(node) {\n  const children = Array.from(node.childNodes).filter(child => child.nodeType !== Node.COMMENT_NODE);\n  return children[children.length - 1];\n}\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * Calendar component provides a capability to choose a date.\n *\n * ```html\n * <nb-calendar [(date)]=\"date\"></nb-calendar>\n * <nb-calendar [date]=\"date\" (dateChange)=\"handleDateChange($event)\"></nb-calendar>\n * ```\n *\n * Basic usage example\n * @stacked-example(Showcase, calendar/calendar-showcase.component)\n *\n * ### Installation\n *\n * Import `NbCalendarModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbCalendarModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * If you want to select ranges you can use `NbCalendarRangeComponent`.\n *\n * ```html\n * <nb-calendar-range [(range)]=\"range\"></nb-calendar-range>\n * <nb-calendar-range [range]=\"range\" (rangeChange)=\"handleRangeChange($event)\"></nb-calendar-range>\n * ```\n *\n * In order to use it, you have to import `NbCalendarRangeModule`.\n * @stacked-example(Range, calendar/calendar-range-showcase.component)\n *\n * The calendar component is supplied with a calendar navigation that contains navigate buttons.\n * If you do not want to use it you can hide calendar navigation using `showNavigation` property.\n * @stacked-example(Without navigation, calendar/calendar-without-navigation.component)\n *\n * As you can see in the basic usage example calendar contains previous and next month days\n * which can be disabled using `boundingMonth` property.\n * @stacked-example(Bounding months, calendar/calendar-bounding-month.component)\n *\n * You can define starting view of the calendar by setting `startView` property.\n * Available values: year, month and date.\n * @stacked-example(Start view, calendar/calendar-start-view.component)\n *\n * You can use a larger version of the calendar by defining size property.\n * Available values: medium(which is default) and large.\n * @stacked-example(Size, calendar/calendar-size.component)\n *\n * Calendar supports min and max dates which disables values out of min-max range.\n * @stacked-example(Borders, calendar/calendar-min-max.component)\n *\n * Also, you can define custom filter property that should be predicate which receives\n * date and returns false if this date has to be disabled. In this example, we provide the filter\n * which disables weekdays.\n * @stacked-example(Filter, calendar/calendar-filter.component)\n *\n * Week numbers column could be enabled via `showWeekNumber` binding:\n * @stacked-example(Week number, calendar/calendar-week-number.component)\n *\n * If you need create custom cells you can easily provide custom components for\n * calendar. For examples if you want to show any average price under each date you can\n * just provide custom `dayCellComponent`. Custom cells for month and year can be provided\n * the same way, check API reference.\n * @stacked-example(Custom day cell, calendar/calendar-custom-day-cell-showcase.component)\n *\n * @styles\n *\n * calendar-width:\n * calendar-background-color:\n * calendar-border-color:\n * calendar-border-style:\n * calendar-border-width:\n * calendar-border-radius:\n * calendar-text-color:\n * calendar-text-font-family:\n * calendar-text-font-size:\n * calendar-text-font-weight:\n * calendar-text-line-height:\n * calendar-picker-padding-top:\n * calendar-picker-padding-bottom:\n * calendar-picker-padding-start:\n * calendar-picker-padding-end:\n * calendar-navigation-text-color:\n * calendar-navigation-text-font-family:\n * calendar-navigation-title-text-font-size:\n * calendar-navigation-title-text-font-weight:\n * calendar-navigation-title-text-line-height:\n * calendar-navigation-padding:\n * calendar-cell-inactive-text-color:\n * calendar-cell-disabled-text-color:\n * calendar-cell-hover-background-color:\n * calendar-cell-hover-border-color:\n * calendar-cell-hover-text-color:\n * calendar-cell-hover-text-font-size:\n * calendar-cell-hover-text-font-weight:\n * calendar-cell-hover-text-line-height:\n * calendar-cell-active-background-color:\n * calendar-cell-active-border-color:\n * calendar-cell-active-text-color:\n * calendar-cell-active-text-font-size:\n * calendar-cell-active-text-font-weight:\n * calendar-cell-active-text-line-height:\n * calendar-cell-today-background-color:\n * calendar-cell-today-border-color:\n * calendar-cell-today-text-color:\n * calendar-cell-today-text-font-size:\n * calendar-cell-today-text-font-weight:\n * calendar-cell-today-text-line-height:\n * calendar-cell-today-hover-background-color:\n * calendar-cell-today-hover-border-color:\n * calendar-cell-today-active-background-color:\n * calendar-cell-today-active-border-color:\n * calendar-cell-today-disabled-border-color:\n * calendar-cell-today-selected-background-color:\n * calendar-cell-today-selected-border-color:\n * calendar-cell-today-selected-text-color:\n * calendar-cell-today-selected-hover-background-color:\n * calendar-cell-today-selected-hover-border-color:\n * calendar-cell-today-selected-active-background-color:\n * calendar-cell-today-selected-active-border-color:\n * calendar-cell-today-in-range-background-color:\n * calendar-cell-today-in-range-border-color:\n * calendar-cell-today-in-range-text-color:\n * calendar-cell-today-in-range-hover-background-color:\n * calendar-cell-today-in-range-hover-border-color:\n * calendar-cell-today-in-range-active-background-color:\n * calendar-cell-today-in-range-active-border-color:\n * calendar-cell-selected-background-color:\n * calendar-cell-selected-border-color:\n * calendar-cell-selected-text-color:\n * calendar-cell-selected-text-font-size:\n * calendar-cell-selected-text-font-weight:\n * calendar-cell-selected-text-line-height:\n * calendar-cell-selected-hover-background-color:\n * calendar-cell-selected-hover-border-color:\n * calendar-cell-selected-active-background-color:\n * calendar-cell-selected-active-border-color:\n * calendar-day-cell-width:\n * calendar-day-cell-height:\n * calendar-month-cell-width:\n * calendar-month-cell-height:\n * calendar-year-cell-width:\n * calendar-year-cell-height:\n * calendar-weekday-background:\n * calendar-weekday-divider-color:\n * calendar-weekday-divider-width:\n * calendar-weekday-text-color:\n * calendar-weekday-text-font-size:\n * calendar-weekday-text-font-weight:\n * calendar-weekday-text-line-height:\n * calendar-weekday-holiday-text-color:\n * calendar-weekday-height:\n * calendar-weekday-width:\n * calendar-weeknumber-background:\n * calendar-weeknumber-divider-color:\n * calendar-weeknumber-divider-width:\n * calendar-weeknumber-text-color:\n * calendar-weeknumber-text-font-size:\n * calendar-weeknumber-text-font-weight:\n * calendar-weeknumber-text-line-height:\n * calendar-weeknumber-height:\n * calendar-weeknumber-width:\n * calendar-large-width:\n * calendar-day-cell-large-width:\n * calendar-day-cell-large-height:\n * calendar-weekday-large-height:\n * calendar-weekday-large-width:\n * calendar-weeknumber-large-height:\n * calendar-weeknumber-large-width:\n * calendar-month-cell-large-width:\n * calendar-month-cell-large-height:\n * calendar-year-cell-large-width:\n * calendar-year-cell-large-height:\n * */\n\n\nlet NbCalendarComponent = /*#__PURE__*/(() => {\n  class NbCalendarComponent {\n    constructor() {\n      /**\n       * Defines if we should render previous and next months\n       * in the current month view.\n       * */\n      this.boundingMonth = true;\n      /**\n       * Defines starting view for calendar.\n       * */\n\n      this.startView = NbCalendarViewMode.DATE;\n      /**\n       * Size of the calendar and entire components.\n       * Can be 'medium' which is default or 'large'.\n       * */\n\n      this.size = NbCalendarSize.MEDIUM;\n      /**\n       * Determines should we show calendars navigation or not.\n       * */\n\n      this.showNavigation = true;\n      this._showWeekNumber = false;\n      /**\n       * Sets symbol used as a header for week numbers column\n       * */\n\n      this.weekNumberSymbol = '#';\n      /**\n       * Emits date when selected.\n       * */\n\n      this.dateChange = new EventEmitter();\n    }\n    /**\n     * Determines should we show week numbers column.\n     * False by default.\n     * */\n\n\n    get showWeekNumber() {\n      return this._showWeekNumber;\n    }\n\n    set showWeekNumber(value) {\n      this._showWeekNumber = convertToBoolProperty(value);\n    }\n\n  }\n\n  NbCalendarComponent.ɵfac = function NbCalendarComponent_Factory(t) {\n    return new (t || NbCalendarComponent)();\n  };\n\n  NbCalendarComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbCalendarComponent,\n    selectors: [[\"nb-calendar\"]],\n    inputs: {\n      boundingMonth: \"boundingMonth\",\n      startView: \"startView\",\n      size: \"size\",\n      showNavigation: \"showNavigation\",\n      weekNumberSymbol: \"weekNumberSymbol\",\n      showWeekNumber: \"showWeekNumber\",\n      min: \"min\",\n      max: \"max\",\n      filter: \"filter\",\n      dayCellComponent: \"dayCellComponent\",\n      monthCellComponent: \"monthCellComponent\",\n      yearCellComponent: \"yearCellComponent\",\n      visibleDate: \"visibleDate\",\n      date: \"date\"\n    },\n    outputs: {\n      dateChange: \"dateChange\"\n    },\n    decls: 1,\n    vars: 14,\n    consts: [[3, \"boundingMonth\", \"startView\", \"date\", \"min\", \"max\", \"filter\", \"dayCellComponent\", \"monthCellComponent\", \"yearCellComponent\", \"size\", \"visibleDate\", \"showNavigation\", \"showWeekNumber\", \"weekNumberSymbol\", \"dateChange\"]],\n    template: function NbCalendarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"nb-base-calendar\", 0);\n        ɵngcc0.ɵɵlistener(\"dateChange\", function NbCalendarComponent_Template_nb_base_calendar_dateChange_0_listener($event) {\n          return ctx.dateChange.emit($event);\n        });\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"boundingMonth\", ctx.boundingMonth)(\"startView\", ctx.startView)(\"date\", ctx.date)(\"min\", ctx.min)(\"max\", ctx.max)(\"filter\", ctx.filter)(\"dayCellComponent\", ctx.dayCellComponent)(\"monthCellComponent\", ctx.monthCellComponent)(\"yearCellComponent\", ctx.yearCellComponent)(\"size\", ctx.size)(\"visibleDate\", ctx.visibleDate)(\"showNavigation\", ctx.showNavigation)(\"showWeekNumber\", ctx.showWeekNumber)(\"weekNumberSymbol\", ctx.weekNumberSymbol);\n      }\n    },\n    directives: function () {\n      return [NbBaseCalendarComponent];\n    },\n    encapsulation: 2\n  });\n  return NbCalendarComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})(); // tslint:disable-next-line:directive-class-suffix\n\n\nlet NbButton = /*#__PURE__*/(() => {\n  class NbButton {\n    constructor(renderer, hostElement, cd, zone, statusService) {\n      this.renderer = renderer;\n      this.hostElement = hostElement;\n      this.cd = cd;\n      this.zone = zone;\n      this.statusService = statusService;\n      /**\n       * Button size, available sizes:\n       * `tiny`, `small`, `medium`, `large`, `giant`\n       */\n\n      this.size = 'medium';\n      /**\n       * Button status (adds specific styles):\n       * `primary`, `info`, `success`, `warning`, `danger`\n       */\n\n      this.status = 'basic';\n      /**\n       * Button shapes: `rectangle`, `round`, `semi-round`\n       */\n\n      this.shape = 'rectangle';\n      /**\n       * Button appearance: `filled`, `outline`, `ghost`, `hero`\n       */\n\n      this.appearance = 'filled';\n      this._fullWidth = false;\n      this._disabled = false;\n    }\n    /**\n     * Sets `filled` appearance\n     */\n\n\n    get filled() {\n      return this.appearance === 'filled';\n    }\n\n    set filled(value) {\n      if (convertToBoolProperty(value)) {\n        this.appearance = 'filled';\n      }\n    }\n    /**\n     * Sets `outline` appearance\n     */\n\n\n    get outline() {\n      return this.appearance === 'outline';\n    }\n\n    set outline(value) {\n      if (convertToBoolProperty(value)) {\n        this.appearance = 'outline';\n      }\n    }\n    /**\n     * Sets `ghost` appearance\n     */\n\n\n    get ghost() {\n      return this.appearance === 'ghost';\n    }\n\n    set ghost(value) {\n      if (convertToBoolProperty(value)) {\n        this.appearance = 'ghost';\n      }\n    }\n    /**\n     * If set element will fill its container\n     */\n\n\n    get fullWidth() {\n      return this._fullWidth;\n    }\n\n    set fullWidth(value) {\n      this._fullWidth = convertToBoolProperty(value);\n    }\n    /**\n     * Disables the button\n     */\n\n\n    get disabled() {\n      return this._disabled;\n    }\n\n    set disabled(value) {\n      if (this.disabled !== convertToBoolProperty(value)) {\n        this._disabled = !this.disabled;\n        this.renderer.setProperty(this.hostElement.nativeElement, 'disabled', this.disabled);\n      }\n    } // issue #794\n\n\n    get tabbable() {\n      if (this.disabled) {\n        return '-1';\n      }\n\n      if (this.tabIndex == null) {\n        return '0';\n      }\n\n      return this.tabIndex.toString();\n    }\n\n    get tiny() {\n      return this.size === 'tiny';\n    }\n\n    get small() {\n      return this.size === 'small';\n    }\n\n    get medium() {\n      return this.size === 'medium';\n    }\n\n    get large() {\n      return this.size === 'large';\n    }\n\n    get giant() {\n      return this.size === 'giant';\n    }\n\n    get rectangle() {\n      return this.shape === 'rectangle';\n    }\n\n    get round() {\n      return this.shape === 'round';\n    }\n\n    get semiRound() {\n      return this.shape === 'semi-round';\n    }\n\n    get iconLeft() {\n      const el = this.hostElement.nativeElement;\n      const icon = this.iconElement;\n      return !!(icon && firstChildNotComment(el) === icon);\n    }\n\n    get iconRight() {\n      const el = this.hostElement.nativeElement;\n      const icon = this.iconElement;\n      return !!(icon && lastChildNotComment(el) === icon);\n    }\n\n    get additionalClasses() {\n      if (this.statusService.isCustomStatus(this.status)) {\n        return [this.statusService.getStatusClass(this.status)];\n      }\n\n      return [];\n    }\n\n    ngAfterViewInit() {\n      // TODO: #2254\n      this.zone.runOutsideAngular(() => setTimeout(() => {\n        this.renderer.addClass(this.hostElement.nativeElement, 'nb-transition');\n      }));\n    }\n    /**\n     * @docs-private\n     **/\n\n\n    updateProperties(config) {\n      let isPropertyChanged = false;\n\n      for (const key in config) {\n        if (config.hasOwnProperty(key) && this[key] !== config[key]) {\n          this[key] = config[key];\n          isPropertyChanged = true;\n        }\n      }\n\n      if (isPropertyChanged) {\n        this.cd.markForCheck();\n      }\n    }\n\n    get iconElement() {\n      const el = this.hostElement.nativeElement;\n      return el.querySelector('nb-icon');\n    }\n\n  }\n\n  NbButton.ɵfac = function NbButton_Factory(t) {\n    return new (t || NbButton)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(NbStatusService));\n  };\n\n  NbButton.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NbButton,\n    hostVars: 34,\n    hostBindings: function NbButton_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", ctx.disabled)(\"tabindex\", ctx.tabbable);\n        ɵngcc0.ɵɵclassMap(ctx.additionalClasses);\n        ɵngcc0.ɵɵclassProp(\"appearance-filled\", ctx.filled)(\"appearance-outline\", ctx.outline)(\"appearance-ghost\", ctx.ghost)(\"full-width\", ctx.fullWidth)(\"btn-disabled\", ctx.disabled)(\"size-tiny\", ctx.tiny)(\"size-small\", ctx.small)(\"size-medium\", ctx.medium)(\"size-large\", ctx.large)(\"size-giant\", ctx.giant)(\"shape-rectangle\", ctx.rectangle)(\"shape-round\", ctx.round)(\"shape-semi-round\", ctx.semiRound)(\"icon-start\", ctx.iconLeft)(\"icon-end\", ctx.iconRight);\n      }\n    },\n    inputs: {\n      size: \"size\",\n      status: \"status\",\n      shape: \"shape\",\n      appearance: \"appearance\",\n      filled: \"filled\",\n      outline: \"outline\",\n      ghost: \"ghost\",\n      fullWidth: \"fullWidth\",\n      disabled: \"disabled\",\n      tabIndex: \"tabIndex\"\n    }\n  });\n  return NbButton;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * Basic button component.\n *\n * Default button size is `medium` and status color is `basic`:\n * @stacked-example(Button Showcase, button/button-showcase.component)\n *\n * ```html\n * <button nbButton></button>\n * ```\n * ### Installation\n *\n * Import `NbButtonModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbButtonModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * Buttons are available in multiple colors using `status` property:\n * @stacked-example(Button Colors, button/button-colors.component.html)\n *\n * There are three button sizes:\n *\n * @stacked-example(Button Sizes, button/button-sizes.component.html)\n *\n * And two additional style types - `outline`:\n *\n * @stacked-example(Outline Buttons, button/button-outline.component.html)\n *\n * and `hero`:\n *\n * @stacked-example(Button Hero, button/button-hero.component.html)\n *\n * Buttons available in different shapes, which could be combined with the other properties:\n * @stacked-example(Button Shapes, button/button-shapes.component)\n *\n * `nbButton` could be applied to the following selectors - `button`, `input[type=\"button\"]`, `input[type=\"submit\"]`\n * and `a`:\n * @stacked-example(Button Elements, button/button-types.component.html)\n *\n * Button can be made `fullWidth`:\n * @stacked-example(Full Width Button, button/button-full-width.component.html)\n *\n * Icon can be placed inside of a button as a child element:\n * @stacked-example(Icon Button, button/button-icon.component.html)\n *\n * @additional-example(Interactive example, button/button-interactive.component)\n *\n * @styles\n *\n * button-cursor:\n * button-outline-width:\n * button-outline-color:\n * button-text-font-family:\n * button-text-font-weight:\n * button-disabled-cursor:\n * button-tiny-text-font-size:\n * button-tiny-text-line-height:\n * button-tiny-icon-size:\n * button-tiny-icon-vertical-margin:\n * button-tiny-icon-offset:\n * button-small-text-font-size:\n * button-small-text-line-height:\n * button-small-icon-size:\n * button-small-icon-vertical-margin:\n * button-small-icon-offset:\n * button-medium-text-font-size:\n * button-medium-text-line-height:\n * button-medium-icon-size:\n * button-medium-icon-vertical-margin:\n * button-medium-icon-offset:\n * button-large-text-font-size:\n * button-large-text-line-height:\n * button-large-icon-size:\n * button-large-icon-vertical-margin:\n * button-large-icon-offset:\n * button-giant-text-font-size:\n * button-giant-text-line-height:\n * button-giant-icon-size:\n * button-giant-icon-vertical-margin:\n * button-giant-icon-offset:\n * button-rectangle-border-radius:\n * button-semi-round-border-radius:\n * button-round-border-radius:\n * button-filled-border-style:\n * button-filled-border-width:\n * button-filled-text-transform:\n * button-filled-tiny-padding:\n * button-filled-small-padding:\n * button-filled-medium-padding:\n * button-filled-large-padding:\n * button-filled-giant-padding:\n * button-filled-basic-background-color:\n * button-filled-basic-border-color:\n * button-filled-basic-text-color:\n * button-filled-basic-focus-background-color:\n * button-filled-basic-focus-border-color:\n * button-filled-basic-hover-background-color:\n * button-filled-basic-hover-border-color:\n * button-filled-basic-active-background-color:\n * button-filled-basic-active-border-color:\n * button-filled-basic-disabled-background-color:\n * button-filled-basic-disabled-border-color:\n * button-filled-basic-disabled-text-color:\n * button-filled-primary-background-color:\n * button-filled-primary-border-color:\n * button-filled-primary-text-color:\n * button-filled-primary-focus-background-color:\n * button-filled-primary-focus-border-color:\n * button-filled-primary-hover-background-color:\n * button-filled-primary-hover-border-color:\n * button-filled-primary-active-background-color:\n * button-filled-primary-active-border-color:\n * button-filled-primary-disabled-background-color:\n * button-filled-primary-disabled-border-color:\n * button-filled-primary-disabled-text-color:\n * button-filled-success-background-color:\n * button-filled-success-border-color:\n * button-filled-success-text-color:\n * button-filled-success-focus-background-color:\n * button-filled-success-focus-border-color:\n * button-filled-success-hover-background-color:\n * button-filled-success-hover-border-color:\n * button-filled-success-active-background-color:\n * button-filled-success-active-border-color:\n * button-filled-success-disabled-background-color:\n * button-filled-success-disabled-border-color:\n * button-filled-success-disabled-text-color:\n * button-filled-info-background-color:\n * button-filled-info-border-color:\n * button-filled-info-text-color:\n * button-filled-info-focus-background-color:\n * button-filled-info-focus-border-color:\n * button-filled-info-hover-background-color:\n * button-filled-info-hover-border-color:\n * button-filled-info-active-background-color:\n * button-filled-info-active-border-color:\n * button-filled-info-disabled-background-color:\n * button-filled-info-disabled-border-color:\n * button-filled-info-disabled-text-color:\n * button-filled-warning-background-color:\n * button-filled-warning-border-color:\n * button-filled-warning-text-color:\n * button-filled-warning-focus-background-color:\n * button-filled-warning-focus-border-color:\n * button-filled-warning-hover-background-color:\n * button-filled-warning-hover-border-color:\n * button-filled-warning-active-background-color:\n * button-filled-warning-active-border-color:\n * button-filled-warning-disabled-background-color:\n * button-filled-warning-disabled-border-color:\n * button-filled-warning-disabled-text-color:\n * button-filled-danger-background-color:\n * button-filled-danger-border-color:\n * button-filled-danger-text-color:\n * button-filled-danger-focus-background-color:\n * button-filled-danger-focus-border-color:\n * button-filled-danger-hover-background-color:\n * button-filled-danger-hover-border-color:\n * button-filled-danger-active-background-color:\n * button-filled-danger-active-border-color:\n * button-filled-danger-disabled-background-color:\n * button-filled-danger-disabled-border-color:\n * button-filled-danger-disabled-text-color:\n * button-filled-control-background-color:\n * button-filled-control-border-color:\n * button-filled-control-text-color:\n * button-filled-control-focus-background-color:\n * button-filled-control-focus-border-color:\n * button-filled-control-hover-background-color:\n * button-filled-control-hover-border-color:\n * button-filled-control-active-background-color:\n * button-filled-control-active-border-color:\n * button-filled-control-disabled-background-color:\n * button-filled-control-disabled-border-color:\n * button-filled-control-disabled-text-color:\n * button-outline-border-style:\n * button-outline-border-width:\n * button-outline-text-transform:\n * button-outline-focus-inset-shadow-length:\n * button-outline-tiny-padding:\n * button-outline-small-padding:\n * button-outline-medium-padding:\n * button-outline-large-padding:\n * button-outline-giant-padding:\n * button-outline-basic-background-color:\n * button-outline-basic-border-color:\n * button-outline-basic-text-color:\n * button-outline-basic-focus-background-color:\n * button-outline-basic-focus-border-color:\n * button-outline-basic-focus-text-color:\n * button-outline-basic-hover-background-color:\n * button-outline-basic-hover-border-color:\n * button-outline-basic-hover-text-color:\n * button-outline-basic-active-background-color:\n * button-outline-basic-active-border-color:\n * button-outline-basic-active-text-color:\n * button-outline-basic-disabled-background-color:\n * button-outline-basic-disabled-border-color:\n * button-outline-basic-disabled-text-color:\n * button-outline-primary-background-color:\n * button-outline-primary-border-color:\n * button-outline-primary-text-color:\n * button-outline-primary-focus-background-color:\n * button-outline-primary-focus-border-color:\n * button-outline-primary-focus-text-color:\n * button-outline-primary-hover-background-color:\n * button-outline-primary-hover-border-color:\n * button-outline-primary-hover-text-color:\n * button-outline-primary-active-background-color:\n * button-outline-primary-active-border-color:\n * button-outline-primary-active-text-color:\n * button-outline-primary-disabled-background-color:\n * button-outline-primary-disabled-border-color:\n * button-outline-primary-disabled-text-color:\n * button-outline-success-background-color:\n * button-outline-success-border-color:\n * button-outline-success-text-color:\n * button-outline-success-focus-background-color:\n * button-outline-success-focus-border-color:\n * button-outline-success-focus-text-color:\n * button-outline-success-hover-background-color:\n * button-outline-success-hover-border-color:\n * button-outline-success-hover-text-color:\n * button-outline-success-active-background-color:\n * button-outline-success-active-border-color:\n * button-outline-success-active-text-color:\n * button-outline-success-disabled-background-color:\n * button-outline-success-disabled-border-color:\n * button-outline-success-disabled-text-color:\n * button-outline-info-background-color:\n * button-outline-info-border-color:\n * button-outline-info-text-color:\n * button-outline-info-focus-background-color:\n * button-outline-info-focus-border-color:\n * button-outline-info-focus-text-color:\n * button-outline-info-hover-background-color:\n * button-outline-info-hover-border-color:\n * button-outline-info-hover-text-color:\n * button-outline-info-active-background-color:\n * button-outline-info-active-border-color:\n * button-outline-info-active-text-color:\n * button-outline-info-disabled-background-color:\n * button-outline-info-disabled-border-color:\n * button-outline-info-disabled-text-color:\n * button-outline-warning-background-color:\n * button-outline-warning-border-color:\n * button-outline-warning-text-color:\n * button-outline-warning-focus-background-color:\n * button-outline-warning-focus-border-color:\n * button-outline-warning-focus-text-color:\n * button-outline-warning-hover-background-color:\n * button-outline-warning-hover-border-color:\n * button-outline-warning-hover-text-color:\n * button-outline-warning-active-background-color:\n * button-outline-warning-active-border-color:\n * button-outline-warning-active-text-color:\n * button-outline-warning-disabled-background-color:\n * button-outline-warning-disabled-border-color:\n * button-outline-warning-disabled-text-color:\n * button-outline-danger-background-color:\n * button-outline-danger-border-color:\n * button-outline-danger-text-color:\n * button-outline-danger-focus-background-color:\n * button-outline-danger-focus-border-color:\n * button-outline-danger-focus-text-color:\n * button-outline-danger-hover-background-color:\n * button-outline-danger-hover-border-color:\n * button-outline-danger-hover-text-color:\n * button-outline-danger-active-background-color:\n * button-outline-danger-active-border-color:\n * button-outline-danger-active-text-color:\n * button-outline-danger-disabled-background-color:\n * button-outline-danger-disabled-border-color:\n * button-outline-danger-disabled-text-color:\n * button-outline-control-background-color:\n * button-outline-control-border-color:\n * button-outline-control-text-color:\n * button-outline-control-focus-background-color:\n * button-outline-control-focus-border-color:\n * button-outline-control-focus-text-color:\n * button-outline-control-hover-background-color:\n * button-outline-control-hover-border-color:\n * button-outline-control-hover-text-color:\n * button-outline-control-active-background-color:\n * button-outline-control-active-border-color:\n * button-outline-control-active-text-color:\n * button-outline-control-disabled-background-color:\n * button-outline-control-disabled-border-color:\n * button-outline-control-disabled-text-color:\n * button-ghost-background-color:\n * button-ghost-border-color:\n * button-ghost-border-style:\n * button-ghost-border-width:\n * button-ghost-text-transform:\n * button-ghost-focus-inset-shadow-length:\n * button-ghost-tiny-padding:\n * button-ghost-small-padding:\n * button-ghost-medium-padding:\n * button-ghost-large-padding:\n * button-ghost-giant-padding:\n * button-ghost-basic-text-color:\n * button-ghost-basic-focus-background-color:\n * button-ghost-basic-focus-border-color:\n * button-ghost-basic-focus-text-color:\n * button-ghost-basic-hover-background-color:\n * button-ghost-basic-hover-border-color:\n * button-ghost-basic-hover-text-color:\n * button-ghost-basic-active-background-color:\n * button-ghost-basic-active-border-color:\n * button-ghost-basic-active-text-color:\n * button-ghost-basic-disabled-background-color:\n * button-ghost-basic-disabled-border-color:\n * button-ghost-basic-disabled-text-color:\n * button-ghost-primary-text-color:\n * button-ghost-primary-focus-background-color:\n * button-ghost-primary-focus-border-color:\n * button-ghost-primary-focus-text-color:\n * button-ghost-primary-hover-background-color:\n * button-ghost-primary-hover-border-color:\n * button-ghost-primary-hover-text-color:\n * button-ghost-primary-active-background-color:\n * button-ghost-primary-active-border-color:\n * button-ghost-primary-active-text-color:\n * button-ghost-primary-disabled-background-color:\n * button-ghost-primary-disabled-border-color:\n * button-ghost-primary-disabled-text-color:\n * button-ghost-success-text-color:\n * button-ghost-success-focus-background-color:\n * button-ghost-success-focus-border-color:\n * button-ghost-success-focus-text-color:\n * button-ghost-success-hover-background-color:\n * button-ghost-success-hover-border-color:\n * button-ghost-success-hover-text-color:\n * button-ghost-success-active-background-color:\n * button-ghost-success-active-border-color:\n * button-ghost-success-active-text-color:\n * button-ghost-success-disabled-background-color:\n * button-ghost-success-disabled-border-color:\n * button-ghost-success-disabled-text-color:\n * button-ghost-info-text-color:\n * button-ghost-info-focus-background-color:\n * button-ghost-info-focus-border-color:\n * button-ghost-info-focus-text-color:\n * button-ghost-info-hover-background-color:\n * button-ghost-info-hover-border-color:\n * button-ghost-info-hover-text-color:\n * button-ghost-info-active-background-color:\n * button-ghost-info-active-border-color:\n * button-ghost-info-active-text-color:\n * button-ghost-info-disabled-background-color:\n * button-ghost-info-disabled-border-color:\n * button-ghost-info-disabled-text-color:\n * button-ghost-warning-text-color:\n * button-ghost-warning-focus-background-color:\n * button-ghost-warning-focus-border-color:\n * button-ghost-warning-focus-text-color:\n * button-ghost-warning-hover-background-color:\n * button-ghost-warning-hover-border-color:\n * button-ghost-warning-hover-text-color:\n * button-ghost-warning-active-background-color:\n * button-ghost-warning-active-border-color:\n * button-ghost-warning-active-text-color:\n * button-ghost-warning-disabled-background-color:\n * button-ghost-warning-disabled-border-color:\n * button-ghost-warning-disabled-text-color:\n * button-ghost-danger-text-color:\n * button-ghost-danger-focus-background-color:\n * button-ghost-danger-focus-border-color:\n * button-ghost-danger-focus-text-color:\n * button-ghost-danger-hover-background-color:\n * button-ghost-danger-hover-border-color:\n * button-ghost-danger-hover-text-color:\n * button-ghost-danger-active-background-color:\n * button-ghost-danger-active-border-color:\n * button-ghost-danger-active-text-color:\n * button-ghost-danger-disabled-background-color:\n * button-ghost-danger-disabled-border-color:\n * button-ghost-danger-disabled-text-color:\n * button-ghost-control-text-color:\n * button-ghost-control-focus-background-color:\n * button-ghost-control-focus-border-color:\n * button-ghost-control-focus-text-color:\n * button-ghost-control-hover-background-color:\n * button-ghost-control-hover-border-color:\n * button-ghost-control-hover-text-color:\n * button-ghost-control-active-background-color:\n * button-ghost-control-active-border-color:\n * button-ghost-control-active-text-color:\n * button-ghost-control-disabled-background-color:\n * button-ghost-control-disabled-border-color:\n * button-ghost-control-disabled-text-color:\n * button-hero-border-color:\n * button-hero-border-style:\n * button-hero-border-width:\n * button-hero-text-transform:\n * button-hero-tiny-padding:\n * button-hero-small-padding:\n * button-hero-medium-padding:\n * button-hero-large-padding:\n * button-hero-giant-padding:\n * button-hero-shadow:\n * button-hero-text-shadow:\n * button-hero-bevel-size:\n * button-hero-glow-size:\n * button-hero-outline-color:\n * button-hero-outline-width:\n * button-hero-basic-text-color:\n * button-hero-basic-bevel-color:\n * button-hero-basic-glow-color:\n * button-hero-basic-left-background-color:\n * button-hero-basic-right-background-color:\n * button-hero-basic-focus-left-background-color:\n * button-hero-basic-focus-right-background-color:\n * button-hero-basic-hover-left-background-color:\n * button-hero-basic-hover-right-background-color:\n * button-hero-basic-active-left-background-color:\n * button-hero-basic-active-right-background-color:\n * button-hero-basic-disabled-background-color:\n * button-hero-basic-disabled-text-color:\n * button-hero-primary-text-color:\n * button-hero-primary-bevel-color:\n * button-hero-primary-glow-color:\n * button-hero-primary-left-background-color:\n * button-hero-primary-right-background-color:\n * button-hero-primary-focus-left-background-color:\n * button-hero-primary-focus-right-background-color:\n * button-hero-primary-hover-left-background-color:\n * button-hero-primary-hover-right-background-color:\n * button-hero-primary-active-left-background-color:\n * button-hero-primary-active-right-background-color:\n * button-hero-primary-disabled-background-color:\n * button-hero-primary-disabled-text-color:\n * button-hero-success-text-color:\n * button-hero-success-bevel-color:\n * button-hero-success-glow-color:\n * button-hero-success-left-background-color:\n * button-hero-success-right-background-color:\n * button-hero-success-focus-left-background-color:\n * button-hero-success-focus-right-background-color:\n * button-hero-success-hover-left-background-color:\n * button-hero-success-hover-right-background-color:\n * button-hero-success-active-left-background-color:\n * button-hero-success-active-right-background-color:\n * button-hero-success-disabled-background-color:\n * button-hero-success-disabled-text-color:\n * button-hero-info-text-color:\n * button-hero-info-bevel-color:\n * button-hero-info-glow-color:\n * button-hero-info-left-background-color:\n * button-hero-info-right-background-color:\n * button-hero-info-focus-left-background-color:\n * button-hero-info-focus-right-background-color:\n * button-hero-info-hover-left-background-color:\n * button-hero-info-hover-right-background-color:\n * button-hero-info-active-left-background-color:\n * button-hero-info-active-right-background-color:\n * button-hero-info-disabled-background-color:\n * button-hero-info-disabled-text-color:\n * button-hero-warning-text-color:\n * button-hero-warning-bevel-color:\n * button-hero-warning-glow-color:\n * button-hero-warning-left-background-color:\n * button-hero-warning-right-background-color:\n * button-hero-warning-focus-left-background-color:\n * button-hero-warning-focus-right-background-color:\n * button-hero-warning-hover-left-background-color:\n * button-hero-warning-hover-right-background-color:\n * button-hero-warning-active-left-background-color:\n * button-hero-warning-active-right-background-color:\n * button-hero-warning-disabled-background-color:\n * button-hero-warning-disabled-text-color:\n * button-hero-danger-text-color:\n * button-hero-danger-bevel-color:\n * button-hero-danger-glow-color:\n * button-hero-danger-left-background-color:\n * button-hero-danger-right-background-color:\n * button-hero-danger-focus-left-background-color:\n * button-hero-danger-focus-right-background-color:\n * button-hero-danger-hover-left-background-color:\n * button-hero-danger-hover-right-background-color:\n * button-hero-danger-active-left-background-color:\n * button-hero-danger-active-right-background-color:\n * button-hero-danger-disabled-background-color:\n * button-hero-danger-disabled-text-color:\n * button-hero-control-text-color:\n * button-hero-control-bevel-color:\n * button-hero-control-glow-color:\n * button-hero-control-left-background-color:\n * button-hero-control-right-background-color:\n * button-hero-control-focus-left-background-color:\n * button-hero-control-focus-right-background-color:\n * button-hero-control-hover-left-background-color:\n * button-hero-control-hover-right-background-color:\n * button-hero-control-active-left-background-color:\n * button-hero-control-active-right-background-color:\n * button-hero-control-disabled-background-color:\n * button-hero-control-disabled-text-color:\n */\n\n\nlet NbButtonComponent = /*#__PURE__*/(() => {\n  class NbButtonComponent extends NbButton {\n    constructor(renderer, hostElement, cd, zone, statusService) {\n      super(renderer, hostElement, cd, zone, statusService);\n      this.renderer = renderer;\n      this.hostElement = hostElement;\n      this.cd = cd;\n      this.zone = zone;\n      this.statusService = statusService;\n    }\n    /**\n     * Sets `hero` appearance\n     */\n\n\n    get hero() {\n      return this.appearance === 'hero';\n    }\n\n    set hero(value) {\n      if (convertToBoolProperty(value)) {\n        this.appearance = 'hero';\n      }\n    }\n\n    get primary() {\n      return this.status === 'primary';\n    }\n\n    get info() {\n      return this.status === 'info';\n    }\n\n    get success() {\n      return this.status === 'success';\n    }\n\n    get warning() {\n      return this.status === 'warning';\n    }\n\n    get danger() {\n      return this.status === 'danger';\n    }\n\n    get basic() {\n      return this.status === 'basic';\n    }\n\n    get control() {\n      return this.status === 'control';\n    }\n    /**\n     * @private\n     * Keep this handler to partially support anchor disabling.\n     * Unlike button, anchor doesn't have 'disabled' DOM property,\n     * so handler will be called anyway. We preventing navigation and bubbling.\n     * Disabling is partial due to click handlers precedence. Consider example:\n     * <a nbButton [disabled]=\"true\" (click)=\"clickHandler()\">...</a>\n     * 'clickHandler' will be called before our host listener below. We can't prevent\n     * such handlers call.\n     */\n\n\n    onClick(event) {\n      if (this.disabled) {\n        event.preventDefault();\n        event.stopImmediatePropagation();\n      }\n    }\n\n  }\n\n  NbButtonComponent.ɵfac = function NbButtonComponent_Factory(t) {\n    return new (t || NbButtonComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(NbStatusService));\n  };\n\n  NbButtonComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbButtonComponent,\n    selectors: [[\"button\", \"nbButton\", \"\"], [\"a\", \"nbButton\", \"\"], [\"input\", \"type\", \"button\", \"nbButton\", \"\"], [\"input\", \"type\", \"submit\", \"nbButton\", \"\"]],\n    hostVars: 16,\n    hostBindings: function NbButtonComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function NbButtonComponent_click_HostBindingHandler($event) {\n          return ctx.onClick($event);\n        });\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"appearance-hero\", ctx.hero)(\"status-primary\", ctx.primary)(\"status-info\", ctx.info)(\"status-success\", ctx.success)(\"status-warning\", ctx.warning)(\"status-danger\", ctx.danger)(\"status-basic\", ctx.basic)(\"status-control\", ctx.control);\n      }\n    },\n    inputs: {\n      hero: \"hero\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: NbButton,\n      useExisting: NbButtonComponent\n    }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n    attrs: _c7,\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function NbButtonComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return NbButtonComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nconst NB_BUTTON_COMPONENTS = [NbButtonComponent];\nlet NbButtonModule = /*#__PURE__*/(() => {\n  class NbButtonModule {}\n\n  NbButtonModule.ɵfac = function NbButtonModule_Factory(t) {\n    return new (t || NbButtonModule)();\n  };\n\n  NbButtonModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NbButtonModule\n  });\n  NbButtonModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[NbSharedModule]]\n  });\n  return NbButtonModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NbButtonModule, {\n    declarations: [NbButtonComponent],\n    imports: [NbSharedModule],\n    exports: [NbButtonComponent]\n  });\n})();\n/*\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nclass NbDateService {\n  constructor() {\n    this.DAYS_IN_WEEK = 7;\n    /**\n     * Number of hours in AM/PM day periods.\n     **/\n\n    this.HOURS_IN_DAY_PERIOD = 12;\n  }\n\n  setLocale(locale) {\n    this.locale = locale;\n  }\n  /**\n   * Checks if the date is between the start date and the end date.\n   * */\n\n\n  isBetween(date, start, end) {\n    return this.compareDates(date, start) > 0 && this.compareDates(date, end) < 0;\n  }\n\n  /**\n   * Checks is two dates have the same day.\n   * */\n  isSameDaySafe(date1, date2) {\n    return date1 && date2 && this.isSameDay(date1, date2);\n  }\n\n  /**\n   * Checks is two dates have the same month.\n   * */\n  isSameMonthSafe(date1, date2) {\n    return date1 && date2 && this.isSameMonth(date1, date2);\n  }\n  /**\n   * Checks is two dates have the same year.\n   * */\n\n\n  isSameYearSafe(date1, date2) {\n    return date1 && date2 && this.isSameYear(date1, date2);\n  }\n\n  isSameHourAndMinute(date1, date2) {\n    return this.isSameHour(date1, date2) && this.isSameMinute(date1, date2);\n  }\n\n  isSameHour(date1, date2) {\n    return this.getHours(date1) === this.getHours(date2);\n  }\n\n  isSameMinute(date1, date2) {\n    return this.getMinutes(date1) === this.getMinutes(date2);\n  }\n\n  getTwentyFourHoursFormat() {\n    return 'HH:mm';\n  }\n\n  getTwentyFourHoursFormatWithSeconds() {\n    return 'HH:mm:ss';\n  }\n\n  getTwelveHoursFormatWithSeconds() {\n    return 'hh:mm:ss a';\n  }\n\n  getDayPeriod(date) {\n    const isFirstDayPeriod = this.getHours(date) < this.HOURS_IN_DAY_PERIOD;\n\n    if (isFirstDayPeriod) {\n      return \"AM\"\n      /* AM */\n      ;\n    } else {\n      return \"PM\"\n      /* PM */\n      ;\n    }\n  }\n\n}\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nconst batch = (target, batchSize, offset = 0) => {\n  return target.reduce((res, item, index) => {\n    const chunkIndex = Math.floor((index + offset) / batchSize);\n\n    if (!res[chunkIndex]) {\n      res[chunkIndex] = [];\n    }\n\n    res[chunkIndex].push(item);\n    return res;\n  }, []);\n};\n/**\n * returns array with numbers from first argument to bound.\n * */\n\n\nconst rangeFromTo = (from$$1, to = 0, producer = i => i) => {\n  const arr = [];\n\n  for (let i = from$$1; i < to; i++) {\n    arr.push(producer(i));\n  }\n\n  return arr;\n};\n/**\n * returns array with numbers from zero to bound.\n * */\n\n\nconst range = (bound, producer = i => i) => {\n  return rangeFromTo(0, bound, producer);\n};\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nlet NbCalendarMonthModelService = /*#__PURE__*/(() => {\n  class NbCalendarMonthModelService {\n    constructor(dateService) {\n      this.dateService = dateService;\n    }\n\n    createDaysGrid(activeMonth, boundingMonth = true) {\n      const weeks = this.createDates(activeMonth);\n      return this.withBoundingMonths(weeks, activeMonth, boundingMonth);\n    }\n\n    createDates(activeMonth) {\n      const days = this.createDateRangeForMonth(activeMonth);\n      const startOfWeekDayDiff = this.getStartOfWeekDayDiff(activeMonth);\n      return batch(days, this.dateService.DAYS_IN_WEEK, startOfWeekDayDiff);\n    }\n\n    withBoundingMonths(weeks, activeMonth, boundingMonth) {\n      let withBoundingMonths = weeks;\n\n      if (this.isShouldAddPrevBoundingMonth(withBoundingMonths)) {\n        withBoundingMonths = this.addPrevBoundingMonth(withBoundingMonths, activeMonth, boundingMonth);\n      }\n\n      if (this.isShouldAddNextBoundingMonth(withBoundingMonths)) {\n        withBoundingMonths = this.addNextBoundingMonth(withBoundingMonths, activeMonth, boundingMonth);\n      }\n\n      return withBoundingMonths;\n    }\n\n    addPrevBoundingMonth(weeks, activeMonth, boundingMonth) {\n      const firstWeek = weeks.shift();\n      const requiredItems = this.dateService.DAYS_IN_WEEK - firstWeek.length;\n      firstWeek.unshift(...this.createPrevBoundingDays(activeMonth, boundingMonth, requiredItems));\n      return [firstWeek, ...weeks];\n    }\n\n    addNextBoundingMonth(weeks, activeMonth, boundingMonth) {\n      const lastWeek = weeks.pop();\n      const requiredItems = this.dateService.DAYS_IN_WEEK - lastWeek.length;\n      lastWeek.push(...this.createNextBoundingDays(activeMonth, boundingMonth, requiredItems));\n      return [...weeks, lastWeek];\n    }\n\n    createPrevBoundingDays(activeMonth, boundingMonth, requiredItems) {\n      const month = this.dateService.addMonth(activeMonth, -1);\n      const daysInMonth = this.dateService.getNumberOfDaysInMonth(month);\n      return this.createDateRangeForMonth(month).slice(daysInMonth - requiredItems).map(date => boundingMonth ? date : null);\n    }\n\n    createNextBoundingDays(activeMonth, boundingMonth, requiredItems) {\n      const month = this.dateService.addMonth(activeMonth, 1);\n      return this.createDateRangeForMonth(month).slice(0, requiredItems).map(date => boundingMonth ? date : null);\n    }\n\n    getStartOfWeekDayDiff(date) {\n      const startOfMonth = this.dateService.getMonthStart(date);\n      return this.getWeekStartDiff(startOfMonth);\n    }\n\n    getWeekStartDiff(date) {\n      return (7 - this.dateService.getFirstDayOfWeek() + this.dateService.getDayOfWeek(date)) % 7;\n    }\n\n    isShouldAddPrevBoundingMonth(weeks) {\n      return weeks[0].length < this.dateService.DAYS_IN_WEEK;\n    }\n\n    isShouldAddNextBoundingMonth(weeks) {\n      return weeks[weeks.length - 1].length < this.dateService.DAYS_IN_WEEK;\n    }\n\n    createDateRangeForMonth(date) {\n      const daysInMonth = this.dateService.getNumberOfDaysInMonth(date);\n      return range(daysInMonth, i => {\n        const year = this.dateService.getYear(date);\n        const month = this.dateService.getMonth(date);\n        return this.dateService.createDate(year, month, i + 1);\n      });\n    }\n\n  }\n\n  NbCalendarMonthModelService.ɵfac = function NbCalendarMonthModelService_Factory(t) {\n    return new (t || NbCalendarMonthModelService)(ɵngcc0.ɵɵinject(NbDateService));\n  };\n\n  NbCalendarMonthModelService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: NbCalendarMonthModelService,\n    factory: NbCalendarMonthModelService.ɵfac\n  });\n  return NbCalendarMonthModelService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nlet NbCalendarDayCellComponent = /*#__PURE__*/(() => {\n  class NbCalendarDayCellComponent {\n    constructor(dateService) {\n      this.dateService = dateService;\n      this.size = NbCalendarSize.MEDIUM;\n      this.select = new EventEmitter(true);\n      this.dayCellClass = true;\n    }\n\n    get today() {\n      return this.dateService.isSameDaySafe(this.date, this.dateService.today());\n    }\n\n    get boundingMonth() {\n      return !this.dateService.isSameMonthSafe(this.date, this.visibleDate);\n    }\n\n    get selected() {\n      return this.dateService.isSameDaySafe(this.date, this.selectedValue);\n    }\n\n    get empty() {\n      return !this.date;\n    }\n\n    get disabled() {\n      return this.smallerThanMin() || this.greaterThanMax() || this.dontFitFilter();\n    }\n\n    get isLarge() {\n      return this.size === NbCalendarSize.LARGE;\n    }\n\n    get day() {\n      return this.date && this.dateService.getDate(this.date);\n    }\n\n    onClick() {\n      if (this.disabled || this.empty) {\n        return;\n      }\n\n      this.select.emit(this.date);\n    }\n\n    smallerThanMin() {\n      return this.date && this.min && this.dateService.compareDates(this.date, this.min) < 0;\n    }\n\n    greaterThanMax() {\n      return this.date && this.max && this.dateService.compareDates(this.date, this.max) > 0;\n    }\n\n    dontFitFilter() {\n      return this.date && this.filter && !this.filter(this.date);\n    }\n\n  }\n\n  NbCalendarDayCellComponent.ɵfac = function NbCalendarDayCellComponent_Factory(t) {\n    return new (t || NbCalendarDayCellComponent)(ɵngcc0.ɵɵdirectiveInject(NbDateService));\n  };\n\n  NbCalendarDayCellComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbCalendarDayCellComponent,\n    selectors: [[\"nb-calendar-day-cell\"]],\n    hostVars: 14,\n    hostBindings: function NbCalendarDayCellComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function NbCalendarDayCellComponent_click_HostBindingHandler() {\n          return ctx.onClick();\n        });\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"day-cell\", ctx.dayCellClass)(\"today\", ctx.today)(\"bounding-month\", ctx.boundingMonth)(\"selected\", ctx.selected)(\"empty\", ctx.empty)(\"disabled\", ctx.disabled)(\"size-large\", ctx.isLarge);\n      }\n    },\n    inputs: {\n      size: \"size\",\n      date: \"date\",\n      selectedValue: \"selectedValue\",\n      visibleDate: \"visibleDate\",\n      min: \"min\",\n      max: \"max\",\n      filter: \"filter\"\n    },\n    outputs: {\n      select: \"select\"\n    },\n    decls: 2,\n    vars: 1,\n    consts: [[1, \"cell-content\"]],\n    template: function NbCalendarDayCellComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵtext(1);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx.day, \" \");\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return NbCalendarDayCellComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * Provides capability pick days.\n * */\n\n\nlet NbCalendarDayPickerComponent = /*#__PURE__*/(() => {\n  class NbCalendarDayPickerComponent {\n    constructor(monthModel) {\n      this.monthModel = monthModel;\n      /**\n       * Defines if we should render previous and next months\n       * in the current month view.\n       * */\n\n      this.boundingMonths = true;\n      this.cellComponent = NbCalendarDayCellComponent;\n      /**\n       * Size of the component.\n       * Can be 'medium' which is default or 'large'.\n       * */\n\n      this.size = NbCalendarSize.MEDIUM;\n      this._showWeekNumber = false;\n      /**\n       * Fires newly selected date.\n       * */\n\n      this.dateChange = new EventEmitter();\n    }\n    /**\n     * Custom day cell component. Have to implement `NbCalendarCell` interface.\n     * */\n\n\n    set setCellComponent(cellComponent) {\n      if (cellComponent) {\n        this.cellComponent = cellComponent;\n      }\n    }\n    /**\n     * Determines should we show week numbers column.\n     * False by default.\n     * */\n\n\n    get showWeekNumber() {\n      return this._showWeekNumber;\n    }\n\n    set showWeekNumber(value) {\n      this._showWeekNumber = convertToBoolProperty(value);\n    }\n\n    get large() {\n      return this.size === NbCalendarSize.LARGE;\n    }\n\n    ngOnChanges({\n      visibleDate,\n      boundingMonths\n    }) {\n      if (visibleDate || boundingMonths) {\n        this.weeks = this.monthModel.createDaysGrid(this.visibleDate, this.boundingMonths);\n      }\n    }\n\n    onSelect(day) {\n      this.dateChange.emit(day);\n    }\n\n  }\n\n  NbCalendarDayPickerComponent.ɵfac = function NbCalendarDayPickerComponent_Factory(t) {\n    return new (t || NbCalendarDayPickerComponent)(ɵngcc0.ɵɵdirectiveInject(NbCalendarMonthModelService));\n  };\n\n  NbCalendarDayPickerComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbCalendarDayPickerComponent,\n    selectors: [[\"nb-calendar-day-picker\"]],\n    hostVars: 2,\n    hostBindings: function NbCalendarDayPickerComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"size-large\", ctx.large);\n      }\n    },\n    inputs: {\n      boundingMonths: \"boundingMonths\",\n      size: \"size\",\n      setCellComponent: [\"cellComponent\", \"setCellComponent\"],\n      showWeekNumber: \"showWeekNumber\",\n      visibleDate: \"visibleDate\",\n      min: \"min\",\n      max: \"max\",\n      filter: \"filter\",\n      date: \"date\",\n      weekNumberSymbol: \"weekNumberSymbol\"\n    },\n    outputs: {\n      dateChange: \"dateChange\"\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature],\n    decls: 4,\n    vars: 10,\n    consts: [[3, \"weeks\", \"size\", \"weekNumberSymbol\", 4, \"ngIf\"], [1, \"days-container\"], [3, \"size\"], [3, \"data\", \"visibleDate\", \"selectedValue\", \"cellComponent\", \"min\", \"max\", \"filter\", \"size\", \"select\"], [3, \"weeks\", \"size\", \"weekNumberSymbol\"]],\n    template: function NbCalendarDayPickerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, NbCalendarDayPickerComponent_nb_calendar_week_numbers_0_Template, 1, 3, \"nb-calendar-week-numbers\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵelement(2, \"nb-calendar-days-names\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"nb-calendar-picker\", 3);\n        ɵngcc0.ɵɵlistener(\"select\", function NbCalendarDayPickerComponent_Template_nb_calendar_picker_select_3_listener($event) {\n          return ctx.onSelect($event);\n        });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showWeekNumber);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"size\", ctx.size);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"data\", ctx.weeks)(\"visibleDate\", ctx.visibleDate)(\"selectedValue\", ctx.date)(\"cellComponent\", ctx.cellComponent)(\"min\", ctx.min)(\"max\", ctx.max)(\"filter\", ctx.filter)(\"size\", ctx.size);\n      }\n    },\n    directives: function () {\n      return [ɵngcc2.NgIf, NbCalendarDaysNamesComponent, NbCalendarPickerComponent, NbCalendarWeekNumberComponent];\n    },\n    styles: [\"[_nghost-%COMP%]{display:flex}.days-container[_ngcontent-%COMP%]{width:100%}\"],\n    changeDetection: 0\n  });\n  return NbCalendarDayPickerComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nlet NbCalendarDaysNamesComponent = /*#__PURE__*/(() => {\n  class NbCalendarDaysNamesComponent {\n    constructor(dateService) {\n      this.dateService = dateService;\n    }\n\n    get isLarge() {\n      return this.size === NbCalendarSize.LARGE;\n    }\n\n    ngOnInit() {\n      const days = this.createDaysNames();\n      this.days = this.shiftStartOfWeek(days);\n    }\n\n    createDaysNames() {\n      return this.dateService.getDayOfWeekNames().map(this.markIfHoliday);\n    }\n\n    shiftStartOfWeek(days) {\n      for (let i = 0; i < this.dateService.getFirstDayOfWeek(); i++) {\n        days.push(days.shift());\n      }\n\n      return days;\n    }\n\n    markIfHoliday(name, i) {\n      return {\n        name,\n        isHoliday: i % 6 === 0\n      };\n    }\n\n  }\n\n  NbCalendarDaysNamesComponent.ɵfac = function NbCalendarDaysNamesComponent_Factory(t) {\n    return new (t || NbCalendarDaysNamesComponent)(ɵngcc0.ɵɵdirectiveInject(NbDateService));\n  };\n\n  NbCalendarDaysNamesComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbCalendarDaysNamesComponent,\n    selectors: [[\"nb-calendar-days-names\"]],\n    hostVars: 2,\n    hostBindings: function NbCalendarDaysNamesComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"size-large\", ctx.isLarge);\n      }\n    },\n    inputs: {\n      size: \"size\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"day\", 3, \"holiday\", 4, \"ngFor\", \"ngForOf\"], [1, \"day\"]],\n    template: function NbCalendarDaysNamesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, NbCalendarDaysNamesComponent_div_0_Template, 2, 3, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.days);\n      }\n    },\n    directives: [ɵngcc2.NgForOf],\n    styles: [\"[_nghost-%COMP%]{display:flex;justify-content:space-between}[_nghost-%COMP%]   .day[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center}\"],\n    changeDetection: 0\n  });\n  return NbCalendarDaysNamesComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nlet NbCalendarMonthCellComponent = /*#__PURE__*/(() => {\n  class NbCalendarMonthCellComponent {\n    constructor(dateService) {\n      this.dateService = dateService;\n      this.size = NbCalendarSize.MEDIUM;\n      this.select = new EventEmitter(true);\n      this.monthCellClass = true;\n    }\n\n    get selected() {\n      return this.dateService.isSameMonthSafe(this.date, this.selectedValue);\n    }\n\n    get today() {\n      return this.dateService.isSameMonthSafe(this.date, this.dateService.today());\n    }\n\n    get disabled() {\n      return this.smallerThanMin() || this.greaterThanMax();\n    }\n\n    get isLarge() {\n      return this.size === NbCalendarSize.LARGE;\n    }\n\n    get month() {\n      return this.dateService.getMonthName(this.date);\n    }\n\n    onClick() {\n      if (this.disabled) {\n        return;\n      }\n\n      this.select.emit(this.date);\n    }\n\n    smallerThanMin() {\n      return this.date && this.min && this.dateService.compareDates(this.monthEnd(), this.min) < 0;\n    }\n\n    greaterThanMax() {\n      return this.date && this.max && this.dateService.compareDates(this.monthStart(), this.max) > 0;\n    }\n\n    monthStart() {\n      return this.dateService.getMonthStart(this.date);\n    }\n\n    monthEnd() {\n      return this.dateService.getMonthEnd(this.date);\n    }\n\n  }\n\n  NbCalendarMonthCellComponent.ɵfac = function NbCalendarMonthCellComponent_Factory(t) {\n    return new (t || NbCalendarMonthCellComponent)(ɵngcc0.ɵɵdirectiveInject(NbDateService));\n  };\n\n  NbCalendarMonthCellComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbCalendarMonthCellComponent,\n    selectors: [[\"nb-calendar-month-cell\"]],\n    hostVars: 10,\n    hostBindings: function NbCalendarMonthCellComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function NbCalendarMonthCellComponent_click_HostBindingHandler() {\n          return ctx.onClick();\n        });\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"month-cell\", ctx.monthCellClass)(\"selected\", ctx.selected)(\"today\", ctx.today)(\"disabled\", ctx.disabled)(\"size-large\", ctx.isLarge);\n      }\n    },\n    inputs: {\n      size: \"size\",\n      date: \"date\",\n      selectedValue: \"selectedValue\",\n      min: \"min\",\n      max: \"max\"\n    },\n    outputs: {\n      select: \"select\"\n    },\n    decls: 2,\n    vars: 1,\n    consts: [[1, \"cell-content\"]],\n    template: function NbCalendarMonthCellComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵtext(1);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx.month, \" \");\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return NbCalendarMonthCellComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nconst MONTHS_IN_VIEW = 12;\nconst MONTHS_IN_COLUMN = 4;\nlet NbCalendarMonthPickerComponent = /*#__PURE__*/(() => {\n  class NbCalendarMonthPickerComponent {\n    constructor(dateService) {\n      this.dateService = dateService;\n      this.size = NbCalendarSize.MEDIUM;\n      this.monthChange = new EventEmitter();\n      this.cellComponent = NbCalendarMonthCellComponent;\n    }\n\n    set _cellComponent(cellComponent) {\n      if (cellComponent) {\n        this.cellComponent = cellComponent;\n      }\n    }\n\n    get large() {\n      return this.size === NbCalendarSize.LARGE;\n    }\n\n    ngOnChanges(changes) {\n      if (changes.month) {\n        this.initMonths();\n      }\n    }\n\n    initMonths() {\n      const date = this.dateService.getDate(this.month);\n      const year = this.dateService.getYear(this.month);\n      const firstMonth = this.dateService.createDate(year, 0, date);\n      const months = [firstMonth];\n\n      for (let monthIndex = 1; monthIndex < MONTHS_IN_VIEW; monthIndex++) {\n        months.push(this.dateService.addMonth(firstMonth, monthIndex));\n      }\n\n      this.months = batch(months, MONTHS_IN_COLUMN);\n    }\n\n    onSelect(month) {\n      this.monthChange.emit(month);\n    }\n\n  }\n\n  NbCalendarMonthPickerComponent.ɵfac = function NbCalendarMonthPickerComponent_Factory(t) {\n    return new (t || NbCalendarMonthPickerComponent)(ɵngcc0.ɵɵdirectiveInject(NbDateService));\n  };\n\n  NbCalendarMonthPickerComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbCalendarMonthPickerComponent,\n    selectors: [[\"nb-calendar-month-picker\"]],\n    hostVars: 2,\n    hostBindings: function NbCalendarMonthPickerComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"size-large\", ctx.large);\n      }\n    },\n    inputs: {\n      size: \"size\",\n      _cellComponent: [\"cellComponent\", \"_cellComponent\"],\n      min: \"min\",\n      max: \"max\",\n      filter: \"filter\",\n      month: \"month\",\n      date: \"date\"\n    },\n    outputs: {\n      monthChange: \"monthChange\"\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature],\n    decls: 1,\n    vars: 8,\n    consts: [[3, \"data\", \"min\", \"max\", \"filter\", \"selectedValue\", \"visibleDate\", \"cellComponent\", \"size\", \"select\"]],\n    template: function NbCalendarMonthPickerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"nb-calendar-picker\", 0);\n        ɵngcc0.ɵɵlistener(\"select\", function NbCalendarMonthPickerComponent_Template_nb_calendar_picker_select_0_listener($event) {\n          return ctx.onSelect($event);\n        });\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"data\", ctx.months)(\"min\", ctx.min)(\"max\", ctx.max)(\"filter\", ctx.filter)(\"selectedValue\", ctx.date)(\"visibleDate\", ctx.month)(\"cellComponent\", ctx.cellComponent)(\"size\", ctx.size);\n      }\n    },\n    directives: function () {\n      return [NbCalendarPickerComponent];\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return NbCalendarMonthPickerComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/*\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nlet NbCalendarYearModelService = /*#__PURE__*/(() => {\n  class NbCalendarYearModelService {\n    constructor(dateService) {\n      this.dateService = dateService;\n      this.yearsInView = 12;\n      this.yearsInRow = 4;\n    }\n\n    getYearsInView() {\n      return this.yearsInView;\n    }\n\n    getYearsInRow() {\n      return this.yearsInRow;\n    }\n\n    getViewYears(viewYear) {\n      const year = this.dateService.getYear(viewYear);\n      let viewStartYear;\n\n      if (year >= 0) {\n        viewStartYear = year - year % this.yearsInView;\n      } else {\n        viewStartYear = year - (year % this.yearsInView + this.yearsInView);\n      }\n\n      const years = range(this.yearsInView).map(i => this.copyWithYear(viewStartYear + i, viewYear));\n      return batch(years, this.yearsInRow);\n    }\n\n    copyWithYear(year, date) {\n      return this.dateService.createDate(year, this.dateService.getMonth(date), this.dateService.getDate(date));\n    }\n\n  }\n\n  NbCalendarYearModelService.ɵfac = function NbCalendarYearModelService_Factory(t) {\n    return new (t || NbCalendarYearModelService)(ɵngcc0.ɵɵinject(NbDateService));\n  };\n\n  NbCalendarYearModelService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: NbCalendarYearModelService,\n    factory: NbCalendarYearModelService.ɵfac\n  });\n  return NbCalendarYearModelService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nlet NbCalendarViewModeComponent = /*#__PURE__*/(() => {\n  class NbCalendarViewModeComponent {\n    constructor(dateService, yearModelService) {\n      this.dateService = dateService;\n      this.yearModelService = yearModelService;\n      this.viewMode = NbCalendarViewMode.DATE;\n      this.changeMode = new EventEmitter(true);\n    }\n\n    getText() {\n      if (!this.date) {\n        return '';\n      }\n\n      switch (this.viewMode) {\n        case NbCalendarViewMode.DATE:\n          {\n            const month = this.dateService.getMonthName(this.date, TranslationWidth.Wide);\n            const year = this.dateService.getYear(this.date);\n            return `${month} ${year}`;\n          }\n\n        case NbCalendarViewMode.MONTH:\n          return `${this.dateService.getYear(this.date)}`;\n\n        case NbCalendarViewMode.YEAR:\n          return `${this.getFirstYear()} - ${this.getLastYear()}`;\n      }\n    }\n\n    getIcon() {\n      if (this.viewMode === NbCalendarViewMode.DATE) {\n        return 'chevron-down-outline';\n      }\n\n      return 'chevron-up-outline';\n    }\n\n    getFirstYear() {\n      const years = this.yearModelService.getViewYears(this.date);\n      return this.dateService.getYear(years[0][0]).toString();\n    }\n\n    getLastYear() {\n      const years = this.yearModelService.getViewYears(this.date);\n      const lastRow = years[years.length - 1];\n      const lastYear = lastRow[lastRow.length - 1];\n      return this.dateService.getYear(lastYear).toString();\n    }\n\n  }\n\n  NbCalendarViewModeComponent.ɵfac = function NbCalendarViewModeComponent_Factory(t) {\n    return new (t || NbCalendarViewModeComponent)(ɵngcc0.ɵɵdirectiveInject(NbDateService), ɵngcc0.ɵɵdirectiveInject(NbCalendarYearModelService));\n  };\n\n  NbCalendarViewModeComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbCalendarViewModeComponent,\n    selectors: [[\"nb-calendar-view-mode\"]],\n    inputs: {\n      viewMode: \"viewMode\",\n      date: \"date\"\n    },\n    outputs: {\n      changeMode: \"changeMode\"\n    },\n    decls: 3,\n    vars: 2,\n    consts: [[\"nbButton\", \"\", \"ghost\", \"\", \"status\", \"basic\", 3, \"click\"], [\"pack\", \"nebular-essentials\", 3, \"icon\"]],\n    template: function NbCalendarViewModeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"button\", 0);\n        ɵngcc0.ɵɵlistener(\"click\", function NbCalendarViewModeComponent_Template_button_click_0_listener() {\n          return ctx.changeMode.emit();\n        });\n        ɵngcc0.ɵɵtext(1);\n        ɵngcc0.ɵɵelement(2, \"nb-icon\", 1);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx.getText(), \" \");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"icon\", ctx.getIcon());\n      }\n    },\n    directives: [NbButtonComponent, NbIconComponent],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return NbCalendarViewModeComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nlet NbCalendarPageableNavigationComponent = /*#__PURE__*/(() => {\n  class NbCalendarPageableNavigationComponent {\n    constructor(directionService) {\n      this.directionService = directionService;\n      this.next = new EventEmitter();\n      this.prev = new EventEmitter();\n    }\n\n    get isLtr() {\n      return this.directionService.isLtr();\n    }\n\n  }\n\n  NbCalendarPageableNavigationComponent.ɵfac = function NbCalendarPageableNavigationComponent_Factory(t) {\n    return new (t || NbCalendarPageableNavigationComponent)(ɵngcc0.ɵɵdirectiveInject(NbLayoutDirectionService));\n  };\n\n  NbCalendarPageableNavigationComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbCalendarPageableNavigationComponent,\n    selectors: [[\"nb-calendar-pageable-navigation\"]],\n    outputs: {\n      next: \"next\",\n      prev: \"prev\"\n    },\n    decls: 4,\n    vars: 2,\n    consts: [[\"nbButton\", \"\", \"ghost\", \"\", \"status\", \"basic\", 1, \"prev-month\", 3, \"click\"], [\"pack\", \"nebular-essentials\", 3, \"icon\"], [\"nbButton\", \"\", \"ghost\", \"\", \"status\", \"basic\", 1, \"next-month\", 3, \"click\"]],\n    template: function NbCalendarPageableNavigationComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"button\", 0);\n        ɵngcc0.ɵɵlistener(\"click\", function NbCalendarPageableNavigationComponent_Template_button_click_0_listener() {\n          return ctx.prev.emit();\n        });\n        ɵngcc0.ɵɵelement(1, \"nb-icon\", 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(2, \"button\", 2);\n        ɵngcc0.ɵɵlistener(\"click\", function NbCalendarPageableNavigationComponent_Template_button_click_2_listener() {\n          return ctx.next.emit();\n        });\n        ɵngcc0.ɵɵelement(3, \"nb-icon\", 1);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"icon\", ctx.isLtr ? \"chevron-left-outline\" : \"chevron-right-outline\");\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"icon\", ctx.isLtr ? \"chevron-right-outline\" : \"chevron-left-outline\");\n      }\n    },\n    directives: [NbButtonComponent, NbIconComponent],\n    styles: [\"[_nghost-%COMP%]{display:flex;align-items:center;justify-content:flex-start}\"]\n  });\n  return NbCalendarPageableNavigationComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nlet NbCalendarPickerComponent = /*#__PURE__*/(() => {\n  class NbCalendarPickerComponent {\n    constructor() {\n      this.size = NbCalendarSize.MEDIUM;\n      this.select = new EventEmitter();\n    }\n\n    get isLarge() {\n      return this.size === NbCalendarSize.LARGE;\n    }\n\n  }\n\n  NbCalendarPickerComponent.ɵfac = function NbCalendarPickerComponent_Factory(t) {\n    return new (t || NbCalendarPickerComponent)();\n  };\n\n  NbCalendarPickerComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbCalendarPickerComponent,\n    selectors: [[\"nb-calendar-picker\"]],\n    hostVars: 2,\n    hostBindings: function NbCalendarPickerComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"size-large\", ctx.isLarge);\n      }\n    },\n    inputs: {\n      size: \"size\",\n      data: \"data\",\n      visibleDate: \"visibleDate\",\n      selectedValue: \"selectedValue\",\n      cellComponent: \"cellComponent\",\n      min: \"min\",\n      max: \"max\",\n      filter: \"filter\"\n    },\n    outputs: {\n      select: \"select\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[3, \"row\", \"visibleDate\", \"selectedValue\", \"component\", \"min\", \"max\", \"filter\", \"size\", \"select\", 4, \"ngFor\", \"ngForOf\"], [3, \"row\", \"visibleDate\", \"selectedValue\", \"component\", \"min\", \"max\", \"filter\", \"size\", \"select\"]],\n    template: function NbCalendarPickerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, NbCalendarPickerComponent_nb_calendar_picker_row_0_Template, 1, 8, \"nb-calendar-picker-row\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.data);\n      }\n    },\n    directives: function () {\n      return [ɵngcc2.NgForOf, NbCalendarPickerRowComponent];\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return NbCalendarPickerComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nlet NbCalendarPickerRowComponent = /*#__PURE__*/(() => {\n  class NbCalendarPickerRowComponent {\n    constructor(cfr) {\n      this.cfr = cfr;\n      this.size = NbCalendarSize.MEDIUM;\n      this.select = new EventEmitter();\n    }\n\n    ngOnChanges() {\n      const factory = this.cfr.resolveComponentFactory(this.component);\n      this.containerRef.clear();\n      this.row.forEach(date => {\n        const component = this.containerRef.createComponent(factory);\n        this.patchWithContext(component.instance, date);\n        component.changeDetectorRef.detectChanges();\n      });\n    }\n\n    patchWithContext(component, date) {\n      component.visibleDate = this.visibleDate;\n      component.selectedValue = this.selectedValue;\n      component.date = date;\n      component.min = this.min;\n      component.max = this.max;\n      component.filter = this.filter;\n      component.size = this.size;\n      component.select.subscribe(this.select.emit.bind(this.select));\n    }\n\n  }\n\n  NbCalendarPickerRowComponent.ɵfac = function NbCalendarPickerRowComponent_Factory(t) {\n    return new (t || NbCalendarPickerRowComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver));\n  };\n\n  NbCalendarPickerRowComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbCalendarPickerRowComponent,\n    selectors: [[\"nb-calendar-picker-row\"]],\n    viewQuery: function NbCalendarPickerRowComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(TemplateRef, 7, ViewContainerRef);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.containerRef = _t.first);\n      }\n    },\n    inputs: {\n      size: \"size\",\n      row: \"row\",\n      selectedValue: \"selectedValue\",\n      visibleDate: \"visibleDate\",\n      component: \"component\",\n      min: \"min\",\n      max: \"max\",\n      filter: \"filter\"\n    },\n    outputs: {\n      select: \"select\"\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature],\n    decls: 1,\n    vars: 0,\n    template: function NbCalendarPickerRowComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, NbCalendarPickerRowComponent_ng_template_0_Template, 0, 0, \"ng-template\");\n      }\n    },\n    styles: [\"[_nghost-%COMP%] {\\n      display: flex;\\n      justify-content: space-between;\\n    }\"],\n    changeDetection: 0\n  });\n  return NbCalendarPickerRowComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nlet NbCalendarYearCellComponent = /*#__PURE__*/(() => {\n  class NbCalendarYearCellComponent {\n    constructor(dateService) {\n      this.dateService = dateService;\n      this.size = NbCalendarSize.MEDIUM;\n      this.select = new EventEmitter(true);\n      this.yearCellClass = true;\n    }\n\n    get selected() {\n      return this.dateService.isSameYearSafe(this.date, this.selectedValue);\n    }\n\n    get today() {\n      return this.dateService.isSameYearSafe(this.date, this.dateService.today());\n    }\n\n    get disabled() {\n      return this.smallerThanMin() || this.greaterThanMax();\n    }\n\n    get isLarge() {\n      return this.size === NbCalendarSize.LARGE;\n    }\n\n    get year() {\n      return this.dateService.getYear(this.date);\n    }\n\n    onClick() {\n      if (this.disabled) {\n        return;\n      }\n\n      this.select.emit(this.date);\n    }\n\n    smallerThanMin() {\n      return this.date && this.min && this.dateService.compareDates(this.yearEnd(), this.min) < 0;\n    }\n\n    greaterThanMax() {\n      return this.date && this.max && this.dateService.compareDates(this.yearStart(), this.max) > 0;\n    }\n\n    yearStart() {\n      return this.dateService.getYearStart(this.date);\n    }\n\n    yearEnd() {\n      return this.dateService.getYearEnd(this.date);\n    }\n\n  }\n\n  NbCalendarYearCellComponent.ɵfac = function NbCalendarYearCellComponent_Factory(t) {\n    return new (t || NbCalendarYearCellComponent)(ɵngcc0.ɵɵdirectiveInject(NbDateService));\n  };\n\n  NbCalendarYearCellComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbCalendarYearCellComponent,\n    selectors: [[\"nb-calendar-year-cell\"]],\n    hostVars: 10,\n    hostBindings: function NbCalendarYearCellComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function NbCalendarYearCellComponent_click_HostBindingHandler() {\n          return ctx.onClick();\n        });\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"year-cell\", ctx.yearCellClass)(\"selected\", ctx.selected)(\"today\", ctx.today)(\"disabled\", ctx.disabled)(\"size-large\", ctx.isLarge);\n      }\n    },\n    inputs: {\n      size: \"size\",\n      date: \"date\",\n      min: \"min\",\n      max: \"max\",\n      selectedValue: \"selectedValue\"\n    },\n    outputs: {\n      select: \"select\"\n    },\n    decls: 2,\n    vars: 1,\n    consts: [[1, \"cell-content\"]],\n    template: function NbCalendarYearCellComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵtext(1);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx.year, \" \");\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return NbCalendarYearCellComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nlet NbCalendarYearPickerComponent = /*#__PURE__*/(() => {\n  class NbCalendarYearPickerComponent {\n    constructor(dateService, yearModelService) {\n      this.dateService = dateService;\n      this.yearModelService = yearModelService;\n      this.cellComponent = NbCalendarYearCellComponent;\n      this.size = NbCalendarSize.MEDIUM;\n      this.yearChange = new EventEmitter();\n    }\n\n    set _cellComponent(cellComponent) {\n      if (cellComponent) {\n        this.cellComponent = cellComponent;\n      }\n    }\n\n    get large() {\n      return this.size === NbCalendarSize.LARGE;\n    }\n\n    ngOnChanges() {\n      this.years = this.yearModelService.getViewYears(this.year);\n    }\n\n    onSelect(year) {\n      this.yearChange.emit(year);\n    }\n\n  }\n\n  NbCalendarYearPickerComponent.ɵfac = function NbCalendarYearPickerComponent_Factory(t) {\n    return new (t || NbCalendarYearPickerComponent)(ɵngcc0.ɵɵdirectiveInject(NbDateService), ɵngcc0.ɵɵdirectiveInject(NbCalendarYearModelService));\n  };\n\n  NbCalendarYearPickerComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbCalendarYearPickerComponent,\n    selectors: [[\"nb-calendar-year-picker\"]],\n    hostVars: 2,\n    hostBindings: function NbCalendarYearPickerComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"size-large\", ctx.large);\n      }\n    },\n    inputs: {\n      size: \"size\",\n      _cellComponent: [\"cellComponent\", \"_cellComponent\"],\n      date: \"date\",\n      min: \"min\",\n      max: \"max\",\n      filter: \"filter\",\n      year: \"year\"\n    },\n    outputs: {\n      yearChange: \"yearChange\"\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature],\n    decls: 1,\n    vars: 8,\n    consts: [[3, \"data\", \"min\", \"max\", \"filter\", \"selectedValue\", \"visibleDate\", \"cellComponent\", \"size\", \"select\"]],\n    template: function NbCalendarYearPickerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"nb-calendar-picker\", 0);\n        ɵngcc0.ɵɵlistener(\"select\", function NbCalendarYearPickerComponent_Template_nb_calendar_picker_select_0_listener($event) {\n          return ctx.onSelect($event);\n        });\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"data\", ctx.years)(\"min\", ctx.min)(\"max\", ctx.max)(\"filter\", ctx.filter)(\"selectedValue\", ctx.date)(\"visibleDate\", ctx.year)(\"cellComponent\", ctx.cellComponent)(\"size\", ctx.size);\n      }\n    },\n    directives: [NbCalendarPickerComponent],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return NbCalendarYearPickerComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/*\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nlet NbCalendarWeekNumberComponent = /*#__PURE__*/(() => {\n  class NbCalendarWeekNumberComponent {\n    constructor(dateService) {\n      this.dateService = dateService;\n    }\n\n    get isLarge() {\n      return this.size === NbCalendarSize.LARGE;\n    }\n\n    ngOnChanges(changes) {\n      if (changes.weeks) {\n        this.weekNumbers = this.getWeeks();\n      }\n    }\n\n    getWeeks() {\n      return this.weeks.map(week => {\n        // Find last defined day as week could contain null days in case\n        // boundingMonth set to false\n        const lastDay = [...week].reverse().find(day => !!day); // Use last day of the week to determine week number.\n        // This way weeks which span between sibling years is marked first\n\n        return this.dateService.getWeekNumber(lastDay);\n      });\n    }\n\n  }\n\n  NbCalendarWeekNumberComponent.ɵfac = function NbCalendarWeekNumberComponent_Factory(t) {\n    return new (t || NbCalendarWeekNumberComponent)(ɵngcc0.ɵɵdirectiveInject(NbDateService));\n  };\n\n  NbCalendarWeekNumberComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbCalendarWeekNumberComponent,\n    selectors: [[\"nb-calendar-week-numbers\"]],\n    hostVars: 2,\n    hostBindings: function NbCalendarWeekNumberComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"size-large\", ctx.isLarge);\n      }\n    },\n    inputs: {\n      weeks: \"weeks\",\n      size: \"size\",\n      weekNumberSymbol: \"weekNumberSymbol\"\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature],\n    decls: 4,\n    vars: 2,\n    consts: [[1, \"sign-container\"], [1, \"sign\"], [\"class\", \"week-number\", 4, \"ngFor\", \"ngForOf\"], [1, \"week-number\"]],\n    template: function NbCalendarWeekNumberComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵtext(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(3, NbCalendarWeekNumberComponent_div_3_Template, 2, 1, \"div\", 2);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵtextInterpolate(ctx.weekNumberSymbol);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.weekNumbers);\n      }\n    },\n    directives: [ɵngcc2.NgForOf],\n    styles: [_c8],\n    changeDetection: 0\n  });\n  return NbCalendarWeekNumberComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * The `NbNativeDateService` is basic implementation of `NbDateService` using\n * native js date objects and angular localization services.\n * */\n\n\nlet NbNativeDateService = /*#__PURE__*/(() => {\n  class NbNativeDateService extends NbDateService {\n    constructor(locale) {\n      super();\n      this.setLocale(locale);\n    }\n\n    setLocale(locale) {\n      super.setLocale(locale);\n      this.datePipe = new DatePipe(locale);\n    }\n\n    setHours(date, hour) {\n      const result = this.clone(date);\n      result.setHours(hour);\n      return result;\n    }\n\n    setMinutes(date, minute) {\n      const result = this.clone(date);\n      result.setMinutes(minute);\n      return result;\n    }\n\n    setSeconds(date, second) {\n      const result = this.clone(date);\n      result.setSeconds(second);\n      return result;\n    }\n\n    setMilliseconds(date, second) {\n      const result = this.clone(date);\n      result.setMilliseconds(second);\n      return result;\n    }\n\n    isValidDateString(date, format) {\n      return !isNaN(this.parse(date, format).getTime());\n    }\n\n    isValidTimeString(date, format) {\n      return this.isValidDateString(date, format);\n    }\n\n    today() {\n      return new Date();\n    }\n\n    getLocaleTimeFormat() {\n      return getLocaleTimeFormat(this.locale, FormatWidth.Short);\n    }\n\n    getDate(date) {\n      return date.getDate();\n    }\n\n    getMonth(date) {\n      return date.getMonth();\n    }\n\n    getYear(date) {\n      return date.getFullYear();\n    }\n\n    getDayOfWeek(date) {\n      return date.getDay();\n    }\n    /**\n     * returns first day of the week, it can be 1 if week starts from monday\n     * and 0 if from sunday and so on.\n     * */\n\n\n    getFirstDayOfWeek() {\n      return getLocaleFirstDayOfWeek(this.locale);\n    }\n\n    getMonthName(date, style$$1 = TranslationWidth.Abbreviated) {\n      const index = date.getMonth();\n      return this.getMonthNameByIndex(index, style$$1);\n    }\n\n    getMonthNameByIndex(index, style$$1 = TranslationWidth.Abbreviated) {\n      return getLocaleMonthNames(this.locale, FormStyle.Format, style$$1)[index];\n    }\n\n    getDayOfWeekNames() {\n      return [...getLocaleDayNames(this.locale, FormStyle.Format, TranslationWidth.Short)];\n    }\n\n    format(date, format) {\n      return this.datePipe.transform(date, format);\n    }\n    /**\n     * We haven't got capability to parse date using formatting without third party libraries.\n     * */\n\n\n    parse(date, format) {\n      return new Date(Date.parse(date));\n    }\n\n    addDay(date, num) {\n      return this.createDate(date.getFullYear(), date.getMonth(), date.getDate() + num);\n    }\n\n    addMonth(date, num) {\n      const month = this.createDate(date.getFullYear(), date.getMonth() + num, 1); // In case of date has more days than calculated month js Date will change that month to the next one\n      // because of the date overflow.\n\n      month.setDate(Math.min(date.getDate(), this.getMonthEnd(month).getDate()));\n      return month;\n    }\n\n    addMinutes(date, minute) {\n      const result = new Date(date);\n      result.setMinutes(date.getMinutes() + minute);\n      return result;\n    }\n\n    addHours(date, hour) {\n      const result = new Date(date);\n      result.setHours(date.getHours() + hour);\n      return result;\n    }\n\n    getHours(date) {\n      return date.getHours();\n    }\n\n    getMinutes(date) {\n      return date.getMinutes();\n    }\n\n    getSeconds(date) {\n      return date.getSeconds();\n    }\n\n    getMilliseconds(date) {\n      return date.getMilliseconds();\n    }\n\n    addYear(date, num) {\n      return this.createDate(date.getFullYear() + num, date.getMonth(), date.getDate());\n    }\n\n    clone(date) {\n      return new Date(date.getTime());\n    }\n\n    compareDates(date1, date2) {\n      return date1.getTime() - date2.getTime();\n    }\n\n    createDate(year, month, date) {\n      const result = new Date(year, month, date); // We need to correct for the fact that JS native Date treats years in range [0, 99] as\n      // abbreviations for 19xx.\n\n      if (year >= 0 && year < 100) {\n        result.setFullYear(result.getFullYear() - 1900);\n      }\n\n      return result;\n    }\n\n    getMonthEnd(date) {\n      return this.createDate(date.getFullYear(), date.getMonth() + 1, 0);\n    }\n\n    getMonthStart(date) {\n      return this.createDate(date.getFullYear(), date.getMonth(), 1);\n    }\n\n    getNumberOfDaysInMonth(date) {\n      return this.getMonthEnd(date).getDate();\n    }\n\n    getYearEnd(date) {\n      return this.createDate(date.getFullYear(), 11, 31);\n    }\n\n    getYearStart(date) {\n      return this.createDate(date.getFullYear(), 0, 1);\n    }\n\n    valueOf(date) {\n      return date.valueOf();\n    }\n\n    isSameDay(date1, date2) {\n      return this.isSameMonth(date1, date2) && date1.getDate() === date2.getDate();\n    }\n\n    isSameMonth(date1, date2) {\n      return this.isSameYear(date1, date2) && date1.getMonth() === date2.getMonth();\n    }\n\n    isSameYear(date1, date2) {\n      return date1.getFullYear() === date2.getFullYear();\n    }\n\n    getId() {\n      return 'native';\n    }\n\n    getWeekNumber(date) {\n      return parseInt(this.datePipe.transform(date, 'w'), 10);\n    }\n\n    getDateFormat() {\n      return 'yyyy-MM-dd';\n    }\n\n    getTwelveHoursFormat() {\n      return 'hh:mm a';\n    }\n\n  }\n\n  NbNativeDateService.ɵfac = function NbNativeDateService_Factory(t) {\n    return new (t || NbNativeDateService)(ɵngcc0.ɵɵinject(LOCALE_ID));\n  };\n\n  NbNativeDateService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: NbNativeDateService,\n    factory: NbNativeDateService.ɵfac\n  });\n  return NbNativeDateService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet NbCalendarTimeModelService = /*#__PURE__*/(() => {\n  class NbCalendarTimeModelService {\n    constructor(dateService) {\n      this.dateService = dateService;\n      this.MINUTES_AND_SECONDS = 60;\n    }\n\n    getHoursRange(step = this.MINUTES_AND_SECONDS) {\n      let date = this.getResetTime();\n      const endDate = this.dateService.addDay(date, 1);\n      const result = [];\n\n      while (this.dateService.compareDates(date, endDate) < 0) {\n        result.push(date);\n        date = this.dateService.addMinutes(date, step);\n      }\n\n      return result;\n    }\n\n    getResetTime() {\n      let today = this.dateService.today();\n      today = this.dateService.setHours(today, 0);\n      today = this.dateService.setMinutes(today, 0);\n      today = this.dateService.setSeconds(today, 0);\n      today = this.dateService.setMilliseconds(today, 0);\n      return today;\n    }\n\n    paddToTwoSymbols(n) {\n      if (n < 10) {\n        return '0' + n;\n      }\n\n      return n.toString();\n    }\n\n    buildDateFormat(twelveHoursFormat, withSeconds = false) {\n      if (twelveHoursFormat) {\n        return `${this.dateService.getDateFormat()} ${this.dateService.getTwelveHoursFormat()}`;\n      }\n\n      if (withSeconds) {\n        return `${this.dateService.getDateFormat()} ${this.dateService.getTwentyFourHoursFormatWithSeconds()}`;\n      }\n\n      return `${this.dateService.getDateFormat()} ${this.dateService.getTwentyFourHoursFormat()}`;\n    }\n\n  }\n\n  NbCalendarTimeModelService.ɵfac = function NbCalendarTimeModelService_Factory(t) {\n    return new (t || NbCalendarTimeModelService)(ɵngcc0.ɵɵinject(NbDateService));\n  };\n\n  NbCalendarTimeModelService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: NbCalendarTimeModelService,\n    factory: NbCalendarTimeModelService.ɵfac\n  });\n  return NbCalendarTimeModelService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet NbCalendarActionsComponent = /*#__PURE__*/(() => {\n  class NbCalendarActionsComponent {\n    constructor() {\n      this._applyButtonText = 'ok';\n      this._currentTimeButtonText = 'now';\n      this.setCurrentTime = new EventEmitter();\n      this.saveValue = new EventEmitter();\n    }\n\n    set applyButtonText(value) {\n      if (value) {\n        this._applyButtonText = value;\n      }\n    }\n\n    get applyText() {\n      return this._applyButtonText;\n    }\n\n    set currentTimeButtonText(value) {\n      if (value) {\n        this._currentTimeButtonText = value;\n      }\n    }\n\n    get currentTimeText() {\n      return this._currentTimeButtonText;\n    }\n\n  }\n\n  NbCalendarActionsComponent.ɵfac = function NbCalendarActionsComponent_Factory(t) {\n    return new (t || NbCalendarActionsComponent)();\n  };\n\n  NbCalendarActionsComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbCalendarActionsComponent,\n    selectors: [[\"nb-calendar-actions\"]],\n    inputs: {\n      applyButtonText: \"applyButtonText\",\n      currentTimeButtonText: \"currentTimeButtonText\"\n    },\n    outputs: {\n      setCurrentTime: \"setCurrentTime\",\n      saveValue: \"saveValue\"\n    },\n    decls: 4,\n    vars: 2,\n    consts: [[\"nbButton\", \"\", \"ghost\", \"\", \"status\", \"primary\", \"size\", \"small\", 3, \"click\"], [\"nbButton\", \"\", \"status\", \"primary\", \"size\", \"small\", 3, \"click\"]],\n    template: function NbCalendarActionsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"button\", 0);\n        ɵngcc0.ɵɵlistener(\"click\", function NbCalendarActionsComponent_Template_button_click_0_listener() {\n          return ctx.setCurrentTime.emit();\n        });\n        ɵngcc0.ɵɵtext(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(2, \"button\", 1);\n        ɵngcc0.ɵɵlistener(\"click\", function NbCalendarActionsComponent_Template_button_click_2_listener() {\n          return ctx.saveValue.emit();\n        });\n        ɵngcc0.ɵɵtext(3);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx.currentTimeText, \"\");\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx.applyText, \"\");\n      }\n    },\n    directives: [NbButtonComponent],\n    styles: [\"[_nghost-%COMP%]{display:flex;justify-content:space-between}\"],\n    changeDetection: 0\n  });\n  return NbCalendarActionsComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nconst SERVICES = [{\n  provide: NbDateService,\n  useClass: NbNativeDateService\n}, DatePipe, NbCalendarMonthModelService, NbCalendarYearModelService, NbCalendarTimeModelService];\nconst COMPONENTS = [NbCalendarViewModeComponent, NbCalendarPageableNavigationComponent, NbCalendarDaysNamesComponent, NbCalendarYearPickerComponent, NbCalendarMonthPickerComponent, NbCalendarDayPickerComponent, NbCalendarDayCellComponent, NbCalendarActionsComponent, NbCalendarMonthCellComponent, NbCalendarYearCellComponent, NbCalendarPickerRowComponent, NbCalendarPickerComponent, NbCalendarWeekNumberComponent];\n/**\n * `NbCalendarKitModule` is a module that contains multiple useful components for building custom calendars.\n * So if you think our calendars is not enough powerful for you just use calendar-kit and build your own calendar!\n *\n * Available components:\n * - `NbCalendarDayPicker`\n * - `NbCalendarDayCell`\n * - `NbCalendarMonthPicker`\n * - `NbCalendarMonthCell`\n * - `NbCalendarYearPicker`\n * - `NbCalendarYearCell`\n * - `NbCalendarViewModeComponent`\n * - `NbCalendarPageableNavigation`\n *\n * For example you can easily build full calendar:\n * @stacked-example(Full calendar, calendar-kit/calendar-kit-full-calendar.component)\n * */\n\nlet NbCalendarKitModule = /*#__PURE__*/(() => {\n  class NbCalendarKitModule {}\n\n  NbCalendarKitModule.ɵfac = function NbCalendarKitModule_Factory(t) {\n    return new (t || NbCalendarKitModule)();\n  };\n\n  NbCalendarKitModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NbCalendarKitModule\n  });\n  NbCalendarKitModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    providers: [...SERVICES],\n    imports: [[NbSharedModule, NbButtonModule, NbIconModule]]\n  });\n  return NbCalendarKitModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NbCalendarKitModule, {\n    declarations: [NbCalendarViewModeComponent, NbCalendarPageableNavigationComponent, NbCalendarDaysNamesComponent, NbCalendarYearPickerComponent, NbCalendarMonthPickerComponent, NbCalendarDayPickerComponent, NbCalendarDayCellComponent, NbCalendarActionsComponent, NbCalendarMonthCellComponent, NbCalendarYearCellComponent, NbCalendarPickerRowComponent, NbCalendarPickerComponent, NbCalendarWeekNumberComponent],\n    imports: [NbSharedModule, NbButtonModule, NbIconModule],\n    exports: [NbCalendarViewModeComponent, NbCalendarPageableNavigationComponent, NbCalendarDaysNamesComponent, NbCalendarYearPickerComponent, NbCalendarMonthPickerComponent, NbCalendarDayPickerComponent, NbCalendarDayCellComponent, NbCalendarActionsComponent, NbCalendarMonthCellComponent, NbCalendarYearCellComponent, NbCalendarPickerRowComponent, NbCalendarPickerComponent, NbCalendarWeekNumberComponent]\n  });\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * The basis for calendar and range calendar components.\n * Encapsulates common behavior - store calendar state and perform navigation\n * between pickers.\n * */\n\n\nlet NbBaseCalendarComponent = /*#__PURE__*/(() => {\n  class NbBaseCalendarComponent {\n    constructor(dateService, yearModelService) {\n      this.dateService = dateService;\n      this.yearModelService = yearModelService;\n      /**\n       * Defines if we should render previous and next months\n       * in the current month view.\n       * */\n\n      this.boundingMonth = true;\n      /**\n       * Defines active view for calendar.\n       * */\n\n      this.activeViewMode = NbCalendarViewMode.DATE;\n      /**\n       * Size of the calendar and entire components.\n       * Can be 'medium' which is default or 'large'.\n       * */\n\n      this.size = NbCalendarSize.MEDIUM;\n      /**\n       * Determines whether we should show calendar navigation or not.\n       * */\n\n      this.showNavigation = true;\n      this._showWeekNumber = false;\n      /**\n       * Emits date when selected.\n       * */\n\n      this.dateChange = new EventEmitter();\n      this.ViewMode = NbCalendarViewMode;\n    }\n    /**\n     * Determines should we show week numbers column.\n     * False by default.\n     * */\n\n\n    get showWeekNumber() {\n      return this._showWeekNumber;\n    }\n\n    set showWeekNumber(value) {\n      this._showWeekNumber = convertToBoolProperty(value);\n    }\n\n    ngOnInit() {\n      if (!this.visibleDate) {\n        this.visibleDate = this.dateService.today();\n      }\n    }\n\n    get large() {\n      return this.size === NbCalendarSize.LARGE;\n    }\n\n    setViewMode(viewMode) {\n      this.activeViewMode = viewMode;\n    }\n\n    setVisibleDate(visibleDate) {\n      this.visibleDate = visibleDate;\n    }\n\n    prevMonth() {\n      this.changeVisibleMonth(-1);\n    }\n\n    nextMonth() {\n      this.changeVisibleMonth(1);\n    }\n\n    prevYear() {\n      this.changeVisibleYear(-1);\n    }\n\n    nextYear() {\n      this.changeVisibleYear(1);\n    }\n\n    prevYears() {\n      this.changeVisibleYears(-1);\n    }\n\n    nextYears() {\n      this.changeVisibleYears(1);\n    }\n\n    navigatePrev() {\n      switch (this.activeViewMode) {\n        case NbCalendarViewMode.DATE:\n          return this.prevMonth();\n\n        case NbCalendarViewMode.MONTH:\n          return this.prevYear();\n\n        case NbCalendarViewMode.YEAR:\n          return this.prevYears();\n      }\n    }\n\n    navigateNext() {\n      switch (this.activeViewMode) {\n        case NbCalendarViewMode.DATE:\n          return this.nextMonth();\n\n        case NbCalendarViewMode.MONTH:\n          return this.nextYear();\n\n        case NbCalendarViewMode.YEAR:\n          return this.nextYears();\n      }\n    }\n\n    onChangeViewMode() {\n      if (this.activeViewMode === NbCalendarViewMode.DATE) {\n        return this.setViewMode(NbCalendarViewMode.YEAR);\n      }\n\n      this.setViewMode(NbCalendarViewMode.DATE);\n    }\n\n    changeVisibleMonth(direction) {\n      this.visibleDate = this.dateService.addMonth(this.visibleDate, direction);\n    }\n\n    changeVisibleYear(direction) {\n      this.visibleDate = this.dateService.addYear(this.visibleDate, direction);\n    }\n\n    changeVisibleYears(direction) {\n      this.visibleDate = this.dateService.addYear(this.visibleDate, direction * this.yearModelService.getYearsInView());\n    }\n\n  }\n\n  NbBaseCalendarComponent.ɵfac = function NbBaseCalendarComponent_Factory(t) {\n    return new (t || NbBaseCalendarComponent)(ɵngcc0.ɵɵdirectiveInject(NbDateService), ɵngcc0.ɵɵdirectiveInject(NbCalendarYearModelService));\n  };\n\n  NbBaseCalendarComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbBaseCalendarComponent,\n    selectors: [[\"nb-base-calendar\"]],\n    hostVars: 6,\n    hostBindings: function NbBaseCalendarComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"has-navigation\", ctx.showNavigation)(\"has-week-number\", ctx.showWeekNumber)(\"size-large\", ctx.large);\n      }\n    },\n    inputs: {\n      boundingMonth: \"boundingMonth\",\n      activeViewMode: [\"startView\", \"activeViewMode\"],\n      size: \"size\",\n      showNavigation: \"showNavigation\",\n      showWeekNumber: \"showWeekNumber\",\n      visibleDate: \"visibleDate\",\n      min: \"min\",\n      max: \"max\",\n      filter: \"filter\",\n      dayCellComponent: \"dayCellComponent\",\n      monthCellComponent: \"monthCellComponent\",\n      yearCellComponent: \"yearCellComponent\",\n      date: \"date\",\n      weekNumberSymbol: \"weekNumberSymbol\"\n    },\n    outputs: {\n      dateChange: \"dateChange\"\n    },\n    decls: 6,\n    vars: 5,\n    consts: [[\"class\", \"calendar-navigation\", 4, \"ngIf\"], [3, \"ngSwitch\"], [3, \"boundingMonths\", \"cellComponent\", \"min\", \"max\", \"filter\", \"visibleDate\", \"size\", \"date\", \"showWeekNumber\", \"weekNumberSymbol\", \"dateChange\", 4, \"ngSwitchCase\"], [3, \"cellComponent\", \"date\", \"min\", \"max\", \"filter\", \"size\", \"year\", \"yearChange\", 4, \"ngSwitchCase\"], [3, \"cellComponent\", \"min\", \"max\", \"filter\", \"size\", \"month\", \"date\", \"monthChange\", 4, \"ngSwitchCase\"], [1, \"calendar-navigation\"], [3, \"date\", \"viewMode\", \"changeMode\"], [3, \"prev\", \"next\"], [3, \"boundingMonths\", \"cellComponent\", \"min\", \"max\", \"filter\", \"visibleDate\", \"size\", \"date\", \"showWeekNumber\", \"weekNumberSymbol\", \"dateChange\"], [3, \"cellComponent\", \"date\", \"min\", \"max\", \"filter\", \"size\", \"year\", \"yearChange\"], [3, \"cellComponent\", \"min\", \"max\", \"filter\", \"size\", \"month\", \"date\", \"monthChange\"]],\n    template: function NbBaseCalendarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"nb-card\");\n        ɵngcc0.ɵɵtemplate(1, NbBaseCalendarComponent_nb_card_header_1_Template, 3, 2, \"nb-card-header\", 0);\n        ɵngcc0.ɵɵelementStart(2, \"nb-card-body\", 1);\n        ɵngcc0.ɵɵtemplate(3, NbBaseCalendarComponent_nb_calendar_day_picker_3_Template, 1, 10, \"nb-calendar-day-picker\", 2);\n        ɵngcc0.ɵɵtemplate(4, NbBaseCalendarComponent_nb_calendar_year_picker_4_Template, 1, 7, \"nb-calendar-year-picker\", 3);\n        ɵngcc0.ɵɵtemplate(5, NbBaseCalendarComponent_nb_calendar_month_picker_5_Template, 1, 7, \"nb-calendar-month-picker\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showNavigation);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.activeViewMode);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", ctx.ViewMode.DATE);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", ctx.ViewMode.YEAR);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", ctx.ViewMode.MONTH);\n      }\n    },\n    directives: [NbCardComponent, ɵngcc2.NgIf, NbCardBodyComponent, ɵngcc2.NgSwitch, ɵngcc2.NgSwitchCase, NbCardHeaderComponent, NbCalendarViewModeComponent, NbCalendarPageableNavigationComponent, NbCalendarDayPickerComponent, NbCalendarYearPickerComponent, NbCalendarMonthPickerComponent],\n    encapsulation: 2\n  });\n  return NbBaseCalendarComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nlet NbBaseCalendarModule = /*#__PURE__*/(() => {\n  class NbBaseCalendarModule {}\n\n  NbBaseCalendarModule.ɵfac = function NbBaseCalendarModule_Factory(t) {\n    return new (t || NbBaseCalendarModule)();\n  };\n\n  NbBaseCalendarModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NbBaseCalendarModule\n  });\n  NbBaseCalendarModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[NbCalendarKitModule, NbSharedModule, NbCardModule]]\n  });\n  return NbBaseCalendarModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NbBaseCalendarModule, {\n    declarations: [NbBaseCalendarComponent],\n    imports: [NbCalendarKitModule, NbSharedModule, NbCardModule],\n    exports: [NbBaseCalendarComponent]\n  });\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nlet NbCalendarModule = /*#__PURE__*/(() => {\n  class NbCalendarModule {}\n\n  NbCalendarModule.ɵfac = function NbCalendarModule_Factory(t) {\n    return new (t || NbCalendarModule)();\n  };\n\n  NbCalendarModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NbCalendarModule\n  });\n  NbCalendarModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[NbBaseCalendarModule]]\n  });\n  return NbCalendarModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NbCalendarModule, {\n    declarations: [NbCalendarComponent],\n    imports: [NbBaseCalendarModule],\n    exports: [NbCalendarComponent]\n  });\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nclass NbBaseCalendarRangeCell {\n  get hasRange() {\n    return !!(this.selectedValue && this.selectedValue.start && this.selectedValue.end);\n  }\n\n}\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nlet NbCalendarRangeDayCellComponent = /*#__PURE__*/(() => {\n  class NbCalendarRangeDayCellComponent extends NbBaseCalendarRangeCell {\n    constructor(dateService) {\n      super();\n      this.dateService = dateService;\n      this.size = NbCalendarSize.MEDIUM;\n      this.select = new EventEmitter(true);\n      this.rangeCellClass = true;\n      this.dayCellClass = true;\n    }\n\n    get inRange() {\n      if (this.date && this.hasRange) {\n        return this.isInRange(this.date, this.selectedValue);\n      }\n\n      return false;\n    }\n\n    get start() {\n      return this.date && this.hasRange && this.dateService.isSameDay(this.date, this.selectedValue.start);\n    }\n\n    get end() {\n      return this.date && this.hasRange && this.dateService.isSameDay(this.date, this.selectedValue.end);\n    }\n\n    get today() {\n      return this.date && this.dateService.isSameDay(this.date, this.dateService.today());\n    }\n\n    get boundingMonth() {\n      return !this.dateService.isSameMonthSafe(this.date, this.visibleDate);\n    }\n\n    get selected() {\n      if (this.inRange) {\n        return true;\n      }\n\n      if (this.selectedValue) {\n        return this.dateService.isSameDaySafe(this.date, this.selectedValue.start);\n      }\n    }\n\n    get empty() {\n      return !this.date;\n    }\n\n    get disabled() {\n      return this.smallerThanMin() || this.greaterThanMax() || this.dontFitFilter();\n    }\n\n    get isLarge() {\n      return this.size === NbCalendarSize.LARGE;\n    }\n\n    get day() {\n      return this.date && this.dateService.getDate(this.date);\n    }\n\n    onClick() {\n      if (this.disabled || this.empty) {\n        return;\n      }\n\n      this.select.emit(this.date);\n    }\n\n    smallerThanMin() {\n      return this.date && this.min && this.dateService.compareDates(this.date, this.min) < 0;\n    }\n\n    greaterThanMax() {\n      return this.date && this.max && this.dateService.compareDates(this.date, this.max) > 0;\n    }\n\n    dontFitFilter() {\n      return this.date && this.filter && !this.filter(this.date);\n    }\n\n    isInRange(date, {\n      start,\n      end\n    }) {\n      const isGreaterThanStart = this.dateService.compareDates(this.date, start) >= 0;\n      const isLessThanEnd = this.dateService.compareDates(this.date, end) <= 0;\n      return isGreaterThanStart && isLessThanEnd;\n    }\n\n  }\n\n  NbCalendarRangeDayCellComponent.ɵfac = function NbCalendarRangeDayCellComponent_Factory(t) {\n    return new (t || NbCalendarRangeDayCellComponent)(ɵngcc0.ɵɵdirectiveInject(NbDateService));\n  };\n\n  NbCalendarRangeDayCellComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbCalendarRangeDayCellComponent,\n    selectors: [[\"nb-calendar-range-day-cell\"]],\n    hostVars: 22,\n    hostBindings: function NbCalendarRangeDayCellComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function NbCalendarRangeDayCellComponent_click_HostBindingHandler() {\n          return ctx.onClick();\n        });\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"range-cell\", ctx.rangeCellClass)(\"day-cell\", ctx.dayCellClass)(\"in-range\", ctx.inRange)(\"start\", ctx.start)(\"end\", ctx.end)(\"today\", ctx.today)(\"bounding-month\", ctx.boundingMonth)(\"selected\", ctx.selected)(\"empty\", ctx.empty)(\"disabled\", ctx.disabled)(\"size-large\", ctx.isLarge);\n      }\n    },\n    inputs: {\n      size: \"size\",\n      date: \"date\",\n      selectedValue: \"selectedValue\",\n      visibleDate: \"visibleDate\",\n      min: \"min\",\n      max: \"max\",\n      filter: \"filter\"\n    },\n    outputs: {\n      select: \"select\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 2,\n    vars: 1,\n    consts: [[1, \"cell-content\"]],\n    template: function NbCalendarRangeDayCellComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵtext(1);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate(ctx.day);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return NbCalendarRangeDayCellComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nlet NbCalendarRangeYearCellComponent = /*#__PURE__*/(() => {\n  class NbCalendarRangeYearCellComponent extends NbBaseCalendarRangeCell {\n    constructor(dateService) {\n      super();\n      this.dateService = dateService;\n      this.size = NbCalendarSize.MEDIUM;\n      this.select = new EventEmitter(true);\n      this.yearCellClass = true;\n      this.rangeCellClass = true;\n    }\n\n    get inRange() {\n      return this.hasRange && this.isInRange(this.date, this.selectedValue);\n    }\n\n    get rangeStart() {\n      return this.hasRange && this.dateService.isSameYear(this.date, this.selectedValue.start);\n    }\n\n    get rangeEnd() {\n      return this.hasRange && this.dateService.isSameYear(this.date, this.selectedValue.end);\n    }\n\n    get selected() {\n      if (this.inRange) {\n        return true;\n      }\n\n      if (this.selectedValue) {\n        return this.dateService.isSameYearSafe(this.date, this.selectedValue.start);\n      }\n    }\n\n    get today() {\n      return this.dateService.isSameYear(this.date, this.dateService.today());\n    }\n\n    get disabled() {\n      return this.smallerThanMin() || this.greaterThanMax();\n    }\n\n    get isLarge() {\n      return this.size === NbCalendarSize.LARGE;\n    }\n\n    get year() {\n      return this.dateService.getYear(this.date);\n    }\n\n    onClick() {\n      if (this.disabled) {\n        return;\n      }\n\n      this.select.emit(this.date);\n    }\n\n    smallerThanMin() {\n      return this.date && this.min && this.dateService.compareDates(this.yearEnd(), this.min) < 0;\n    }\n\n    greaterThanMax() {\n      return this.date && this.max && this.dateService.compareDates(this.yearStart(), this.max) > 0;\n    }\n\n    yearStart() {\n      return this.dateService.getYearStart(this.date);\n    }\n\n    yearEnd() {\n      return this.dateService.getYearEnd(this.date);\n    }\n\n    isInRange(date, {\n      start,\n      end\n    }) {\n      if (start && end) {\n        const cellYear = this.dateService.getYear(date);\n        const startYear = this.dateService.getYear(start);\n        const endYear = this.dateService.getYear(end);\n        return cellYear >= startYear && cellYear <= endYear;\n      }\n\n      return this.dateService.isSameYear(date, start);\n    }\n\n  }\n\n  NbCalendarRangeYearCellComponent.ɵfac = function NbCalendarRangeYearCellComponent_Factory(t) {\n    return new (t || NbCalendarRangeYearCellComponent)(ɵngcc0.ɵɵdirectiveInject(NbDateService));\n  };\n\n  NbCalendarRangeYearCellComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbCalendarRangeYearCellComponent,\n    selectors: [[\"nb-calendar-range-year-cell\"]],\n    hostVars: 18,\n    hostBindings: function NbCalendarRangeYearCellComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function NbCalendarRangeYearCellComponent_click_HostBindingHandler() {\n          return ctx.onClick();\n        });\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"year-cell\", ctx.yearCellClass)(\"range-cell\", ctx.rangeCellClass)(\"in-range\", ctx.inRange)(\"start\", ctx.rangeStart)(\"end\", ctx.rangeEnd)(\"selected\", ctx.selected)(\"today\", ctx.today)(\"disabled\", ctx.disabled)(\"size-large\", ctx.isLarge);\n      }\n    },\n    inputs: {\n      size: \"size\",\n      date: \"date\",\n      min: \"min\",\n      max: \"max\",\n      selectedValue: \"selectedValue\"\n    },\n    outputs: {\n      select: \"select\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 2,\n    vars: 1,\n    consts: [[1, \"cell-content\"]],\n    template: function NbCalendarRangeYearCellComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵtext(1);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx.year, \" \");\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return NbCalendarRangeYearCellComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nlet NbCalendarRangeMonthCellComponent = /*#__PURE__*/(() => {\n  class NbCalendarRangeMonthCellComponent extends NbBaseCalendarRangeCell {\n    constructor(dateService) {\n      super();\n      this.dateService = dateService;\n      this.size = NbCalendarSize.MEDIUM;\n      this.select = new EventEmitter(true);\n      this.monthCellClass = true;\n      this.rangeCellClass = true;\n    }\n\n    get month() {\n      return this.dateService.getMonthName(this.date);\n    }\n\n    get selected() {\n      if (this.inRange) {\n        return true;\n      }\n\n      if (this.selectedValue) {\n        return this.dateService.isSameMonthSafe(this.date, this.selectedValue.start);\n      }\n    }\n\n    get inRange() {\n      if (this.hasRange) {\n        return this.isInRage(this.date, this.selectedValue);\n      }\n    }\n\n    get rangeStart() {\n      if (this.hasRange) {\n        return this.dateService.isSameMonth(this.date, this.selectedValue.start);\n      }\n    }\n\n    get rangeEnd() {\n      if (this.hasRange) {\n        return this.dateService.isSameMonth(this.date, this.selectedValue.end);\n      }\n    }\n\n    get today() {\n      return this.dateService.isSameMonthSafe(this.date, this.dateService.today());\n    }\n\n    get disabled() {\n      return this.smallerThanMin() || this.greaterThanMax();\n    }\n\n    get isLarge() {\n      return this.size === NbCalendarSize.LARGE;\n    }\n\n    onClick() {\n      if (this.disabled) {\n        return;\n      }\n\n      this.select.emit(this.date);\n    }\n\n    smallerThanMin() {\n      return this.date && this.min && this.dateService.compareDates(this.monthEnd(), this.min) < 0;\n    }\n\n    greaterThanMax() {\n      return this.date && this.max && this.dateService.compareDates(this.monthStart(), this.max) > 0;\n    }\n\n    monthStart() {\n      return this.dateService.getMonthStart(this.date);\n    }\n\n    monthEnd() {\n      return this.dateService.getMonthEnd(this.date);\n    }\n\n    isInRage(date, range) {\n      if (range.start && range.end) {\n        const cellDate = this.dateService.getMonthStart(date);\n        const start = this.dateService.getMonthStart(range.start);\n        const end = this.dateService.getMonthStart(range.end);\n        const isGreaterThanStart = this.dateService.compareDates(cellDate, start) >= 0;\n        const isLessThanEnd = this.dateService.compareDates(cellDate, end) <= 0;\n        return isGreaterThanStart && isLessThanEnd;\n      }\n\n      return this.dateService.isSameMonth(date, range.start);\n    }\n\n  }\n\n  NbCalendarRangeMonthCellComponent.ɵfac = function NbCalendarRangeMonthCellComponent_Factory(t) {\n    return new (t || NbCalendarRangeMonthCellComponent)(ɵngcc0.ɵɵdirectiveInject(NbDateService));\n  };\n\n  NbCalendarRangeMonthCellComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbCalendarRangeMonthCellComponent,\n    selectors: [[\"nb-calendar-range-month-cell\"]],\n    hostVars: 18,\n    hostBindings: function NbCalendarRangeMonthCellComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function NbCalendarRangeMonthCellComponent_click_HostBindingHandler() {\n          return ctx.onClick();\n        });\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"month-cell\", ctx.monthCellClass)(\"range-cell\", ctx.rangeCellClass)(\"selected\", ctx.selected)(\"in-range\", ctx.inRange)(\"start\", ctx.rangeStart)(\"end\", ctx.rangeEnd)(\"today\", ctx.today)(\"disabled\", ctx.disabled)(\"size-large\", ctx.isLarge);\n      }\n    },\n    inputs: {\n      size: \"size\",\n      date: \"date\",\n      visibleDate: \"visibleDate\",\n      selectedValue: \"selectedValue\",\n      min: \"min\",\n      max: \"max\"\n    },\n    outputs: {\n      select: \"select\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 2,\n    vars: 1,\n    consts: [[1, \"cell-content\"]],\n    template: function NbCalendarRangeMonthCellComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵtext(1);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx.month, \" \");\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return NbCalendarRangeMonthCellComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * CalendarRange component provides a capability to choose a date range.\n *\n * ```html\n * <nb-calendar [(date)]=\"date\"></nb-calendar>\n * <nb-calendar [date]=\"date\" (dateChange)=\"handleDateChange($event)\"></nb-calendar>\n * ```\n *\n * Basic usage example\n * @stacked-example(Range, calendar/calendar-range-showcase.component)\n *\n * ### Installation\n *\n * Import `NbCalendarRangeModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbCalendarRangeModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n *\n * ### Usage\n *\n * CalendarRange component supports all of the Calendar component customization properties. More defails can be found\n * in the [Calendar component docs](docs/components/calendar).\n *\n * @styles\n *\n * calendar-width:\n * calendar-background-color:\n * calendar-border-color:\n * calendar-border-style:\n * calendar-border-width:\n * calendar-border-radius:\n * calendar-text-color:\n * calendar-text-font-family:\n * calendar-text-font-size:\n * calendar-text-font-weight:\n * calendar-text-line-height:\n * calendar-picker-padding-top:\n * calendar-picker-padding-bottom:\n * calendar-picker-padding-start:\n * calendar-picker-padding-end:\n * calendar-navigation-text-color:\n * calendar-navigation-text-font-family:\n * calendar-navigation-title-text-font-size:\n * calendar-navigation-title-text-font-weight:\n * calendar-navigation-title-text-line-height:\n * calendar-navigation-padding:\n * calendar-cell-inactive-text-color:\n * calendar-cell-disabled-text-color:\n * calendar-cell-hover-background-color:\n * calendar-cell-hover-border-color:\n * calendar-cell-hover-text-color:\n * calendar-cell-hover-text-font-size:\n * calendar-cell-hover-text-font-weight:\n * calendar-cell-hover-text-line-height:\n * calendar-cell-active-background-color:\n * calendar-cell-active-border-color:\n * calendar-cell-active-text-color:\n * calendar-cell-active-text-font-size:\n * calendar-cell-active-text-font-weight:\n * calendar-cell-active-text-line-height:\n * calendar-cell-today-background-color:\n * calendar-cell-today-border-color:\n * calendar-cell-today-text-color:\n * calendar-cell-today-text-font-size:\n * calendar-cell-today-text-font-weight:\n * calendar-cell-today-text-line-height:\n * calendar-cell-today-hover-background-color:\n * calendar-cell-today-hover-border-color:\n * calendar-cell-today-active-background-color:\n * calendar-cell-today-active-border-color:\n * calendar-cell-today-disabled-border-color:\n * calendar-cell-today-selected-background-color:\n * calendar-cell-today-selected-border-color:\n * calendar-cell-today-selected-text-color:\n * calendar-cell-today-selected-hover-background-color:\n * calendar-cell-today-selected-hover-border-color:\n * calendar-cell-today-selected-active-background-color:\n * calendar-cell-today-selected-active-border-color:\n * calendar-cell-today-in-range-background-color:\n * calendar-cell-today-in-range-border-color:\n * calendar-cell-today-in-range-text-color:\n * calendar-cell-today-in-range-hover-background-color:\n * calendar-cell-today-in-range-hover-border-color:\n * calendar-cell-today-in-range-active-background-color:\n * calendar-cell-today-in-range-active-border-color:\n * calendar-cell-selected-background-color:\n * calendar-cell-selected-border-color:\n * calendar-cell-selected-text-color:\n * calendar-cell-selected-text-font-size:\n * calendar-cell-selected-text-font-weight:\n * calendar-cell-selected-text-line-height:\n * calendar-cell-selected-hover-background-color:\n * calendar-cell-selected-hover-border-color:\n * calendar-cell-selected-active-background-color:\n * calendar-cell-selected-active-border-color:\n * calendar-day-cell-width:\n * calendar-day-cell-height:\n * calendar-month-cell-width:\n * calendar-month-cell-height:\n * calendar-year-cell-width:\n * calendar-year-cell-height:\n * calendar-weekday-background:\n * calendar-weekday-divider-color:\n * calendar-weekday-divider-width:\n * calendar-weekday-text-color:\n * calendar-weekday-text-font-size:\n * calendar-weekday-text-font-weight:\n * calendar-weekday-text-line-height:\n * calendar-weekday-holiday-text-color:\n * calendar-weekday-height:\n * calendar-weekday-width:\n * calendar-weeknumber-background:\n * calendar-weeknumber-divider-color:\n * calendar-weeknumber-divider-width:\n * calendar-weeknumber-text-color:\n * calendar-weeknumber-text-font-size:\n * calendar-weeknumber-text-font-weight:\n * calendar-weeknumber-text-line-height:\n * calendar-weeknumber-height:\n * calendar-weeknumber-width:\n * calendar-large-width:\n * calendar-day-cell-large-width:\n * calendar-day-cell-large-height:\n * calendar-weekday-large-height:\n * calendar-weekday-large-width:\n * calendar-weeknumber-large-height:\n * calendar-weeknumber-large-width:\n * calendar-month-cell-large-width:\n * calendar-month-cell-large-height:\n * calendar-year-cell-large-width:\n * calendar-year-cell-large-height:\n * */\n\n\nlet NbCalendarRangeComponent = /*#__PURE__*/(() => {\n  class NbCalendarRangeComponent {\n    constructor(dateService) {\n      this.dateService = dateService;\n      /**\n       * Defines if we should render previous and next months\n       * in the current month view.\n       * */\n\n      this.boundingMonth = true;\n      /**\n       * Defines starting view for the calendar.\n       * */\n\n      this.startView = NbCalendarViewMode.DATE;\n      this.dayCellComponent = NbCalendarRangeDayCellComponent;\n      this.monthCellComponent = NbCalendarRangeMonthCellComponent;\n      this.yearCellComponent = NbCalendarRangeYearCellComponent;\n      /**\n       * Size of the calendar and entire components.\n       * Can be 'medium' which is default or 'large'.\n       * */\n\n      this.size = NbCalendarSize.MEDIUM;\n      /**\n       * Determines should we show calendars navigation or not.\n       * */\n\n      this.showNavigation = true;\n      this._showWeekNumber = false;\n      /**\n       * Sets symbol used as a header for week numbers column\n       * */\n\n      this.weekNumberSymbol = '#';\n      /**\n       * Emits range when start selected and emits again when end selected.\n       * */\n\n      this.rangeChange = new EventEmitter();\n    }\n    /**\n     * Custom day cell component. Have to implement `NbCalendarCell` interface.\n     * */\n\n\n    set _cellComponent(cellComponent) {\n      if (cellComponent) {\n        this.dayCellComponent = cellComponent;\n      }\n    }\n    /**\n     * Custom month cell component. Have to implement `NbCalendarCell` interface.\n     * */\n\n\n    set _monthCellComponent(cellComponent) {\n      if (cellComponent) {\n        this.monthCellComponent = cellComponent;\n      }\n    }\n    /**\n     * Custom year cell component. Have to implement `NbCalendarCell` interface.\n     * */\n\n\n    set _yearCellComponent(cellComponent) {\n      if (cellComponent) {\n        this.yearCellComponent = cellComponent;\n      }\n    }\n    /**\n     * Determines should we show week numbers column.\n     * False by default.\n     * */\n\n\n    get showWeekNumber() {\n      return this._showWeekNumber;\n    }\n\n    set showWeekNumber(value) {\n      this._showWeekNumber = convertToBoolProperty(value);\n    }\n\n    onChange(date) {\n      this.initDateIfNull();\n      this.handleSelected(date);\n    }\n\n    initDateIfNull() {\n      if (!this.range) {\n        this.range = {\n          start: null,\n          end: null\n        };\n      }\n    }\n\n    handleSelected(date) {\n      if (this.selectionStarted()) {\n        this.selectEnd(date);\n      } else {\n        this.selectStart(date);\n      }\n    }\n\n    selectionStarted() {\n      const {\n        start,\n        end\n      } = this.range;\n      return start && !end;\n    }\n\n    selectStart(start) {\n      this.selectRange({\n        start\n      });\n    }\n\n    selectEnd(date) {\n      const {\n        start\n      } = this.range;\n\n      if (this.dateService.compareDates(date, start) > 0) {\n        this.selectRange({\n          start,\n          end: date\n        });\n      } else {\n        this.selectRange({\n          start: date,\n          end: start\n        });\n      }\n    }\n\n    selectRange(range) {\n      this.range = range;\n      this.rangeChange.emit(range);\n    }\n\n  }\n\n  NbCalendarRangeComponent.ɵfac = function NbCalendarRangeComponent_Factory(t) {\n    return new (t || NbCalendarRangeComponent)(ɵngcc0.ɵɵdirectiveInject(NbDateService));\n  };\n\n  NbCalendarRangeComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbCalendarRangeComponent,\n    selectors: [[\"nb-calendar-range\"]],\n    inputs: {\n      boundingMonth: \"boundingMonth\",\n      startView: \"startView\",\n      monthCellComponent: \"monthCellComponent\",\n      size: \"size\",\n      showNavigation: \"showNavigation\",\n      weekNumberSymbol: \"weekNumberSymbol\",\n      _cellComponent: [\"dayCellComponent\", \"_cellComponent\"],\n      _monthCellComponent: [\"monthCellComponent\", \"_monthCellComponent\"],\n      _yearCellComponent: [\"yearCellComponent\", \"_yearCellComponent\"],\n      showWeekNumber: \"showWeekNumber\",\n      range: \"range\",\n      min: \"min\",\n      max: \"max\",\n      filter: \"filter\",\n      visibleDate: \"visibleDate\"\n    },\n    outputs: {\n      rangeChange: \"rangeChange\"\n    },\n    decls: 1,\n    vars: 14,\n    consts: [[3, \"date\", \"min\", \"max\", \"filter\", \"startView\", \"boundingMonth\", \"dayCellComponent\", \"monthCellComponent\", \"yearCellComponent\", \"visibleDate\", \"showNavigation\", \"size\", \"showWeekNumber\", \"weekNumberSymbol\", \"dateChange\"]],\n    template: function NbCalendarRangeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"nb-base-calendar\", 0);\n        ɵngcc0.ɵɵlistener(\"dateChange\", function NbCalendarRangeComponent_Template_nb_base_calendar_dateChange_0_listener($event) {\n          return ctx.onChange($event);\n        });\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"date\", ctx.range)(\"min\", ctx.min)(\"max\", ctx.max)(\"filter\", ctx.filter)(\"startView\", ctx.startView)(\"boundingMonth\", ctx.boundingMonth)(\"dayCellComponent\", ctx.dayCellComponent)(\"monthCellComponent\", ctx.monthCellComponent)(\"yearCellComponent\", ctx.yearCellComponent)(\"visibleDate\", ctx.visibleDate)(\"showNavigation\", ctx.showNavigation)(\"size\", ctx.size)(\"showWeekNumber\", ctx.showWeekNumber)(\"weekNumberSymbol\", ctx.weekNumberSymbol);\n      }\n    },\n    directives: [NbBaseCalendarComponent],\n    encapsulation: 2\n  });\n  return NbCalendarRangeComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nlet NbCalendarRangeModule = /*#__PURE__*/(() => {\n  class NbCalendarRangeModule {}\n\n  NbCalendarRangeModule.ɵfac = function NbCalendarRangeModule_Factory(t) {\n    return new (t || NbCalendarRangeModule)();\n  };\n\n  NbCalendarRangeModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NbCalendarRangeModule\n  });\n  NbCalendarRangeModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[NbBaseCalendarModule]]\n  });\n  return NbCalendarRangeModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NbCalendarRangeModule, {\n    declarations: [NbCalendarRangeComponent, NbCalendarRangeDayCellComponent, NbCalendarRangeYearCellComponent, NbCalendarRangeMonthCellComponent],\n    imports: [NbBaseCalendarModule],\n    exports: [NbCalendarRangeComponent]\n  });\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nconst NB_TIME_PICKER_CONFIG = new InjectionToken('NB_TIME_PICKER_CONFIG');\nconst NB_DEFAULT_TIMEPICKER_LOCALIZATION_CONFIG = {\n  hoursText: 'Hr',\n  minutesText: 'Min',\n  secondsText: 'Sec',\n  ampmText: 'Am/Pm'\n};\n/**\n * The TimePicker components itself.\n * Provides a proxy to `TimePicker` options as well as custom picker options.\n */\n\nlet NbTimePickerComponent = /*#__PURE__*/(() => {\n  class NbTimePickerComponent {\n    constructor(config, platformService, locale, cd, calendarTimeModelService, dateService) {\n      this.config = config;\n      this.platformService = platformService;\n      this.cd = cd;\n      this.calendarTimeModelService = calendarTimeModelService;\n      this.dateService = dateService;\n      this.blur$ = new Subject();\n      this.dayPeriodColumnOptions = [\"AM\"\n      /* AM */\n      , \"PM\"\n      /* PM */\n      ];\n      this.isAM = true;\n      /**\n       * In timepicker value should be always true\n       * In calendar-with-time.component  should set to false\n       * @docs-private\n       */\n\n      this.showFooter = true;\n      /**\n       * Emits date when selected.\n       * */\n\n      this.onSelectTime = new EventEmitter();\n      this.initFromConfig(this.config);\n    }\n    /**\n     * Emits when timepicker looses focus.\n     */\n\n\n    get blur() {\n      return this.blur$.asObservable();\n    }\n    /**\n     * Defines time format string.\n     * */\n\n\n    get timeFormat() {\n      return this._timeFormat;\n    }\n\n    set timeFormat(timeFormat) {\n      this._timeFormat = timeFormat;\n    }\n    /**\n     * Defines 12 hours format .\n     * */\n\n\n    get twelveHoursFormat() {\n      return this._twelveHoursFormat;\n    }\n\n    set twelveHoursFormat(value) {\n      this._twelveHoursFormat = convertToBoolProperty(value);\n    }\n\n    /**\n     * Show seconds in timepicker.\n     * Ignored when singleColumn is true\n     * */\n    get withSeconds() {\n      return this._withSeconds;\n    }\n\n    set withSeconds(value) {\n      this._withSeconds = convertToBoolProperty(value);\n    }\n\n    /**\n     * Show timepicker values in one column with 60 minutes step by default.\n     * */\n    get singleColumn() {\n      return this._singleColumn;\n    }\n\n    set singleColumn(value) {\n      this._singleColumn = convertToBoolProperty(value);\n    }\n    /**\n     * Defines minutes offset for options, when timepicker is in single column mode.\n     * By default it’s 60 minutes: '12:00, 13:00: 14:00, 15:00...'\n     * */\n\n\n    set step(step) {\n      this._step = step;\n    }\n\n    get step() {\n      return this._step;\n    }\n    /**\n     * Date which will be rendered as selected.\n     * */\n\n\n    set date(date) {\n      this._date = date;\n      this.isAM = this.dateService.getDayPeriod(this.date) === \"AM\"\n      /* AM */\n      ;\n      this.buildColumnOptions();\n      this.cd.markForCheck();\n    }\n\n    get date() {\n      return this._date;\n    }\n\n    ngOnInit() {\n      this.timeFormat = this.setupTimeFormat();\n    }\n\n    ngOnChanges({\n      step,\n      twelveHoursFormat,\n      withSeconds,\n      singleColumn\n    }) {\n      this.timeFormat = this.setupTimeFormat();\n      const isConfigChanged = step || twelveHoursFormat || withSeconds || singleColumn;\n\n      if (isConfigChanged || !this.fullTimeOptions) {\n        this.buildColumnOptions();\n      }\n    }\n\n    setHost(hostRef) {\n      this.hostRef = hostRef;\n    }\n\n    attach(hostRef) {\n      this.hostRef = hostRef;\n    }\n\n    setCurrentTime() {\n      this.date = this.dateService.today();\n      this.onSelectTime.emit({\n        time: this.date,\n        save: true\n      });\n    }\n\n    setHour(value) {\n      this.updateValue(this.dateService.setHours(this.date, value));\n    }\n\n    setMinute(value) {\n      this.updateValue(this.dateService.setMinutes(this.date, value));\n    }\n\n    setSecond(value) {\n      this.updateValue(this.dateService.setSeconds(this.date, value));\n    }\n\n    selectFullTime(value) {\n      this.updateValue(value);\n    }\n\n    changeDayPeriod(dayPeriodToSet) {\n      if (this.dateService.getDayPeriod(this.date) === dayPeriodToSet) {\n        return;\n      } // Subtract hours when switching to AM (before midday, 0-11 in 24-hour) from PM (after midday, 12-24 in 24-hour),\n      // otherwise add hours because switching to PM from AM.\n\n\n      const direction = dayPeriodToSet === \"AM\"\n      /* AM */\n      ? -1 : 1;\n      const increment = direction * this.dateService.HOURS_IN_DAY_PERIOD;\n      this.updateValue(this.dateService.addHours(this.date, increment));\n    }\n\n    updateValue(date) {\n      this.onSelectTime.emit({\n        time: date\n      });\n    }\n\n    saveValue() {\n      this.onSelectTime.emit({\n        time: this.date,\n        save: true\n      });\n    }\n\n    trackByTimeValues(index, item) {\n      return item.value;\n    }\n\n    trackBySingleColumnValue(index, item) {\n      return this.dateService.valueOf(item);\n    }\n\n    trackByDayPeriod(index, item) {\n      return item;\n    }\n\n    showSeconds() {\n      return this.withSeconds && !this.singleColumn;\n    }\n\n    isSelectedHour(val) {\n      if (this.date) {\n        return this.dateService.getHours(this.date) === val;\n      }\n\n      return false;\n    }\n\n    isSelectedMinute(val) {\n      if (this.date) {\n        return this.dateService.getMinutes(this.date) === val;\n      }\n\n      return false;\n    }\n\n    isSelectedSecond(val) {\n      if (this.date) {\n        return this.dateService.getSeconds(this.date) === val;\n      }\n\n      return false;\n    }\n\n    isSelectedDayPeriod(dayPeriod) {\n      if (this.date) {\n        return dayPeriod === this.dateService.getDayPeriod(this.date);\n      }\n\n      return false;\n    }\n\n    getFullTimeString(item) {\n      return this.dateService.format(item, this.timeFormat).toUpperCase();\n    }\n\n    isSelectedFullTimeValue(value) {\n      if (this.date) {\n        return this.dateService.isSameHourAndMinute(value, this.date);\n      }\n\n      return false;\n    }\n\n    buildColumnOptions() {\n      this.timeFormat = this.setupTimeFormat();\n      this.fullTimeOptions = this.singleColumn ? this.calendarTimeModelService.getHoursRange(this.step) : [];\n      this.hoursColumnOptions = this.generateHours();\n      this.minutesColumnOptions = this.generateMinutesOrSeconds();\n      this.secondsColumnOptions = this.withSeconds ? this.generateMinutesOrSeconds() : [];\n    }\n    /**\n     * @docs-private\n     */\n\n\n    isFirefox() {\n      return this.platformService.FIREFOX;\n    }\n\n    generateHours() {\n      if (!this.twelveHoursFormat) {\n        return range(24, v => {\n          return {\n            value: v,\n            text: this.calendarTimeModelService.paddToTwoSymbols(v)\n          };\n        });\n      }\n\n      if (this.isAM) {\n        return range(12, v => {\n          const text = v === 0 ? 12 : v;\n          return {\n            value: v,\n            text: this.calendarTimeModelService.paddToTwoSymbols(text)\n          };\n        });\n      }\n\n      return rangeFromTo(12, 24, v => {\n        const text = v === 12 ? 12 : v - 12;\n        return {\n          value: v,\n          text: this.calendarTimeModelService.paddToTwoSymbols(text)\n        };\n      });\n    }\n\n    generateMinutesOrSeconds() {\n      return range(60, v => {\n        return {\n          value: v,\n          text: this.calendarTimeModelService.paddToTwoSymbols(v)\n        };\n      });\n    }\n\n    setupTimeFormat() {\n      if (!this.timeFormat) {\n        return this.config.format || this.buildTimeFormat();\n      }\n\n      return this.timeFormat;\n    }\n    /**\n     * @docs-private\n     */\n\n\n    buildTimeFormat() {\n      if (this.twelveHoursFormat) {\n        return `${this.withSeconds && !this.singleColumn ? this.dateService.getTwelveHoursFormatWithSeconds() : this.dateService.getTwelveHoursFormat()}`;\n      } else {\n        return `${this.withSeconds && !this.singleColumn ? this.dateService.getTwentyFourHoursFormatWithSeconds() : this.dateService.getTwentyFourHoursFormat()}`;\n      }\n    }\n\n    initFromConfig(config) {\n      var _a;\n\n      if (config) {\n        this.twelveHoursFormat = config.twelveHoursFormat;\n      } else {\n        this.twelveHoursFormat = this.dateService.getLocaleTimeFormat().includes('h');\n      }\n\n      const localeConfig = Object.assign(Object.assign({}, NB_DEFAULT_TIMEPICKER_LOCALIZATION_CONFIG), (_a = config === null || config === void 0 ? void 0 : config.localization) !== null && _a !== void 0 ? _a : {});\n      this.hoursText = localeConfig.hoursText;\n      this.minutesText = localeConfig.minutesText;\n      this.secondsText = localeConfig.secondsText;\n      this.ampmText = localeConfig.ampmText;\n    }\n\n  }\n\n  NbTimePickerComponent.ɵfac = function NbTimePickerComponent_Factory(t) {\n    return new (t || NbTimePickerComponent)(ɵngcc0.ɵɵdirectiveInject(NB_TIME_PICKER_CONFIG), ɵngcc0.ɵɵdirectiveInject(NbPlatform), ɵngcc0.ɵɵdirectiveInject(LOCALE_ID), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(NbCalendarTimeModelService), ɵngcc0.ɵɵdirectiveInject(NbDateService));\n  };\n\n  NbTimePickerComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbTimePickerComponent,\n    selectors: [[\"nb-timepicker\"]],\n    viewQuery: function NbTimePickerComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(NbPortalDirective, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.portal = _t.first);\n      }\n    },\n    inputs: {\n      showFooter: \"showFooter\",\n      timeFormat: \"timeFormat\",\n      twelveHoursFormat: \"twelveHoursFormat\",\n      withSeconds: \"withSeconds\",\n      singleColumn: \"singleColumn\",\n      step: \"step\",\n      date: \"date\",\n      hoursText: \"hoursText\",\n      minutesText: \"minutesText\",\n      secondsText: \"secondsText\",\n      ampmText: \"ampmText\",\n      applyButtonText: \"applyButtonText\",\n      currentTimeButtonText: \"currentTimeButtonText\"\n    },\n    outputs: {\n      onSelectTime: \"onSelectTime\"\n    },\n    exportAs: [\"nbTimepicker\"],\n    features: [ɵngcc0.ɵɵNgOnChangesFeature],\n    decls: 1,\n    vars: 0,\n    consts: [[\"class\", \"nb-timepicker-container\", 3, \"supports-scrollbar-theming\", 4, \"nbPortal\"], [1, \"nb-timepicker-container\"], [1, \"column-header\"], [4, \"ngIf\", \"ngIfElse\"], [\"fullTimeHeadersBlock\", \"\"], [1, \"picker-body\"], [\"fullTimeColumnBlock\", \"\"], [\"class\", \"actions-footer\", 4, \"ngIf\"], [1, \"header-cell\"], [\"class\", \"header-cell\", 4, \"ngIf\"], [1, \"values-list\"], [\"class\", \"list-item\", 3, \"selected\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"list-item\"], [3, \"value\", \"selected\", \"select\"], [\"class\", \"values-list\", 4, \"ngIf\"], [\"class\", \"list-item am-pm-item\", 3, \"selected\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"list-item\", \"am-pm-item\"], [1, \"actions-footer\"], [3, \"applyButtonText\", \"currentTimeButtonText\", \"setCurrentTime\", \"saveValue\"]],\n    template: function NbTimePickerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, NbTimePickerComponent_nb_card_0_Template, 10, 7, \"nb-card\", 0);\n      }\n    },\n    directives: function () {\n      return [NbPortalDirective, NbCardComponent, NbCardHeaderComponent, ɵngcc2.NgIf, NbListComponent, ɵngcc2.NgForOf, NbListItemComponent, NbTimePickerCellComponent, NbCardFooterComponent, NbCalendarActionsComponent];\n    },\n    styles: [\".nb-timepicker-container[_ngcontent-%COMP%]{overflow:hidden;margin-bottom:0}.values-list[_ngcontent-%COMP%]{width:100%;overflow:hidden;scroll-snap-type:y proximity}.values-list[_ngcontent-%COMP%]:hover{overflow-y:auto}.list-item[_ngcontent-%COMP%]{border:0;padding:0;cursor:pointer}.picker-body[_ngcontent-%COMP%]{display:flex;width:100%;flex:1 0 0;overflow:hidden}.column-header[_ngcontent-%COMP%]{width:100%;display:flex;justify-content:space-between;padding:0}.header-cell[_ngcontent-%COMP%]{width:100%;display:flex;align-items:center;justify-content:center}.actions-footer[_ngcontent-%COMP%]{width:100%}nb-card-header[_ngcontent-%COMP%], nb-card-footer[_ngcontent-%COMP%]{flex:0 0 auto}\"],\n    changeDetection: 0\n  });\n  return NbTimePickerComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet NbCalendarWithTimeComponent = /*#__PURE__*/(() => {\n  class NbCalendarWithTimeComponent extends NbCalendarComponent {\n    constructor(dateService, cd, calendarTimeModelService) {\n      super();\n      this.dateService = dateService;\n      this.cd = cd;\n      this.calendarTimeModelService = calendarTimeModelService;\n    }\n\n    ngOnInit() {\n      if (!this.date) {\n        this.date = this.calendarTimeModelService.getResetTime();\n      }\n    }\n\n    ngAfterViewInit() {\n      this.portalOutlet.attachTemplatePortal(this.timepicker.portal);\n    }\n\n    onDateValueChange(date) {\n      const hours = this.dateService.getHours(this.date);\n      const minutes = this.dateService.getMinutes(this.date);\n      const seconds = this.dateService.getSeconds(this.date);\n      const milliseconds = this.dateService.getMilliseconds(this.date);\n      let newDate = this.dateService.setHours(date, hours);\n      newDate = this.dateService.setMinutes(newDate, minutes);\n      newDate = this.dateService.setMinutes(newDate, minutes);\n      newDate = this.dateService.setSeconds(newDate, seconds);\n      newDate = this.dateService.setMilliseconds(newDate, milliseconds);\n      this.date = newDate;\n    }\n\n    onTimeChange(selectedTime) {\n      let newDate = this.dateService.clone(this.date);\n      newDate = this.dateService.setHours(newDate, this.dateService.getHours(selectedTime.time));\n      newDate = this.dateService.setMinutes(newDate, this.dateService.getMinutes(selectedTime.time));\n      newDate = this.dateService.setSeconds(newDate, this.dateService.getSeconds(selectedTime.time));\n      newDate = this.dateService.setMilliseconds(newDate, this.dateService.getMilliseconds(selectedTime.time));\n      this.date = newDate;\n    }\n\n    saveValue() {\n      this.dateChange.emit(this.date);\n    }\n\n    saveCurrentTime() {\n      this.dateChange.emit(this.dateService.today());\n    }\n    /**\n     * We don't show seconds with twelve hours format\n     * */\n\n\n    showSeconds() {\n      return this.withSeconds && !this.twelveHoursFormat;\n    }\n\n    isLarge() {\n      return this.size === NbCalendarSize.LARGE;\n    }\n\n  }\n\n  NbCalendarWithTimeComponent.ɵfac = function NbCalendarWithTimeComponent_Factory(t) {\n    return new (t || NbCalendarWithTimeComponent)(ɵngcc0.ɵɵdirectiveInject(NbDateService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(NbCalendarTimeModelService));\n  };\n\n  NbCalendarWithTimeComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbCalendarWithTimeComponent,\n    selectors: [[\"nb-calendar-with-time\"]],\n    viewQuery: function NbCalendarWithTimeComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(NbPortalOutletDirective, 5);\n        ɵngcc0.ɵɵviewQuery(NbTimePickerComponent, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.portalOutlet = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.timepicker = _t.first);\n      }\n    },\n    inputs: {\n      visibleDate: \"visibleDate\",\n      twelveHoursFormat: \"twelveHoursFormat\",\n      withSeconds: \"withSeconds\",\n      singleColumn: \"singleColumn\",\n      step: \"step\",\n      timeFormat: \"timeFormat\",\n      title: \"title\",\n      applyButtonText: \"applyButtonText\",\n      currentTimeButtonText: \"currentTimeButtonText\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 10,\n    vars: 29,\n    consts: [[1, \"calendar-with-time\"], [1, \"picker-body\"], [3, \"boundingMonth\", \"startView\", \"date\", \"min\", \"max\", \"filter\", \"dayCellComponent\", \"monthCellComponent\", \"yearCellComponent\", \"size\", \"visibleDate\", \"showNavigation\", \"showWeekNumber\", \"weekNumberSymbol\", \"dateChange\"], [1, \"timepicker-section\"], [1, \"picker-title\"], [3, \"date\", \"twelveHoursFormat\", \"withSeconds\", \"showFooter\", \"singleColumn\", \"step\", \"onSelectTime\"], [\"nbPortalOutlet\", \"\"], [1, \"picker-footer\"], [3, \"applyButtonText\", \"currentTimeButtonText\", \"setCurrentTime\", \"saveValue\"]],\n    template: function NbCalendarWithTimeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"nb-card\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"nb-card-body\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"nb-base-calendar\", 2);\n        ɵngcc0.ɵɵlistener(\"dateChange\", function NbCalendarWithTimeComponent_Template_nb_base_calendar_dateChange_2_listener($event) {\n          return ctx.onDateValueChange($event);\n        });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3);\n        ɵngcc0.ɵɵelementStart(4, \"div\", 4);\n        ɵngcc0.ɵɵtext(5);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"nb-timepicker\", 5);\n        ɵngcc0.ɵɵlistener(\"onSelectTime\", function NbCalendarWithTimeComponent_Template_nb_timepicker_onSelectTime_6_listener($event) {\n          return ctx.onTimeChange($event);\n        });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementContainer(7, 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(8, \"nb-card-footer\", 7);\n        ɵngcc0.ɵɵelementStart(9, \"nb-calendar-actions\", 8);\n        ɵngcc0.ɵɵlistener(\"setCurrentTime\", function NbCalendarWithTimeComponent_Template_nb_calendar_actions_setCurrentTime_9_listener() {\n          return ctx.saveCurrentTime();\n        })(\"saveValue\", function NbCalendarWithTimeComponent_Template_nb_calendar_actions_saveValue_9_listener() {\n          return ctx.saveValue();\n        });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"boundingMonth\", ctx.boundingMonth)(\"startView\", ctx.startView)(\"date\", ctx.date)(\"min\", ctx.min)(\"max\", ctx.max)(\"filter\", ctx.filter)(\"dayCellComponent\", ctx.dayCellComponent)(\"monthCellComponent\", ctx.monthCellComponent)(\"yearCellComponent\", ctx.yearCellComponent)(\"size\", ctx.size)(\"visibleDate\", ctx.visibleDate)(\"showNavigation\", ctx.showNavigation)(\"showWeekNumber\", ctx.showWeekNumber)(\"weekNumberSymbol\", ctx.weekNumberSymbol);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"size-large\", ctx.isLarge())(\"timepicker-single-column-width\", ctx.singleColumn)(\"timepicker-multiple-column-width\", !ctx.singleColumn);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵtextInterpolate(ctx.title);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"date\", ctx.date)(\"twelveHoursFormat\", ctx.twelveHoursFormat)(\"withSeconds\", ctx.showSeconds())(\"showFooter\", false)(\"singleColumn\", ctx.singleColumn)(\"step\", ctx.step);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"applyButtonText\", ctx.applyButtonText)(\"currentTimeButtonText\", ctx.currentTimeButtonText);\n      }\n    },\n    directives: [NbCardComponent, NbCardBodyComponent, NbBaseCalendarComponent, NbTimePickerComponent, NbPortalOutletDirective, NbCardFooterComponent, NbCalendarActionsComponent],\n    styles: [\"[_nghost-%COMP%]     nb-card.nb-timepicker-container{flex:1 0 0;border-radius:0;width:auto;border-right:0;border-bottom:0}[dir=ltr]   [_nghost-%COMP%]   .picker-footer[_ngcontent-%COMP%]{padding-left:.625rem}[dir=rtl]   [_nghost-%COMP%]   .picker-footer[_ngcontent-%COMP%]{padding-right:.625rem}.picker-body[_ngcontent-%COMP%]{align-items:stretch;display:flex;padding:0}.picker-body[_ngcontent-%COMP%]   nb-base-calendar[_ngcontent-%COMP%]     nb-card{border-radius:0}.calendar-with-time[_ngcontent-%COMP%]{overflow:hidden}.timepicker-section[_ngcontent-%COMP%]{display:flex;flex-direction:column}\"],\n    changeDetection: 0\n  });\n  return NbCalendarWithTimeComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/*\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nlet NbDatepickerContainerComponent = /*#__PURE__*/(() => {\n  class NbDatepickerContainerComponent extends NbPositionedContainerComponent {\n    attach(portal) {\n      return this.overlayContainer.attachComponentPortal(portal);\n    }\n\n  }\n\n  NbDatepickerContainerComponent.ɵfac = /*@__PURE__*/function () {\n    let ɵNbDatepickerContainerComponent_BaseFactory;\n    return function NbDatepickerContainerComponent_Factory(t) {\n      return (ɵNbDatepickerContainerComponent_BaseFactory || (ɵNbDatepickerContainerComponent_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(NbDatepickerContainerComponent)))(t || NbDatepickerContainerComponent);\n    };\n  }();\n\n  NbDatepickerContainerComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbDatepickerContainerComponent,\n    selectors: [[\"nb-datepicker-container\"]],\n    viewQuery: function NbDatepickerContainerComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(NbOverlayContainerComponent, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.overlayContainer = _t.first);\n      }\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 1,\n    vars: 0,\n    template: function NbDatepickerContainerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"nb-overlay-container\");\n      }\n    },\n    directives: [NbOverlayContainerComponent],\n    encapsulation: 2\n  });\n  return NbDatepickerContainerComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/*\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * The `NbDatepickerAdapter` instances provide way how to parse, format and validate\n * different date types.\n * */\n\n\nclass NbDatepickerAdapter {}\n/**\n * Datepicker is an control that can pick any values anyway.\n * It has to be bound to the datepicker directive through nbDatepicker input.\n * */\n\n\nclass NbDatepicker {}\n\nconst NB_DATE_ADAPTER = new InjectionToken('Datepicker Adapter');\nconst NB_DATE_SERVICE_OPTIONS = new InjectionToken('Date service options');\n/**\n * The `NbDatepickerDirective` is form control that gives you ability to select dates and ranges. The datepicker\n * is shown when input receives a `focus` event.\n *\n * ```html\n * <input [nbDatepicker]=\"datepicker\">\n * <nb-datepicker #datepicker></nb-datepicker>\n * ```\n *\n * @stacked-example(Showcase, datepicker/datepicker-showcase.component)\n *\n * ### Installation\n *\n * Import `NbDatepickerModule.forRoot()` to your root module.\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbDatepickerModule.forRoot(),\n *   ],\n * })\n * export class AppModule { }\n * ```\n * And `NbDatepickerModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbDatepickerModule,\n *   ],\n * })\n *\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * If you want to use range selection, you have to use `NbRangepickerComponent` instead:\n *\n * ```html\n * <input [nbDatepicker]=\"rangepicker\">\n * <nb-rangepicker #rangepicker></nb-rangepicker>\n * ```\n *\n * Both range and date pickers support all parameters as calendar, so, check `NbCalendarComponent` for additional\n * info.\n *\n * @stacked-example(Range showcase, datepicker/rangepicker-showcase.component)\n *\n * Datepicker is the form control so it can be bound with angular forms through ngModel and form controls.\n *\n * @stacked-example(Forms, datepicker/datepicker-forms.component)\n *\n * `NbDatepickerDirective` may be validated using `min` and `max` dates passed to the datepicker.\n * And `filter` predicate that receives date object and has to return a boolean value.\n *\n * @stacked-example(Validation, datepicker/datepicker-validation.component)\n *\n * If you need to pick a time along with the date, you can use nb-date-timepicker\n *\n * ```html\n * <input nbInput placeholder=\"Pick Date\" [nbDatepicker]=\"dateTimePicker\">\n * <nb-date-timepicker withSeconds #dateTimePicker></nb-date-timepicker>\n * ```\n * @stacked-example(Date timepicker, datepicker/date-timepicker-showcase.component)\n *\n * A single column picker with options value as time and minute, so users won’t be able to pick\n * hours and minutes individually.\n *\n * @stacked-example(Date timepicker single column, datepicker/date-timepicker-single-column.component)\n\n * The `NbDatepickerComponent` supports date formatting:\n *\n * ```html\n * <input [nbDatepicker]=\"datepicker\">\n * <nb-datepicker #datepicker format=\"MM\\dd\\yyyy\"></nb-datepicker>\n * ```\n * <span id=\"formatting-issue\"></span>\n * ## Formatting Issue\n *\n * By default, datepicker uses angulars `LOCALE_ID` token for localization and `DatePipe` for dates formatting.\n * And native `Date.parse(...)` for dates parsing. But native `Date.parse` function doesn't support formats.\n * To provide custom formatting you have to use one of the following packages:\n *\n * - `@nebular/moment` - provides moment date adapter that uses moment for date objects. This means datepicker than\n * will operate only moment date objects. If you want to use it you have to install it: `npm i @nebular/moment`, and\n * import `NbMomentDateModule` from this package.\n *\n * - `@nebular/date-fns` - adapter for popular date-fns library. This way is preferred if you need only date formatting.\n * Because date-fns is treeshakable, tiny and operates native date objects. If you want to use it you have to\n * install it: `npm i @nebular/date-fns`, and import `NbDateFnsDateModule` from this package.\n *\n * ### NbDateFnsDateModule\n *\n * Format is required when using `NbDateFnsDateModule`. You can set it via `format` input on datepicker component:\n * ```html\n * <nb-datepicker format=\"dd.MM.yyyy\"></nb-datepicker>\n * ```\n * Also format can be set globally with `NbDateFnsDateModule.forRoot({ format: 'dd.MM.yyyy' })` and\n * `NbDateFnsDateModule.forChild({ format: 'dd.MM.yyyy' })` methods.\n *\n * Please note to use some of the formatting tokens you also need to pass\n * `{ useAdditionalWeekYearTokens: true, useAdditionalDayOfYearTokens: true }` to date-fns parse and format functions.\n * You can configure options passed this functions by setting `formatOptions` and\n * `parseOptions` of options object passed to `NbDateFnsDateModule.forRoot` and `NbDateFnsDateModule.forChild` methods.\n * ```ts\n * NbDateFnsDateModule.forRoot({\n *   parseOptions: { useAdditionalWeekYearTokens: true, useAdditionalDayOfYearTokens: true },\n *   formatOptions: { useAdditionalWeekYearTokens: true, useAdditionalDayOfYearTokens: true },\n * })\n * ```\n * Further info on `date-fns` formatting tokens could be found at\n * [date-fns docs](https://date-fns.org/v2.0.0-alpha.27/docs/Unicode-Tokens).\n *\n * You can also use `parseOptions` and `formatOptions` to provide locale.\n * ```ts\n * import { eo } from 'date-fns/locale';\n *\n * @NgModule({\n *   imports: [\n *     NbDateFnsDateModule.forRoot({\n *       parseOptions: { locale: eo },\n *       formatOptions: { locale: eo },\n *     }),\n *   ],\n * })\n * ```\n *\n * @styles\n *\n * datepicker-background-color:\n * datepicker-border-color:\n * datepicker-border-style:\n * datepicker-border-width:\n * datepicker-border-radius:\n * datepicker-shadow:\n * */\n\nlet NbDatepickerDirective = /*#__PURE__*/(() => {\n  class NbDatepickerDirective {\n    constructor(document, datepickerAdapters, hostRef, dateService, changeDetector) {\n      this.document = document;\n      this.datepickerAdapters = datepickerAdapters;\n      this.hostRef = hostRef;\n      this.dateService = dateService;\n      this.changeDetector = changeDetector;\n      this.destroy$ = new Subject();\n      this.isDatepickerReady = false;\n\n      this.onChange = () => {};\n\n      this.onTouched = () => {};\n      /**\n       * Form control validators will be called in validators context, so, we need to bind them.\n       * */\n\n\n      this.validator = Validators.compose([this.parseValidator, this.minValidator, this.maxValidator, this.filterValidator].map(fn => fn.bind(this)));\n      this.subscribeOnInputChange();\n    }\n    /**\n     * Provides datepicker component.\n     * */\n\n\n    set setPicker(picker) {\n      this.picker = picker;\n      this.setupPicker();\n    }\n    /**\n     * Returns html input element.\n     * */\n\n\n    get input() {\n      return this.hostRef.nativeElement;\n    }\n    /**\n     * Returns host input value.\n     * */\n\n\n    get inputValue() {\n      return this.input.value;\n    }\n\n    ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n    /**\n     * Writes value in picker and html input element.\n     * */\n\n\n    writeValue(value) {\n      if (this.isDatepickerReady) {\n        this.writePicker(value);\n        this.writeInput(value);\n      } else {\n        this.queue = value;\n      }\n    }\n\n    registerOnChange(fn) {\n      this.onChange = fn;\n    }\n\n    registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n\n    setDisabledState(isDisabled) {\n      this.input.disabled = isDisabled;\n    }\n    /**\n     * Form control validation based on picker validator config.\n     * */\n\n\n    validate() {\n      return this.validator(null);\n    }\n    /**\n     * Hides picker, focuses the input\n     */\n\n\n    hidePicker() {\n      this.input.focus();\n      this.picker.hide();\n    }\n    /**\n     * Validates that we can parse value correctly.\n     * */\n\n\n    parseValidator() {\n      /**\n       * Date services treat empty string as invalid date.\n       * That's why we're getting invalid formControl in case of empty input which is not required.\n       * */\n      if (this.inputValue === '') {\n        return null;\n      }\n\n      const isValid = this.datepickerAdapter.isValid(this.inputValue, this.picker.format);\n      return isValid ? null : {\n        nbDatepickerParse: {\n          value: this.inputValue\n        }\n      };\n    }\n    /**\n     * Validates passed value is greater than min.\n     * */\n\n\n    minValidator() {\n      const config = this.picker.getValidatorConfig();\n      const date = this.datepickerAdapter.parse(this.inputValue, this.picker.format);\n      return !config.min || !date || this.dateService.compareDates(config.min, date) <= 0 ? null : {\n        nbDatepickerMin: {\n          min: config.min,\n          actual: date\n        }\n      };\n    }\n    /**\n     * Validates passed value is smaller than max.\n     * */\n\n\n    maxValidator() {\n      const config = this.picker.getValidatorConfig();\n      const date = this.datepickerAdapter.parse(this.inputValue, this.picker.format);\n      return !config.max || !date || this.dateService.compareDates(config.max, date) >= 0 ? null : {\n        nbDatepickerMax: {\n          max: config.max,\n          actual: date\n        }\n      };\n    }\n    /**\n     * Validates passed value satisfy the filter.\n     * */\n\n\n    filterValidator() {\n      const config = this.picker.getValidatorConfig();\n      const date = this.datepickerAdapter.parse(this.inputValue, this.picker.format);\n      return !config.filter || !date || config.filter(date) ? null : {\n        nbDatepickerFilter: true\n      };\n    }\n    /**\n     * Chooses datepicker adapter based on passed picker component.\n     * */\n\n\n    chooseDatepickerAdapter() {\n      this.datepickerAdapter = this.datepickerAdapters.find(({\n        picker\n      }) => this.picker instanceof picker);\n\n      if (this.noDatepickerAdapterProvided()) {\n        throw new Error('No datepickerAdapter provided for picker');\n      }\n    }\n    /**\n     * Attaches picker to the host input element and subscribes on value changes.\n     * */\n\n\n    setupPicker() {\n      this.chooseDatepickerAdapter();\n      this.picker.attach(this.hostRef);\n\n      if (this.inputValue) {\n        this.picker.value = this.datepickerAdapter.parse(this.inputValue, this.picker.format);\n      } // In case datepicker component placed after the input with datepicker directive,\n      // we can't read `this.picker.format` on first change detection run,\n      // since it's not bound yet, so we have to wait for datepicker component initialization.\n\n\n      if (!this.isDatepickerReady) {\n        this.picker.init.pipe(take(1), tap(() => this.isDatepickerReady = true), filter(() => !!this.queue), takeUntil(this.destroy$)).subscribe(() => {\n          this.writeValue(this.queue);\n          this.onChange(this.queue);\n          this.changeDetector.detectChanges();\n          this.queue = undefined;\n        });\n      }\n\n      this.picker.valueChange.pipe(takeUntil(this.destroy$)).subscribe(value => {\n        this.writePicker(value);\n        this.writeInput(value);\n        this.onChange(value);\n\n        if (this.picker.shouldHide()) {\n          this.hidePicker();\n        }\n      });\n      merge(this.picker.blur, fromEvent(this.input, 'blur').pipe(filter(() => !this.picker.isShown && this.document.activeElement !== this.input))).pipe(takeUntil(this.destroy$)).subscribe(() => this.onTouched());\n    }\n\n    writePicker(value) {\n      this.picker.value = value;\n    }\n\n    writeInput(value) {\n      const stringRepresentation = this.datepickerAdapter.format(value, this.picker.format);\n      this.hostRef.nativeElement.value = stringRepresentation;\n    }\n    /**\n     * Validates if no datepicker adapter provided.\n     * */\n\n\n    noDatepickerAdapterProvided() {\n      return !this.datepickerAdapter || !(this.datepickerAdapter instanceof NbDatepickerAdapter);\n    }\n\n    subscribeOnInputChange() {\n      fromEvent(this.input, 'input').pipe(map(() => this.inputValue), takeUntil(this.destroy$)).subscribe(value => this.handleInputChange(value));\n    }\n    /**\n     * Parses input value and write if it isn't null.\n     * */\n\n\n    handleInputChange(value) {\n      const date = this.parseInputValue(value);\n      this.onChange(date);\n      this.writePicker(date);\n    }\n\n    parseInputValue(value) {\n      if (this.datepickerAdapter.isValid(value, this.picker.format)) {\n        return this.datepickerAdapter.parse(value, this.picker.format);\n      }\n\n      return null;\n    }\n\n  }\n\n  NbDatepickerDirective.ɵfac = function NbDatepickerDirective_Factory(t) {\n    return new (t || NbDatepickerDirective)(ɵngcc0.ɵɵdirectiveInject(NB_DOCUMENT), ɵngcc0.ɵɵdirectiveInject(NB_DATE_ADAPTER), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(NbDateService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n  };\n\n  NbDatepickerDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NbDatepickerDirective,\n    selectors: [[\"input\", \"nbDatepicker\", \"\"]],\n    inputs: {\n      setPicker: [\"nbDatepicker\", \"setPicker\"]\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NbDatepickerDirective),\n      multi: true\n    }, {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => NbDatepickerDirective),\n      multi: true\n    }])]\n  });\n  return NbDatepickerDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/*\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * The `NbBasePicker` component concentrates overlay manipulation logic.\n * */\n\n\nclass NbBasePicker extends NbDatepicker {\n  constructor(overlay, positionBuilder, triggerStrategyBuilder, cfr, dateService, dateServiceOptions) {\n    super();\n    this.overlay = overlay;\n    this.positionBuilder = positionBuilder;\n    this.triggerStrategyBuilder = triggerStrategyBuilder;\n    this.cfr = cfr;\n    this.dateService = dateService;\n    this.dateServiceOptions = dateServiceOptions;\n    this.init$ = new ReplaySubject();\n    /**\n     * Stream of picker changes. Required to be the subject because picker hides and shows and picker\n     * change stream becomes recreated.\n     * */\n\n    this.onChange$ = new Subject();\n    this.overlayOffset = 8;\n    this.destroy$ = new Subject();\n    this.blur$ = new Subject();\n  }\n  /**\n   * Returns picker instance.\n   * */\n\n\n  get picker() {\n    return this.pickerRef && this.pickerRef.instance;\n  }\n  /**\n   * Stream of picker value changes.\n   * */\n\n\n  get valueChange() {\n    return this.onChange$.asObservable();\n  }\n\n  get isShown() {\n    return this.ref && this.ref.hasAttached();\n  }\n\n  get init() {\n    return this.init$.asObservable();\n  }\n  /**\n   * Emits when datepicker looses focus.\n   */\n\n\n  get blur() {\n    return this.blur$.asObservable();\n  }\n  /**\n   * Datepicker knows nothing about host html input element.\n   * So, attach method attaches datepicker to the host input element.\n   * */\n\n\n  attach(hostRef) {\n    this.hostRef = hostRef;\n    this.subscribeOnTriggers();\n  }\n\n  getValidatorConfig() {\n    return {\n      min: this.min,\n      max: this.max,\n      filter: this.filter\n    };\n  }\n\n  show() {\n    if (!this.ref) {\n      this.createOverlay();\n    }\n\n    this.openDatepicker();\n  }\n\n  shouldHide() {\n    return this.hideOnSelect && !!this.value;\n  }\n\n  hide() {\n    if (this.ref) {\n      this.ref.detach();\n    } // save current value if picker was rendered\n\n\n    if (this.picker) {\n      this.queue = this.value;\n      this.pickerRef.destroy();\n      this.pickerRef = null;\n      this.container = null;\n    }\n  }\n\n  createOverlay() {\n    this.positionStrategy = this.createPositionStrategy();\n    this.ref = this.overlay.create({\n      positionStrategy: this.positionStrategy,\n      scrollStrategy: this.overlay.scrollStrategies.reposition()\n    });\n    this.subscribeOnPositionChange();\n  }\n\n  openDatepicker() {\n    this.container = this.ref.attach(new NbComponentPortal(NbDatepickerContainerComponent, null, null, this.cfr));\n    this.instantiatePicker();\n    this.subscribeOnValueChange();\n    this.writeQueue();\n    this.patchWithInputs();\n    this.pickerRef.changeDetectorRef.markForCheck();\n  }\n\n  createPositionStrategy() {\n    return this.positionBuilder.connectedTo(this.hostRef).position(NbPosition.BOTTOM).offset(this.overlayOffset).adjustment(NbAdjustment.COUNTERCLOCKWISE);\n  }\n\n  subscribeOnPositionChange() {\n    this.positionStrategy.positionChange.pipe(takeUntil(this.destroy$)).subscribe(position => patch(this.container, {\n      position\n    }));\n  }\n\n  createTriggerStrategy() {\n    return this.triggerStrategyBuilder.trigger(NbTrigger.FOCUS).host(this.hostRef.nativeElement).container(() => this.container).build();\n  }\n\n  subscribeOnTriggers() {\n    this.triggerStrategy = this.createTriggerStrategy();\n    this.triggerStrategy.show$.subscribe(() => this.show());\n    this.triggerStrategy.hide$.subscribe(() => {\n      this.blur$.next();\n      this.hide();\n    });\n  }\n\n  instantiatePicker() {\n    this.pickerRef = this.container.instance.attach(new NbComponentPortal(this.pickerClass, null, null, this.cfr));\n  }\n  /**\n   * Subscribes on picker value changes and emit data through this.onChange$ subject.\n   * */\n\n\n  subscribeOnValueChange() {\n    this.pickerValueChange.subscribe(date => {\n      this.onChange$.next(date);\n    });\n  }\n\n  patchWithInputs() {\n    this.picker.boundingMonth = this.boundingMonth;\n    this.picker.startView = this.startView;\n    this.picker.min = this.min;\n    this.picker.max = this.max;\n    this.picker.filter = this.filter;\n    this.picker._cellComponent = this.dayCellComponent;\n    this.picker._monthCellComponent = this.monthCellComponent;\n    this.picker._yearCellComponent = this.yearCellComponent;\n    this.picker.size = this.size;\n    this.picker.showNavigation = this.showNavigation;\n    this.picker.visibleDate = this.visibleDate;\n    this.picker.showWeekNumber = this.showWeekNumber;\n    this.picker.weekNumberSymbol = this.weekNumberSymbol;\n  }\n\n  checkFormat() {\n    if (this.dateService.getId() === 'native' && this.format) {\n      throw new Error('Can\\'t format native date. To use custom formatting you have to install @nebular/moment or ' + '@nebular/date-fns package and import NbMomentDateModule or NbDateFnsDateModule accordingly.' + 'More information at \"Formatting issue\" ' + 'https://akveo.github.io/nebular/docs/components/datepicker/overview#nbdatepickercomponent');\n    }\n\n    const isFormatSet = this.format || this.dateServiceOptions && this.dateServiceOptions.format;\n\n    if (this.dateService.getId() === 'date-fns' && !isFormatSet) {\n      throw new Error('format is required when using NbDateFnsDateModule');\n    }\n  }\n\n}\n\nlet NbBasePickerComponent = /*#__PURE__*/(() => {\n  class NbBasePickerComponent extends NbBasePicker {\n    constructor(document, positionBuilder, triggerStrategyBuilder, overlay, cfr, dateService, dateServiceOptions) {\n      super(overlay, positionBuilder, triggerStrategyBuilder, cfr, dateService, dateServiceOptions);\n      /**\n       * Defines if we should render previous and next months\n       * in the current month view.\n       * */\n\n      this.boundingMonth = true;\n      /**\n       * Defines starting view for calendar.\n       * */\n\n      this.startView = NbCalendarViewMode.DATE;\n      /**\n       * Size of the calendar and entire components.\n       * Can be 'medium' which is default or 'large'.\n       * */\n\n      this.size = NbCalendarSize.MEDIUM;\n      /**\n       * Hide picker when a date or a range is selected, `true` by default\n       * @type {boolean}\n       */\n\n      this.hideOnSelect = true;\n      /**\n       * Determines should we show calendars navigation or not.\n       * @type {boolean}\n       */\n\n      this.showNavigation = true;\n      /**\n       * Sets symbol used as a header for week numbers column\n       * */\n\n      this.weekNumberSymbol = '#';\n      this._showWeekNumber = false;\n      /**\n       * Determines picker overlay offset (in pixels).\n       * */\n\n      this.overlayOffset = 8;\n    }\n    /**\n     * Determines should we show week numbers column.\n     * False by default.\n     * */\n\n\n    get showWeekNumber() {\n      return this._showWeekNumber;\n    }\n\n    set showWeekNumber(value) {\n      this._showWeekNumber = convertToBoolProperty(value);\n    }\n\n    ngOnInit() {\n      this.checkFormat();\n    }\n\n    ngOnChanges(changes) {\n      if (changes.format && !changes.format.isFirstChange()) {\n        this.checkFormat();\n      }\n    }\n\n    ngAfterViewInit() {\n      this.init$.next();\n    }\n\n    ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n      this.hide();\n      this.init$.complete();\n\n      if (this.ref) {\n        this.ref.dispose();\n      }\n\n      if (this.triggerStrategy) {\n        this.triggerStrategy.destroy();\n      }\n    }\n\n    get pickerValueChange() {\n      return;\n    }\n\n    get value() {\n      return undefined;\n    }\n\n    set value(value) {}\n\n    writeQueue() {}\n\n  }\n\n  NbBasePickerComponent.ɵfac = function NbBasePickerComponent_Factory(t) {\n    return new (t || NbBasePickerComponent)(ɵngcc0.ɵɵdirectiveInject(NB_DOCUMENT), ɵngcc0.ɵɵdirectiveInject(NbPositionBuilderService), ɵngcc0.ɵɵdirectiveInject(NbTriggerStrategyBuilderService), ɵngcc0.ɵɵdirectiveInject(NbOverlayService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(NbDateService), ɵngcc0.ɵɵdirectiveInject(NB_DATE_SERVICE_OPTIONS, 8));\n  };\n\n  NbBasePickerComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbBasePickerComponent,\n    selectors: [[\"ng-component\"]],\n    inputs: {\n      boundingMonth: \"boundingMonth\",\n      startView: \"startView\",\n      size: \"size\",\n      hideOnSelect: \"hideOnSelect\",\n      showNavigation: \"showNavigation\",\n      weekNumberSymbol: \"weekNumberSymbol\",\n      overlayOffset: \"overlayOffset\",\n      showWeekNumber: \"showWeekNumber\",\n      format: \"format\",\n      min: \"min\",\n      max: \"max\",\n      filter: \"filter\",\n      dayCellComponent: \"dayCellComponent\",\n      monthCellComponent: \"monthCellComponent\",\n      yearCellComponent: \"yearCellComponent\",\n      visibleDate: \"visibleDate\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature],\n    decls: 0,\n    vars: 0,\n    template: function NbBasePickerComponent_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n  return NbBasePickerComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * The DatePicker components itself.\n * Provides a proxy to `NbCalendar` options as well as custom picker options.\n */\n\n\nlet NbDatepickerComponent = /*#__PURE__*/(() => {\n  class NbDatepickerComponent extends NbBasePickerComponent {\n    constructor() {\n      super(...arguments);\n      this.pickerClass = NbCalendarComponent;\n    }\n    /**\n     * Date which will be rendered as selected.\n     * */\n\n\n    set date(date) {\n      this.value = date;\n    }\n    /**\n     * Emits date when selected.\n     * */\n\n\n    get dateChange() {\n      return this.valueChange;\n    }\n\n    get value() {\n      return this.picker ? this.picker.date : undefined;\n    }\n\n    set value(date) {\n      if (!this.picker) {\n        this.queue = date;\n        return;\n      }\n\n      if (date) {\n        this.visibleDate = date;\n        this.picker.visibleDate = date;\n        this.picker.date = date;\n      }\n    }\n\n    get pickerValueChange() {\n      return this.picker.dateChange;\n    }\n\n    writeQueue() {\n      if (this.queue) {\n        const date = this.queue;\n        this.queue = null;\n        this.value = date;\n      }\n    }\n\n  }\n\n  NbDatepickerComponent.ɵfac = /*@__PURE__*/function () {\n    let ɵNbDatepickerComponent_BaseFactory;\n    return function NbDatepickerComponent_Factory(t) {\n      return (ɵNbDatepickerComponent_BaseFactory || (ɵNbDatepickerComponent_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(NbDatepickerComponent)))(t || NbDatepickerComponent);\n    };\n  }();\n\n  NbDatepickerComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbDatepickerComponent,\n    selectors: [[\"nb-datepicker\"]],\n    inputs: {\n      date: \"date\"\n    },\n    outputs: {\n      dateChange: \"dateChange\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 0,\n    vars: 0,\n    template: function NbDatepickerComponent_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n  return NbDatepickerComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * The RangeDatePicker components itself.\n * Provides a proxy to `NbCalendarRange` options as well as custom picker options.\n */\n\n\nlet NbRangepickerComponent = /*#__PURE__*/(() => {\n  class NbRangepickerComponent extends NbBasePickerComponent {\n    constructor() {\n      super(...arguments);\n      this.pickerClass = NbCalendarRangeComponent;\n    }\n    /**\n     * Range which will be rendered as selected.\n     * */\n\n\n    set range(range) {\n      this.value = range;\n    }\n    /**\n     * Emits range when start selected and emits again when end selected.\n     * */\n\n\n    get rangeChange() {\n      return this.valueChange;\n    }\n\n    get value() {\n      return this.picker ? this.picker.range : undefined;\n    }\n\n    set value(range) {\n      if (!this.picker) {\n        this.queue = range;\n        return;\n      }\n\n      if (range) {\n        const visibleDate = range && range.start;\n        this.visibleDate = visibleDate;\n        this.picker.visibleDate = visibleDate;\n        this.picker.range = range;\n      }\n    }\n\n    get pickerValueChange() {\n      return this.picker.rangeChange;\n    }\n\n    shouldHide() {\n      return super.shouldHide() && !!(this.value && this.value.start && this.value.end);\n    }\n\n    writeQueue() {\n      if (this.queue) {\n        const range = this.queue;\n        this.queue = null;\n        this.value = range;\n      }\n    }\n\n  }\n\n  NbRangepickerComponent.ɵfac = /*@__PURE__*/function () {\n    let ɵNbRangepickerComponent_BaseFactory;\n    return function NbRangepickerComponent_Factory(t) {\n      return (ɵNbRangepickerComponent_BaseFactory || (ɵNbRangepickerComponent_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(NbRangepickerComponent)))(t || NbRangepickerComponent);\n    };\n  }();\n\n  NbRangepickerComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbRangepickerComponent,\n    selectors: [[\"nb-rangepicker\"]],\n    inputs: {\n      range: \"range\"\n    },\n    outputs: {\n      rangeChange: \"rangeChange\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 0,\n    vars: 0,\n    template: function NbRangepickerComponent_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n  return NbRangepickerComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet NbDateTimePickerComponent = /*#__PURE__*/(() => {\n  class NbDateTimePickerComponent extends NbBasePickerComponent {\n    constructor(document, positionBuilder, triggerStrategyBuilder, overlay, cfr, dateService, dateServiceOptions, calendarWithTimeModelService) {\n      super(document, positionBuilder, triggerStrategyBuilder, overlay, cfr, dateService, dateServiceOptions);\n      this.calendarWithTimeModelService = calendarWithTimeModelService;\n      this.pickerClass = NbCalendarWithTimeComponent;\n    }\n\n    get value() {\n      return this.picker ? this.picker.date : undefined;\n    }\n\n    set value(date) {\n      if (!this.picker) {\n        this.queue = date;\n        return;\n      }\n\n      if (date) {\n        this.visibleDate = date;\n        this.picker.visibleDate = date;\n        this.picker.date = date;\n        this.picker.cd.markForCheck();\n      }\n    }\n\n    get twelveHoursFormat() {\n      return this._twelveHoursFormat;\n    }\n\n    set twelveHoursFormat(value) {\n      this._twelveHoursFormat = convertToBoolProperty(value);\n    }\n\n    get withSeconds() {\n      return this._withSeconds;\n    }\n\n    set withSeconds(value) {\n      this._withSeconds = convertToBoolProperty(value);\n    }\n\n    get singleColumn() {\n      return this._singleColumn;\n    }\n\n    set singleColumn(value) {\n      this._singleColumn = convertToBoolProperty(value);\n    }\n\n    ngOnInit() {\n      this.format = this.format || this.buildTimeFormat();\n    }\n\n    patchWithInputs() {\n      this.picker.singleColumn = this.singleColumn;\n      this.picker.twelveHoursFormat = this.twelveHoursFormat;\n      this.picker.withSeconds = this.withSeconds;\n      this.picker.step = this.step;\n      this.picker.title = this.title;\n      this.picker.applyButtonText = this.applyButtonText;\n      this.picker.currentTimeButtonText = this.currentTimeButtonText;\n\n      if (this.twelveHoursFormat) {\n        this.picker.timeFormat = this.dateService.getTwelveHoursFormat();\n      } else {\n        this.picker.timeFormat = this.withSeconds ? this.dateService.getTwentyFourHoursFormatWithSeconds() : this.dateService.getTwentyFourHoursFormat();\n      }\n\n      super.patchWithInputs();\n      this.picker.cd.markForCheck();\n    }\n\n    get pickerValueChange() {\n      return this.picker.dateChange;\n    }\n\n    writeQueue() {\n      if (this.queue) {\n        const date = this.queue;\n        this.queue = null;\n        this.value = date;\n      }\n    }\n\n    buildTimeFormat() {\n      if (this.singleColumn) {\n        return this.calendarWithTimeModelService.buildDateFormat(this.twelveHoursFormat);\n      } else {\n        return this.calendarWithTimeModelService.buildDateFormat(this.twelveHoursFormat, this.withSeconds);\n      }\n    }\n\n  }\n\n  NbDateTimePickerComponent.ɵfac = function NbDateTimePickerComponent_Factory(t) {\n    return new (t || NbDateTimePickerComponent)(ɵngcc0.ɵɵdirectiveInject(NB_DOCUMENT), ɵngcc0.ɵɵdirectiveInject(NbPositionBuilderService), ɵngcc0.ɵɵdirectiveInject(NbTriggerStrategyBuilderService), ɵngcc0.ɵɵdirectiveInject(NbOverlayService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(NbDateService), ɵngcc0.ɵɵdirectiveInject(NB_DATE_SERVICE_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(NbCalendarTimeModelService));\n  };\n\n  NbDateTimePickerComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbDateTimePickerComponent,\n    selectors: [[\"nb-date-timepicker\"]],\n    inputs: {\n      twelveHoursFormat: \"twelveHoursFormat\",\n      withSeconds: \"withSeconds\",\n      singleColumn: \"singleColumn\",\n      step: \"step\",\n      title: \"title\",\n      applyButtonText: \"applyButtonText\",\n      currentTimeButtonText: \"currentTimeButtonText\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 0,\n    vars: 0,\n    template: function NbDateTimePickerComponent_Template(rf, ctx) {},\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return NbDateTimePickerComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nfunction isUrlPathEqual(path, link) {\n  const locationPath = getPathPartOfUrl(path);\n  return link === locationPath;\n}\n\nfunction isUrlPathContain(path, link) {\n  const locationPath = getPathPartOfUrl(path);\n  const endOfUrlSegmentRegExp = /\\/|^$/;\n  return locationPath.startsWith(link) && locationPath.slice(link.length).charAt(0).search(endOfUrlSegmentRegExp) !== -1;\n}\n\nfunction getPathPartOfUrl(url) {\n  return url.match(/.*?(?=[?;#]|$)/)[0];\n}\n\nfunction getFragmentPartOfUrl(url) {\n  const matched = url.match(/#(.+)/);\n  return matched ? matched[1] : '';\n}\n\nfunction isFragmentEqual(path, fragment) {\n  return getFragmentPartOfUrl(path) === fragment;\n}\n\nfunction isFragmentContain(path, fragment) {\n  return getFragmentPartOfUrl(path).includes(fragment);\n}\n/**\n * This service determines whether we should scroll the layout back to top.\n * This occurs when the page is changed, so when current url PATH is not equal to the previous one.\n *\n *  TODO: this is most likely a temporary solutions as recently Angular introduces ViewportScroll\n *  and scroll restoration process\n */\n\n\nlet NbRestoreScrollTopHelper = /*#__PURE__*/(() => {\n  class NbRestoreScrollTopHelper {\n    constructor(router) {\n      this.router = router;\n    }\n\n    shouldRestore() {\n      return this.router.events.pipe(startWith(null), filter(event => event === null || event instanceof NavigationEnd), pairwise(), map(([prev, current]) => this.pageChanged(prev, current)), filter(res => !!res));\n    }\n\n    pageChanged(prev, current) {\n      return !prev || getPathPartOfUrl(prev.url) !== getPathPartOfUrl(current.url);\n    }\n\n  }\n\n  NbRestoreScrollTopHelper.ɵfac = function NbRestoreScrollTopHelper_Factory(t) {\n    return new (t || NbRestoreScrollTopHelper)(ɵngcc0.ɵɵinject(ɵngcc5.Router));\n  };\n\n  NbRestoreScrollTopHelper.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: NbRestoreScrollTopHelper,\n    factory: NbRestoreScrollTopHelper.ɵfac\n  });\n  return NbRestoreScrollTopHelper;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * Layout container component.\n * When using with Nebular Theme System it is required that all child components should be placed inside.\n *\n * Basic example of two column layout with header:\n *\n * @stacked-example(Showcase, layout/layout-showcase.component)\n *\n * Can contain the following components inside:\n *\n * ```html\n * <nb-layout>\n *  <nb-layout-header></nb-layout-header>\n *  <nb-layout-footer></nb-layout-footer>\n *  <nb-layout-column></nb-layout-column>\n *  <nb-sidebar></nb-sidebar>\n * </nb-layout>\n * ```\n * ### Installation\n *\n * Import `NbLayoutModule` to your app module.\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbLayoutModule,\n *   ],\n * })\n * export class AppModule { }\n * ```\n * ### Usage\n * By default the layout fills up the whole view-port.\n * The window scrollbars are disabled on the body and moved inside of the nb-layout, so that the scrollbars\n * won't mess with the fixed nb-header.\n *\n * The child components are projected into a flexible layout structure allowing to adjust the layout behavior\n * based on the settings provided.\n *\n * The layout content (columns) becomes centered when the window width is more than\n * the value specified in the theme variable `layout-content-width`.\n *\n * The layout also contains the area on the very top (the first child of the nb-layout), which could be used\n * to dynamically append some components like modals or spinners/loaders\n * so that they are located on top of the elements hierarchy.\n * More details are under the `ThemeService` section.\n *\n * The layout component is also responsible for changing application themes.\n * It listens to the `themeChange` event and change a theme CSS class appended to body.\n * Based on the class appended, specific CSS-theme is applied to the application.\n * More details of the Theme System could be found here [Enabling Theme System](#/docs/concepts/theme-system)\n *\n * A simple layout with footer:\n *\n * @stacked-example(Layout With Footer, layout/layout-w-footer.component)\n *\n * It is possible to ask the layout to center the columns (notice: we added a `center` attribute\n * to the layout:\n *\n * ```html\n * <nb-layout center>\n *   <nb-layout-header>Awesome Company</nb-layout-header>\n *\n *   <nb-layout-column>\n *     Hello World!\n *   </nb-layout-column>\n *\n *   <nb-layout-footer>Contact us</nb-layout-footer>\n * </nb-layout>\n * ```\n *\n * @styles\n *\n * layout-background-color:\n * layout-text-color:\n * layout-text-font-family:\n * layout-text-font-size:\n * layout-text-font-weight:\n * layout-text-line-height:\n * layout-min-height:\n * layout-content-width:\n * layout-window-mode-min-width:\n * layout-window-mode-max-width:\n * layout-window-mode-background-color:\n * layout-window-mode-padding-top:\n * layout-window-shadow:\n * layout-padding:\n * layout-medium-padding:\n * layout-small-padding:\n * layout-scrollbar-background-color:\n * layout-scrollbar-color:\n * layout-scrollbar-width:\n */\n\n\nlet NbLayoutComponent = /*#__PURE__*/(() => {\n  class NbLayoutComponent {\n    constructor(themeService, spinnerService, elementRef, renderer, window, document, platformId, layoutDirectionService, scrollService, rulerService, scrollTop, overlayContainer) {\n      this.themeService = themeService;\n      this.spinnerService = spinnerService;\n      this.elementRef = elementRef;\n      this.renderer = renderer;\n      this.window = window;\n      this.document = document;\n      this.platformId = platformId;\n      this.layoutDirectionService = layoutDirectionService;\n      this.scrollService = scrollService;\n      this.rulerService = rulerService;\n      this.scrollTop = scrollTop;\n      this.overlayContainer = overlayContainer;\n      this.scrollBlockClass = 'nb-global-scrollblock';\n      this.isScrollBlocked = false;\n      this.centerValue = false;\n      this.restoreScrollTopValue = true;\n      this.windowModeValue = false;\n      this.withScrollValue = false;\n      this.withSubheader = false;\n      this.afterViewInit$ = new BehaviorSubject(null);\n      this.destroy$ = new Subject();\n      this.registerAsOverlayContainer();\n      this.themeService.onThemeChange().pipe(takeUntil(this.destroy$)).subscribe(theme => {\n        const body = this.document.getElementsByTagName('body')[0];\n\n        if (theme.previous) {\n          this.renderer.removeClass(body, `nb-theme-${theme.previous}`);\n        }\n\n        this.renderer.addClass(body, `nb-theme-${theme.name}`);\n      });\n      this.themeService.onAppendLayoutClass().pipe(takeUntil(this.destroy$)).subscribe(className => {\n        this.renderer.addClass(this.elementRef.nativeElement, className);\n      });\n      this.themeService.onRemoveLayoutClass().pipe(takeUntil(this.destroy$)).subscribe(className => {\n        this.renderer.removeClass(this.elementRef.nativeElement, className);\n      });\n      this.spinnerService.registerLoader(new Promise(resolve => {\n        this.afterViewInit$.pipe(takeUntil(this.destroy$)).subscribe(_ => resolve());\n      }));\n      this.spinnerService.load();\n      this.rulerService.onGetDimensions().pipe(takeUntil(this.destroy$)).subscribe(({\n        listener\n      }) => {\n        listener.next(this.getDimensions());\n        listener.complete();\n      });\n      this.scrollService.onScrollableChange().pipe(filter(() => this.withScrollValue)).subscribe(scrollable => {\n        /**\n         * In case when Nebular Layout custom scroll `withScroll` mode is enabled\n         * we need to disable default CDK scroll blocker (@link NbBlockScrollStrategyAdapter) on HTML element\n         * so that it won't add additional positioning.\n         */\n        if (scrollable) {\n          this.enableScroll();\n        } else {\n          this.blockScroll();\n        }\n      });\n\n      if (isPlatformBrowser(this.platformId)) {\n        // trigger first time so that after the change we have the initial value\n        this.themeService.changeWindowWidth(this.window.innerWidth);\n      }\n    }\n    /**\n     * Defines whether the layout columns will be centered after some width\n     * @param {boolean} val\n     */\n\n\n    set center(val) {\n      this.centerValue = convertToBoolProperty(val);\n    }\n    /**\n     * Defines whether the layout enters a 'window' mode, when the layout content (including sidebars and fixed header)\n     * becomes centered by width with a margin from the top of the screen, like a floating window.\n     * Automatically enables `withScroll` mode, as in the window mode scroll must be inside the layout and cannot be on\n     * window. (TODO: check this)\n     * @param {boolean} val\n     */\n\n\n    set windowMode(val) {\n      this.windowModeValue = convertToBoolProperty(val);\n      this.withScroll = this.windowModeValue;\n    }\n    /**\n     * Defines whether to move the scrollbars to layout or leave it at the body level.\n     * Automatically set to true when `windowMode` is enabled.\n     * @param {boolean} val\n     */\n\n\n    set withScroll(val) {\n      this.withScrollValue = convertToBoolProperty(val); // TODO: is this the best way of doing it? as we don't have access to body from theme styles\n      // TODO: add e2e test\n\n      const body = this.document.getElementsByTagName('body')[0];\n\n      if (this.withScrollValue) {\n        this.renderer.setStyle(body, 'overflow', 'hidden');\n      } else {\n        this.renderer.setStyle(body, 'overflow', 'initial');\n      }\n    }\n    /**\n     * Restores scroll to the top of the page after navigation\n     * @param {boolean} val\n     */\n\n\n    set restoreScrollTop(val) {\n      this.restoreScrollTopValue = convertToBoolProperty(val);\n    }\n\n    ngAfterViewInit() {\n      this.scrollService.onGetPosition().pipe(takeUntil(this.destroy$)).subscribe(({\n        listener\n      }) => {\n        listener.next(this.getScrollPosition());\n        listener.complete();\n      });\n      this.scrollTop.shouldRestore().pipe(filter(() => this.restoreScrollTopValue), takeUntil(this.destroy$)).subscribe(() => this.scroll(0, 0));\n      this.layoutDirectionService.onDirectionChange().pipe(takeUntil(this.destroy$)).subscribe(direction => this.document.dir = direction);\n      this.scrollService.onManualScroll().pipe(takeUntil(this.destroy$)).subscribe(({\n        x,\n        y\n      }) => this.scroll(x, y));\n      this.afterViewInit$.next(true);\n    }\n\n    ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n      this.unregisterAsOverlayContainer();\n    }\n\n    onScroll($event) {\n      this.scrollService.fireScrollChange($event);\n    }\n\n    onResize(event) {\n      this.themeService.changeWindowWidth(event.target.innerWidth);\n    }\n    /**\n     * Returns scroll and client height/width\n     *\n     * Depending on the current scroll mode (`withScroll=true`) returns sizes from the body element\n     * or from the `.scrollable-container`\n     * @returns {NbLayoutDimensions}\n     */\n\n\n    getDimensions() {\n      let clientWidth,\n          clientHeight,\n          scrollWidth,\n          scrollHeight = 0;\n\n      if (this.withScrollValue) {\n        const container = this.scrollableContainerRef.nativeElement;\n        clientWidth = container.clientWidth;\n        clientHeight = container.clientHeight;\n        scrollWidth = container.scrollWidth;\n        scrollHeight = container.scrollHeight;\n      } else {\n        const {\n          documentElement,\n          body\n        } = this.document;\n        clientWidth = documentElement.clientWidth || body.clientWidth;\n        clientHeight = documentElement.clientHeight || body.clientHeight;\n        scrollWidth = documentElement.scrollWidth || body.scrollWidth;\n        scrollHeight = documentElement.scrollHeight || body.scrollHeight;\n      }\n\n      return {\n        clientWidth,\n        clientHeight,\n        scrollWidth,\n        scrollHeight\n      };\n    }\n    /**\n     * Returns scroll position of current scroll container.\n     *\n     * If `withScroll` = true, returns scroll position of the `.scrollable-container` element,\n     * otherwise - of the scrollable element of the window (which may be different depending of a browser)\n     *\n     * @returns {NbScrollPosition}\n     */\n\n\n    getScrollPosition() {\n      if (!isPlatformBrowser(this.platformId)) {\n        return {\n          x: 0,\n          y: 0\n        };\n      }\n\n      if (this.withScrollValue) {\n        const container = this.scrollableContainerRef.nativeElement;\n        return {\n          x: container.scrollLeft,\n          y: container.scrollTop\n        };\n      }\n\n      const documentRect = this.document.documentElement.getBoundingClientRect();\n      const x = -documentRect.left || this.document.body.scrollLeft || this.window.scrollX || this.document.documentElement.scrollLeft || 0;\n      const y = -documentRect.top || this.document.body.scrollTop || this.window.scrollY || this.document.documentElement.scrollTop || 0;\n      return {\n        x,\n        y\n      };\n    }\n\n    registerAsOverlayContainer() {\n      if (this.overlayContainer.setContainer) {\n        this.overlayContainer.setContainer(this.elementRef.nativeElement);\n      }\n    }\n\n    unregisterAsOverlayContainer() {\n      if (this.overlayContainer.clearContainer) {\n        this.overlayContainer.clearContainer();\n      }\n    }\n\n    scroll(x = null, y = null) {\n      const {\n        x: currentX,\n        y: currentY\n      } = this.getScrollPosition();\n      x = x == null ? currentX : x;\n      y = y == null ? currentY : y;\n\n      if (!isPlatformBrowser(this.platformId)) {\n        return;\n      }\n\n      if (this.withScrollValue) {\n        const scrollable = this.scrollableContainerRef.nativeElement;\n\n        if (scrollable.scrollTo) {\n          scrollable.scrollTo(x, y);\n        } else {\n          scrollable.scrollLeft = x;\n          scrollable.scrollTop = y;\n        }\n      } else {\n        this.window.scrollTo(x, y);\n      }\n    } // TODO: Extract into block scroll strategy\n\n\n    blockScroll() {\n      if (this.isScrollBlocked) {\n        return;\n      }\n\n      this.isScrollBlocked = true;\n      this.renderer.addClass(this.document.documentElement, this.scrollBlockClass);\n      const scrollableContainerElement = this.scrollableContainerRef.nativeElement;\n      const layoutElement = this.layoutContainerRef.nativeElement;\n      const layoutWithScrollWidth = layoutElement.clientWidth;\n      this.scrollableContainerOverflowOldValue = scrollableContainerElement.style.overflow;\n      scrollableContainerElement.style.overflow = 'hidden';\n      const layoutWithoutScrollWidth = layoutElement.clientWidth;\n      const scrollWidth = layoutWithoutScrollWidth - layoutWithScrollWidth;\n\n      if (!scrollWidth) {\n        return;\n      }\n\n      this.layoutPaddingOldValue = {\n        left: layoutElement.style.paddingLeft,\n        right: layoutElement.style.paddingRight\n      };\n\n      if (this.layoutDirectionService.isLtr()) {\n        layoutElement.style.paddingRight = `${scrollWidth}px`;\n      } else {\n        layoutElement.style.paddingLeft = `${scrollWidth}px`;\n      }\n    }\n\n    enableScroll() {\n      if (this.isScrollBlocked) {\n        this.isScrollBlocked = false;\n        this.renderer.removeClass(this.document.documentElement, this.scrollBlockClass);\n        this.scrollableContainerRef.nativeElement.style.overflow = this.scrollableContainerOverflowOldValue;\n\n        if (this.layoutPaddingOldValue) {\n          const layoutElement = this.layoutContainerRef.nativeElement;\n          layoutElement.style.paddingLeft = this.layoutPaddingOldValue.left;\n          layoutElement.style.paddingRight = this.layoutPaddingOldValue.right;\n          this.layoutPaddingOldValue = null;\n        }\n      }\n    }\n\n  }\n\n  NbLayoutComponent.ɵfac = function NbLayoutComponent_Factory(t) {\n    return new (t || NbLayoutComponent)(ɵngcc0.ɵɵdirectiveInject(NbThemeService), ɵngcc0.ɵɵdirectiveInject(NbSpinnerService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(NB_WINDOW), ɵngcc0.ɵɵdirectiveInject(NB_DOCUMENT), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID), ɵngcc0.ɵɵdirectiveInject(NbLayoutDirectionService), ɵngcc0.ɵɵdirectiveInject(NbLayoutScrollService), ɵngcc0.ɵɵdirectiveInject(NbLayoutRulerService), ɵngcc0.ɵɵdirectiveInject(NbRestoreScrollTopHelper), ɵngcc0.ɵɵdirectiveInject(NbOverlayContainerAdapter));\n  };\n\n  NbLayoutComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbLayoutComponent,\n    selectors: [[\"nb-layout\"]],\n    viewQuery: function NbLayoutComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c9, 5, ViewContainerRef);\n        ɵngcc0.ɵɵviewQuery(_c10, 5, ElementRef);\n        ɵngcc0.ɵɵviewQuery(_c11, 5, ElementRef);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.veryTopRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.scrollableContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.layoutContainerRef = _t.first);\n      }\n    },\n    hostVars: 6,\n    hostBindings: function NbLayoutComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"scroll\", function NbLayoutComponent_scroll_HostBindingHandler($event) {\n          return ctx.onScroll($event);\n        }, false, ɵngcc0.ɵɵresolveWindow)(\"resize\", function NbLayoutComponent_resize_HostBindingHandler($event) {\n          return ctx.onResize($event);\n        }, false, ɵngcc0.ɵɵresolveWindow);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"window-mode\", ctx.windowModeValue)(\"with-scroll\", ctx.withScrollValue)(\"with-subheader\", ctx.withSubheader);\n      }\n    },\n    inputs: {\n      center: \"center\",\n      windowMode: \"windowMode\",\n      withScroll: \"withScroll\",\n      restoreScrollTop: \"restoreScrollTop\"\n    },\n    ngContentSelectors: _c13,\n    decls: 12,\n    vars: 2,\n    consts: [[1, \"scrollable-container\", 3, \"scroll\"], [\"scrollableContainer\", \"\"], [1, \"layout\"], [\"layoutContainer\", \"\"], [1, \"layout-container\"], [1, \"content\"], [1, \"columns\"]],\n    template: function NbLayoutComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c12);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"scroll\", function NbLayoutComponent_Template_div_scroll_0_listener($event) {\n          return ctx.onScroll($event);\n        });\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2, 3);\n        ɵngcc0.ɵɵprojection(4);\n        ɵngcc0.ɵɵelementStart(5, \"div\", 4);\n        ɵngcc0.ɵɵprojection(6, 1);\n        ɵngcc0.ɵɵelementStart(7, \"div\", 5);\n        ɵngcc0.ɵɵprojection(8, 2);\n        ɵngcc0.ɵɵelementStart(9, \"div\", 6);\n        ɵngcc0.ɵɵprojection(10, 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(11, 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(7);\n        ɵngcc0.ɵɵclassProp(\"center\", ctx.centerValue);\n      }\n    },\n    styles: [\"[_nghost-%COMP%]{-webkit-font-smoothing:antialiased}[dir=ltr]   [_nghost-%COMP%]{text-align:left}[dir=rtl]   [_nghost-%COMP%]{text-align:right}[_nghost-%COMP%]   .layout[_ngcontent-%COMP%]{display:flex;flex-direction:column}[_nghost-%COMP%]     nb-layout-header{display:block}[_nghost-%COMP%]     nb-layout-header nav{align-items:center;justify-content:flex-start;display:flex}[_nghost-%COMP%]     nb-layout-header.fixed{position:fixed;top:0;left:0;right:0;z-index:1040}[_nghost-%COMP%]   .layout-container[_ngcontent-%COMP%]{display:flex;flex:1;-ms-flex:1 1 auto;flex-direction:row}[dir=ltr]   [_nghost-%COMP%]   .layout-container[_ngcontent-%COMP%]     nb-sidebar.left{order:0}[dir=rtl]   [_nghost-%COMP%]   .layout-container[_ngcontent-%COMP%]     nb-sidebar.left{order:2}[dir=ltr]   [_nghost-%COMP%]   .layout-container[_ngcontent-%COMP%]     nb-sidebar.right{order:2}[dir=rtl]   [_nghost-%COMP%]   .layout-container[_ngcontent-%COMP%]     nb-sidebar.right{order:0}[_nghost-%COMP%]   .layout-container[_ngcontent-%COMP%]     nb-sidebar.end{order:2}[_nghost-%COMP%]   .layout-container[_ngcontent-%COMP%]     nb-sidebar .fixed{position:fixed;width:100%;overflow-y:auto;height:100%}[_nghost-%COMP%]   .layout-container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]{display:flex;flex:1;-ms-flex:1 1 auto;flex-direction:column;min-width:0}[_nghost-%COMP%]   .layout-container[_ngcontent-%COMP%]   .content.center[_ngcontent-%COMP%]{max-width:100%;position:relative;margin-left:auto;margin-right:auto}[_nghost-%COMP%]   .layout-container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .columns[_ngcontent-%COMP%]{display:flex;flex:1;-ms-flex:1 1 auto;flex-direction:row;width:100%}[_nghost-%COMP%]   .layout-container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .columns[_ngcontent-%COMP%]     nb-layout-column{order:1;flex:1 0;min-width:0}[dir=ltr]   [_nghost-%COMP%]   .layout-container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .columns[_ngcontent-%COMP%]     nb-layout-column.left{order:0}[dir=rtl]   [_nghost-%COMP%]   .layout-container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .columns[_ngcontent-%COMP%]     nb-layout-column.left{order:2}[_nghost-%COMP%]   .layout-container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   .columns[_ngcontent-%COMP%]     nb-layout-column.start{order:0}[_nghost-%COMP%]   .layout-container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]     nb-layout-footer{display:block;margin-top:auto}[_nghost-%COMP%]   .layout-container[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]     nb-layout-footer nav{justify-content:center;display:flex}\"]\n  });\n  return NbLayoutComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * A container component which determines a content position inside of the layout.\n * The layout could contain unlimited columns (not including the sidebars).\n *\n * By default the columns are ordered from the left to the right,\n * but it's also possible to overwrite this behavior by setting a `left` attribute to the column,\n * moving it to the very first position:\n *\n * @stacked-example(Column Left, layout/layout-column-left.component)\n */\n\n\nlet NbLayoutColumnComponent = /*#__PURE__*/(() => {\n  class NbLayoutColumnComponent {\n    /**\n     * Move the column to the very left position in the layout.\n     * @param {boolean} val\n     */\n    set left(val) {\n      this.leftValue = convertToBoolProperty(val);\n      this.startValue = false;\n    }\n    /**\n     * Make column first in the layout.\n     * @param {boolean} val\n     */\n\n\n    set start(val) {\n      this.startValue = convertToBoolProperty(val);\n      this.leftValue = false;\n    }\n\n  }\n\n  NbLayoutColumnComponent.ɵfac = function NbLayoutColumnComponent_Factory(t) {\n    return new (t || NbLayoutColumnComponent)();\n  };\n\n  NbLayoutColumnComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbLayoutColumnComponent,\n    selectors: [[\"nb-layout-column\"]],\n    hostVars: 4,\n    hostBindings: function NbLayoutColumnComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"left\", ctx.leftValue)(\"start\", ctx.startValue);\n      }\n    },\n    inputs: {\n      left: \"left\",\n      start: \"start\"\n    },\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function NbLayoutColumnComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2\n  });\n  return NbLayoutColumnComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Page header component.\n * Located on top of the page above the layout columns and sidebars.\n * Could be made `fixed` by setting the corresponding property. In the fixed mode the header becomes\n * sticky to the top of the nb-layout (to of the page). Here's an example:\n *\n * @stacked-example(Fixed Header, layout/layout-fixed-header.component)\n *\n * In a pair with sidebar it is possible to setup a configuration when header is placed on a side of the sidebar\n * and not on top of it. To achieve this simply put a `subheader` property to the header like this:\n * ```html\n * <nb-layout-header subheader></nb-layout-header>\n * ```\n * @stacked-example(Subheader, layout/layout-sidebar-subheader.component)\n * Note that in such configuration sidebar shadow is removed and header cannot be make `fixed`.\n *\n * Same way you can put both `fixed` and `clipped` headers adding creating a sub-header for your app:\n *\n * @stacked-example(Subheader, layout/layout-subheader.component)\n *\n * @styles\n *\n * header-background-color:\n * header-text-color:\n * header-text-font-family:\n * header-text-font-size:\n * header-text-font-weight:\n * header-text-line-height:\n * header-height:\n * header-padding:\n * header-shadow:\n */\n\n\nlet NbLayoutHeaderComponent = /*#__PURE__*/(() => {\n  class NbLayoutHeaderComponent {\n    constructor(layout) {\n      this.layout = layout;\n    }\n    /**\n     * Makes the header sticky to the top of the nb-layout.\n     * @param {boolean} val\n     */\n\n\n    set fixed(val) {\n      this.fixedValue = convertToBoolProperty(val);\n    }\n    /**\n     * Places header on a side of the sidebar, and not above.\n     * Disables fixed mode for this header and remove a shadow from the sidebar.\n     * @param {boolean} val\n     */\n\n\n    set subheader(val) {\n      this.subheaderValue = convertToBoolProperty(val);\n      this.fixedValue = false;\n      this.layout.withSubheader = this.subheaderValue;\n    }\n\n  }\n\n  NbLayoutHeaderComponent.ɵfac = function NbLayoutHeaderComponent_Factory(t) {\n    return new (t || NbLayoutHeaderComponent)(ɵngcc0.ɵɵdirectiveInject(NbLayoutComponent));\n  };\n\n  NbLayoutHeaderComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbLayoutHeaderComponent,\n    selectors: [[\"nb-layout-header\"]],\n    hostVars: 4,\n    hostBindings: function NbLayoutHeaderComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"fixed\", ctx.fixedValue)(\"subheader\", ctx.subheaderValue);\n      }\n    },\n    inputs: {\n      fixed: \"fixed\",\n      subheader: \"subheader\"\n    },\n    ngContentSelectors: _c0,\n    decls: 2,\n    vars: 2,\n    template: function NbLayoutHeaderComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"nav\");\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"fixed\", ctx.fixedValue);\n      }\n    },\n    encapsulation: 2\n  });\n  return NbLayoutHeaderComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Page footer.\n * Located under the nb-layout content (specifically, under the columns).\n * Could be made `fixed`, becoming sticky to the bottom of the view port (window).\n *\n * @styles\n *\n * footer-background-color:\n * footer-text-color:\n * footer-text-font-family:\n * footer-text-font-size:\n * footer-text-font-weight:\n * footer-text-line-height:\n * footer-text-highlight-color:\n * footer-height:\n * footer-padding:\n * footer-divider-color:\n * footer-divider-style:\n * footer-divider-width:\n * footer-shadow:\n */\n\n\nlet NbLayoutFooterComponent = /*#__PURE__*/(() => {\n  class NbLayoutFooterComponent {\n    /**\n     * Makes the footer sticky to the bottom of the window.\n     * @param {boolean} val\n     */\n    set fixed(val) {\n      this.fixedValue = convertToBoolProperty(val);\n    }\n\n  }\n\n  NbLayoutFooterComponent.ɵfac = function NbLayoutFooterComponent_Factory(t) {\n    return new (t || NbLayoutFooterComponent)();\n  };\n\n  NbLayoutFooterComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbLayoutFooterComponent,\n    selectors: [[\"nb-layout-footer\"]],\n    hostVars: 2,\n    hostBindings: function NbLayoutFooterComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"fixed\", ctx.fixedValue);\n      }\n    },\n    inputs: {\n      fixed: \"fixed\"\n    },\n    ngContentSelectors: _c0,\n    decls: 2,\n    vars: 2,\n    template: function NbLayoutFooterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"nav\");\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"fixed\", ctx.fixedValue);\n      }\n    },\n    encapsulation: 2\n  });\n  return NbLayoutFooterComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nconst NB_LAYOUT_COMPONENTS = [NbLayoutComponent, NbLayoutColumnComponent, NbLayoutFooterComponent, NbLayoutHeaderComponent];\nlet NbLayoutModule = /*#__PURE__*/(() => {\n  class NbLayoutModule {}\n\n  NbLayoutModule.ɵfac = function NbLayoutModule_Factory(t) {\n    return new (t || NbLayoutModule)();\n  };\n\n  NbLayoutModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NbLayoutModule\n  });\n  NbLayoutModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    providers: [NbRestoreScrollTopHelper],\n    imports: [[NbSharedModule]]\n  });\n  return NbLayoutModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NbLayoutModule, {\n    declarations: [NbLayoutComponent, NbLayoutColumnComponent, NbLayoutFooterComponent, NbLayoutHeaderComponent],\n    imports: [NbSharedModule],\n    exports: [NbLayoutComponent, NbLayoutColumnComponent, NbLayoutFooterComponent, NbLayoutHeaderComponent]\n  });\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nconst itemClick$ = new Subject();\nconst addItems$ = new ReplaySubject(1);\nconst navigateHome$ = new ReplaySubject(1);\nconst getSelectedItem$ = new ReplaySubject(1);\nconst itemSelect$ = new ReplaySubject(1);\nconst itemHover$ = new ReplaySubject(1);\nconst submenuToggle$ = new ReplaySubject(1);\nconst collapseAll$ = new ReplaySubject(1); // TODO: check if we need both URL and LINK\n\n/**\n *\n *\n * Menu Item options example\n * @stacked-example(Menu Link Parameters, menu/menu-link-params.component)\n *\n *\n */\n\nclass NbMenuItem {\n  constructor() {\n    /**\n     * Item is selected when partly or fully equal to the current url\n     * @type {string}\n     */\n    this.pathMatch = 'full';\n  }\n  /**\n   * @returns item parents in top-down order\n   */\n\n\n  static getParents(item) {\n    const parents = [];\n    let parent = item.parent;\n\n    while (parent) {\n      parents.unshift(parent);\n      parent = parent.parent;\n    }\n\n    return parents;\n  }\n\n  static isParent(item, possibleChild) {\n    return possibleChild.parent ? possibleChild.parent === item || this.isParent(item, possibleChild.parent) : false;\n  }\n\n} // TODO: map select events to router change events\n// TODO: review the interface\n\n/**\n *\n *\n * Menu Service. Allows you to listen to menu events, or to interact with a menu.\n * @stacked-example(Menu Service, menu/menu-service.component)\n *\n *\n */\n\n\nlet NbMenuService = /*#__PURE__*/(() => {\n  class NbMenuService {\n    /**\n     * Add items to the end of the menu items list\n     * @param {List<NbMenuItem>} items\n     * @param {string} tag\n     */\n    addItems(items, tag) {\n      addItems$.next({\n        tag,\n        items\n      });\n    }\n    /**\n     * Collapses all menu items\n     * @param {string} tag\n     */\n\n\n    collapseAll(tag) {\n      collapseAll$.next({\n        tag\n      });\n    }\n    /**\n     * Navigate to the home menu item\n     * @param {string} tag\n     */\n\n\n    navigateHome(tag) {\n      navigateHome$.next({\n        tag\n      });\n    }\n    /**\n     * Returns currently selected item. Won't subscribe to the future events.\n     * @param {string} tag\n     * @returns {Observable<{tag: string; item: NbMenuItem}>}\n     */\n\n\n    getSelectedItem(tag) {\n      const listener = new BehaviorSubject(null);\n      getSelectedItem$.next({\n        tag,\n        listener\n      });\n      return listener.asObservable();\n    }\n\n    onItemClick() {\n      return itemClick$.pipe(share());\n    }\n\n    onItemSelect() {\n      return itemSelect$.pipe(share());\n    }\n\n    onItemHover() {\n      return itemHover$.pipe(share());\n    }\n\n    onSubmenuToggle() {\n      return submenuToggle$.pipe(share());\n    }\n\n  }\n\n  NbMenuService.ɵfac = function NbMenuService_Factory(t) {\n    return new (t || NbMenuService)();\n  };\n\n  NbMenuService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: NbMenuService,\n    factory: NbMenuService.ɵfac\n  });\n  return NbMenuService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet NbMenuInternalService = /*#__PURE__*/(() => {\n  class NbMenuInternalService {\n    constructor(location) {\n      this.location = location;\n    }\n\n    prepareItems(items) {\n      const defaultItem = new NbMenuItem();\n      items.forEach(i => {\n        this.applyDefaults(i, defaultItem);\n        this.setParent(i);\n      });\n    }\n\n    selectFromUrl(items, tag, collapseOther = false) {\n      const selectedItem = this.findItemByUrl(items);\n\n      if (selectedItem) {\n        this.selectItem(selectedItem, items, collapseOther, tag);\n      }\n    }\n\n    selectItem(item, items, collapseOther = false, tag) {\n      const unselectedItems = this.resetSelection(items);\n      const collapsedItems = collapseOther ? this.collapseItems(items) : [];\n\n      for (const parent of NbMenuItem.getParents(item)) {\n        parent.selected = true; // emit event only for items that weren't selected before ('unselectedItems' contains items that were selected)\n\n        if (!unselectedItems.includes(parent)) {\n          this.itemSelect(parent, tag);\n        }\n\n        const wasNotExpanded = !parent.expanded;\n        parent.expanded = true;\n        const i = collapsedItems.indexOf(parent); // emit event only for items that weren't expanded before.\n        // 'collapsedItems' contains items that were expanded, so no need to emit event.\n        // in case 'collapseOther' is false, 'collapsedItems' will be empty,\n        // so also check if item isn't expanded already ('wasNotExpanded').\n\n        if (i === -1 && wasNotExpanded) {\n          this.submenuToggle(parent, tag);\n        } else {\n          collapsedItems.splice(i, 1);\n        }\n      }\n\n      item.selected = true; // emit event only for items that weren't selected before ('unselectedItems' contains items that were selected)\n\n      if (!unselectedItems.includes(item)) {\n        this.itemSelect(item, tag);\n      } // remaining items which wasn't expanded back after expanding all currently selected items\n\n\n      for (const collapsedItem of collapsedItems) {\n        this.submenuToggle(collapsedItem, tag);\n      }\n    }\n\n    collapseAll(items, tag, except) {\n      const collapsedItems = this.collapseItems(items, except);\n\n      for (const item of collapsedItems) {\n        this.submenuToggle(item, tag);\n      }\n    }\n\n    onAddItem() {\n      return addItems$.pipe(share());\n    }\n\n    onNavigateHome() {\n      return navigateHome$.pipe(share());\n    }\n\n    onCollapseAll() {\n      return collapseAll$.pipe(share());\n    }\n\n    onGetSelectedItem() {\n      return getSelectedItem$.pipe(share());\n    }\n\n    itemHover(item, tag) {\n      itemHover$.next({\n        tag,\n        item\n      });\n    }\n\n    submenuToggle(item, tag) {\n      submenuToggle$.next({\n        tag,\n        item\n      });\n    }\n\n    itemSelect(item, tag) {\n      itemSelect$.next({\n        tag,\n        item\n      });\n    }\n\n    itemClick(item, tag) {\n      itemClick$.next({\n        tag,\n        item\n      });\n    }\n    /**\n     * Unselect all given items deeply.\n     * @param items array of items to unselect.\n     * @returns items which selected value was changed.\n     */\n\n\n    resetSelection(items) {\n      const unselectedItems = [];\n\n      for (const item of items) {\n        if (item.selected) {\n          unselectedItems.push(item);\n        }\n\n        item.selected = false;\n\n        if (item.children) {\n          unselectedItems.push(...this.resetSelection(item.children));\n        }\n      }\n\n      return unselectedItems;\n    }\n    /**\n     * Collapse all given items deeply.\n     * @param items array of items to collapse.\n     * @param except menu item which shouldn't be collapsed, also disables collapsing for parents of this item.\n     * @returns items which expanded value was changed.\n     */\n\n\n    collapseItems(items, except) {\n      const collapsedItems = [];\n\n      for (const item of items) {\n        if (except && (item === except || NbMenuItem.isParent(item, except))) {\n          continue;\n        }\n\n        if (item.expanded) {\n          collapsedItems.push(item);\n        }\n\n        item.expanded = false;\n\n        if (item.children) {\n          collapsedItems.push(...this.collapseItems(item.children));\n        }\n      }\n\n      return collapsedItems;\n    }\n\n    applyDefaults(item, defaultItem) {\n      const menuItem = Object.assign({}, item);\n      Object.assign(item, defaultItem, menuItem);\n      item.children && item.children.forEach(child => {\n        this.applyDefaults(child, defaultItem);\n      });\n    }\n\n    setParent(item) {\n      item.children && item.children.forEach(child => {\n        child.parent = item;\n        this.setParent(child);\n      });\n    }\n    /**\n     * Find deepest item which link matches current URL path.\n     * @param items array of items to search in.\n     * @returns found item of undefined.\n     */\n\n\n    findItemByUrl(items) {\n      let selectedItem;\n      items.some(item => {\n        if (item.children) {\n          selectedItem = this.findItemByUrl(item.children);\n        }\n\n        if (!selectedItem && this.isSelectedInUrl(item)) {\n          selectedItem = item;\n        }\n\n        return selectedItem;\n      });\n      return selectedItem;\n    }\n\n    isSelectedInUrl(item) {\n      const exact = item.pathMatch === 'full';\n      const link = item.link;\n      const isSelectedInPath = exact ? isUrlPathEqual(this.location.path(), link) : isUrlPathContain(this.location.path(), link);\n\n      if (isSelectedInPath && item.fragment != null) {\n        return exact ? isFragmentEqual(this.location.path(true), item.fragment) : isFragmentContain(this.location.path(true), item.fragment);\n      }\n\n      return isSelectedInPath;\n    }\n\n  }\n\n  NbMenuInternalService.ɵfac = function NbMenuInternalService_Factory(t) {\n    return new (t || NbMenuInternalService)(ɵngcc0.ɵɵinject(ɵngcc2.Location));\n  };\n\n  NbMenuInternalService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: NbMenuInternalService,\n    factory: NbMenuInternalService.ɵfac\n  });\n  return NbMenuInternalService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nvar NbToggleStates = /*#__PURE__*/(() => {\n  (function (NbToggleStates) {\n    NbToggleStates[\"Expanded\"] = \"expanded\";\n    NbToggleStates[\"Collapsed\"] = \"collapsed\";\n  })(NbToggleStates || (NbToggleStates = {}));\n\n  return NbToggleStates;\n})();\nlet NbMenuItemComponent = /*#__PURE__*/(() => {\n  class NbMenuItemComponent {\n    constructor(menuService, directionService) {\n      this.menuService = menuService;\n      this.directionService = directionService;\n      this.menuItem = null;\n      this.hoverItem = new EventEmitter();\n      this.toggleSubMenu = new EventEmitter();\n      this.selectItem = new EventEmitter();\n      this.itemClick = new EventEmitter();\n      this.destroy$ = new Subject();\n    }\n\n    ngDoCheck() {\n      this.toggleState = this.menuItem.expanded ? NbToggleStates.Expanded : NbToggleStates.Collapsed;\n    }\n\n    ngAfterViewInit() {\n      this.menuService.onSubmenuToggle().pipe(filter(({\n        item\n      }) => item === this.menuItem), map(({\n        item\n      }) => item.expanded), takeUntil(this.destroy$)).subscribe(isExpanded => this.toggleState = isExpanded ? NbToggleStates.Expanded : NbToggleStates.Collapsed);\n    }\n\n    ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n\n    onToggleSubMenu(item) {\n      this.toggleSubMenu.emit(item);\n    }\n\n    onHoverItem(item) {\n      this.hoverItem.emit(item);\n    }\n\n    onSelectItem(item) {\n      this.selectItem.emit(item);\n    }\n\n    onItemClick(item) {\n      this.itemClick.emit(item);\n    }\n\n    getExpandStateIcon() {\n      if (this.menuItem.expanded) {\n        return 'chevron-down-outline';\n      }\n\n      return this.directionService.isLtr() ? 'chevron-left-outline' : 'chevron-right-outline';\n    }\n\n  }\n\n  NbMenuItemComponent.ɵfac = function NbMenuItemComponent_Factory(t) {\n    return new (t || NbMenuItemComponent)(ɵngcc0.ɵɵdirectiveInject(NbMenuService), ɵngcc0.ɵɵdirectiveInject(NbLayoutDirectionService));\n  };\n\n  NbMenuItemComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbMenuItemComponent,\n    selectors: [[\"\", \"nbMenuItem\", \"\"]],\n    inputs: {\n      menuItem: \"menuItem\",\n      badge: \"badge\"\n    },\n    outputs: {\n      hoverItem: \"hoverItem\",\n      toggleSubMenu: \"toggleSubMenu\",\n      selectItem: \"selectItem\",\n      itemClick: \"itemClick\"\n    },\n    attrs: _c14,\n    decls: 8,\n    vars: 6,\n    consts: [[4, \"ngIf\"], [3, \"routerLink\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"preserveFragment\", \"skipLocationChange\", \"active\", \"mouseenter\", \"click\", 4, \"ngIf\"], [3, \"active\", \"mouseenter\", \"click\", 4, \"ngIf\"], [\"href\", \"#\", 3, \"active\", \"click\", \"mouseenter\", 4, \"ngIf\"], [\"class\", \"menu-items\", 3, \"collapsed\", \"expanded\", 4, \"ngIf\"], [\"badgeTemplate\", \"\"], [\"class\", \"menu-icon\", 3, \"config\", 4, \"ngIf\"], [1, \"menu-icon\", 3, \"config\"], [3, \"routerLink\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"preserveFragment\", \"skipLocationChange\", \"mouseenter\", \"click\"], [1, \"menu-title\"], [3, \"ngTemplateOutlet\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\"], [3, \"mouseenter\", \"click\"], [\"href\", \"#\", 3, \"click\", \"mouseenter\"], [\"pack\", \"nebular-essentials\", 1, \"expand-state\", 3, \"icon\"], [1, \"menu-items\"], [4, \"ngFor\", \"ngForOf\"], [\"nbMenuItem\", \"\", \"class\", \"menu-item\", 3, \"menuItem\", \"badge\", \"menu-group\", \"hoverItem\", \"toggleSubMenu\", \"selectItem\", \"itemClick\", 4, \"ngIf\"], [\"nbMenuItem\", \"\", 1, \"menu-item\", 3, \"menuItem\", \"badge\", \"hoverItem\", \"toggleSubMenu\", \"selectItem\", \"itemClick\"], [3, \"text\", \"dotMode\", \"status\"]],\n    template: function NbMenuItemComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, NbMenuItemComponent_span_0_Template, 3, 2, \"span\", 0);\n        ɵngcc0.ɵɵtemplate(1, NbMenuItemComponent_a_1_Template, 5, 13, \"a\", 1);\n        ɵngcc0.ɵɵtemplate(2, NbMenuItemComponent_a_2_Template, 5, 8, \"a\", 2);\n        ɵngcc0.ɵɵtemplate(3, NbMenuItemComponent_a_3_Template, 5, 7, \"a\", 2);\n        ɵngcc0.ɵɵtemplate(4, NbMenuItemComponent_a_4_Template, 6, 8, \"a\", 3);\n        ɵngcc0.ɵɵtemplate(5, NbMenuItemComponent_ul_5_Template, 2, 6, \"ul\", 4);\n        ɵngcc0.ɵɵtemplate(6, NbMenuItemComponent_ng_template_6_Template, 1, 3, \"ng-template\", null, 5, ɵngcc0.ɵɵtemplateRefExtractor);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.menuItem.group);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.menuItem.link && !ctx.menuItem.url && !ctx.menuItem.children && !ctx.menuItem.group);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.menuItem.url && !ctx.menuItem.children && !ctx.menuItem.link && !ctx.menuItem.group);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.menuItem.children && !ctx.menuItem.link && !ctx.menuItem.url && !ctx.menuItem.group);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.menuItem.children);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.menuItem.children);\n      }\n    },\n    directives: function () {\n      return [ɵngcc2.NgIf, NbIconComponent, ɵngcc5.RouterLinkWithHref, ɵngcc2.NgTemplateOutlet, ɵngcc2.NgForOf, NbMenuItemComponent, NbBadgeComponent];\n    },\n    encapsulation: 2,\n    data: {\n      animation: [trigger('toggle', [state(NbToggleStates.Collapsed, style({\n        height: '0',\n        margin: '0'\n      })), state(NbToggleStates.Expanded, style({\n        height: '*'\n      })), transition(`${NbToggleStates.Collapsed} <=> ${NbToggleStates.Expanded}`, animate(300))])]\n    }\n  });\n  return NbMenuItemComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Vertical menu component.\n *\n * Accepts a list of menu items and renders them accordingly. Supports multi-level menus.\n *\n * Basic example\n * @stacked-example(Showcase, menu/menu-showcase.component)\n *\n * ```ts\n * // ...\n * items: NbMenuItem[] = [\n *  {\n *    title: home,\n *    link: '/'\n *  },\n *  {\n *    title: dashboard,\n *    link: 'dashboard'\n *  }\n * ];\n * // ...\n * <nb-menu [items]=\"items\"></nb-menu>\n * ```\n * ### Installation\n *\n * Import `NbMenuModule.forRoot()` to your app module.\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbMenuModule.forRoot(),\n *   ],\n * })\n * export class AppModule { }\n * ```\n * and `NbMenuModule` to your feature module where the component should be shown:\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbMenuModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * Two-level menu example\n * @stacked-example(Two Levels, menu/menu-children.component)\n *\n *\n * Autocollapse menu example\n * @stacked-example(Autocollapse Menu, menu/menu-autocollapse.component)\n *\n * Menu badge\n * @stacked-example(Menu item badge, menu/menu-badge.component)\n *\n * @styles\n *\n * menu-background-color:\n * menu-text-color:\n * menu-text-font-family:\n * menu-text-font-size:\n * menu-text-font-weight:\n * menu-text-line-height:\n * menu-group-text-color:\n * menu-item-border-radius:\n * menu-item-padding:\n * menu-item-hover-background-color:\n * menu-item-hover-cursor:\n * menu-item-hover-text-color:\n * menu-item-icon-hover-color:\n * menu-item-active-background-color:\n * menu-item-active-text-color:\n * menu-item-icon-active-color:\n * menu-item-icon-color:\n * menu-item-icon-margin:\n * menu-item-icon-width:\n * menu-item-divider-color:\n * menu-item-divider-style:\n * menu-item-divider-width:\n * menu-submenu-background-color:\n * menu-submenu-text-color:\n * menu-submenu-margin:\n * menu-submenu-padding:\n * menu-submenu-item-border-color:\n * menu-submenu-item-border-style:\n * menu-submenu-item-border-width:\n * menu-submenu-item-border-radius:\n * menu-submenu-item-padding:\n * menu-submenu-item-hover-background-color:\n * menu-submenu-item-hover-border-color:\n * menu-submenu-item-hover-text-color:\n * menu-submenu-item-icon-hover-color:\n * menu-submenu-item-active-background-color:\n * menu-submenu-item-active-border-color:\n * menu-submenu-item-active-text-color:\n * menu-submenu-item-icon-active-color:\n * menu-submenu-item-active-hover-background-color:\n * menu-submenu-item-active-hover-border-color:\n * menu-submenu-item-active-hover-text-color:\n * menu-submenu-item-icon-active-hover-color:\n */\n\n\nlet NbMenuComponent = /*#__PURE__*/(() => {\n  class NbMenuComponent {\n    constructor(window, platformId, menuInternalService, router) {\n      this.window = window;\n      this.platformId = platformId;\n      this.menuInternalService = menuInternalService;\n      this.router = router;\n      this._autoCollapse = false;\n      this.destroy$ = new Subject();\n    }\n    /**\n     * Collapse all opened submenus on the toggle event\n     * Default value is \"false\"\n     * @type boolean\n     */\n\n\n    get autoCollapse() {\n      return this._autoCollapse;\n    }\n\n    set autoCollapse(value) {\n      this._autoCollapse = convertToBoolProperty(value);\n    }\n\n    ngOnInit() {\n      this.menuInternalService.prepareItems(this.items);\n      this.menuInternalService.onAddItem().pipe(filter(data => this.compareTag(data.tag)), takeUntil(this.destroy$)).subscribe(data => this.onAddItem(data));\n      this.menuInternalService.onNavigateHome().pipe(filter(data => this.compareTag(data.tag)), takeUntil(this.destroy$)).subscribe(() => this.navigateHome());\n      this.menuInternalService.onGetSelectedItem().pipe(filter(data => this.compareTag(data.tag)), takeUntil(this.destroy$)).subscribe(data => {\n        data.listener.next({\n          tag: this.tag,\n          item: this.getSelectedItem(this.items)\n        });\n      });\n      this.menuInternalService.onCollapseAll().pipe(filter(data => this.compareTag(data.tag)), takeUntil(this.destroy$)).subscribe(() => this.collapseAll());\n      this.router.events.pipe(filter(event => event instanceof NavigationEnd), takeUntil(this.destroy$)).subscribe(() => {\n        this.menuInternalService.selectFromUrl(this.items, this.tag, this.autoCollapse);\n      });\n    }\n\n    ngAfterViewInit() {\n      setTimeout(() => this.menuInternalService.selectFromUrl(this.items, this.tag, this.autoCollapse));\n    }\n\n    onAddItem(data) {\n      this.items.push(...data.items);\n      this.menuInternalService.prepareItems(this.items);\n      this.menuInternalService.selectFromUrl(this.items, this.tag, this.autoCollapse);\n    }\n\n    onHoverItem(item) {\n      this.menuInternalService.itemHover(item, this.tag);\n    }\n\n    onToggleSubMenu(item) {\n      if (this.autoCollapse) {\n        this.menuInternalService.collapseAll(this.items, this.tag, item);\n      }\n\n      item.expanded = !item.expanded;\n      this.menuInternalService.submenuToggle(item, this.tag);\n    } // TODO: is not fired on page reload\n\n\n    onSelectItem(item) {\n      this.menuInternalService.selectItem(item, this.items, this.autoCollapse, this.tag);\n    }\n\n    onItemClick(item) {\n      this.menuInternalService.itemClick(item, this.tag);\n    }\n\n    ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n\n    navigateHome() {\n      const homeItem = this.getHomeItem(this.items);\n\n      if (homeItem) {\n        if (homeItem.link) {\n          const extras = {\n            queryParams: homeItem.queryParams,\n            queryParamsHandling: homeItem.queryParamsHandling,\n            fragment: homeItem.fragment,\n            preserveFragment: homeItem.preserveFragment\n          };\n          this.router.navigate([homeItem.link], extras);\n        }\n\n        if (homeItem.url && isPlatformBrowser(this.platformId)) {\n          this.window.location.href = homeItem.url;\n        }\n      }\n    }\n\n    collapseAll() {\n      this.menuInternalService.collapseAll(this.items, this.tag);\n    }\n\n    getHomeItem(items) {\n      for (const item of items) {\n        if (item.home) {\n          return item;\n        }\n\n        const homeItem = item.children && this.getHomeItem(item.children);\n\n        if (homeItem) {\n          return homeItem;\n        }\n      }\n    }\n\n    compareTag(tag) {\n      return !tag || tag === this.tag;\n    }\n\n    getSelectedItem(items) {\n      let selected = null;\n      items.forEach(item => {\n        if (item.selected) {\n          selected = item;\n        }\n\n        if (item.selected && item.children && item.children.length > 0) {\n          selected = this.getSelectedItem(item.children);\n        }\n      });\n      return selected;\n    }\n\n  }\n\n  NbMenuComponent.ɵfac = function NbMenuComponent_Factory(t) {\n    return new (t || NbMenuComponent)(ɵngcc0.ɵɵdirectiveInject(NB_WINDOW), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID), ɵngcc0.ɵɵdirectiveInject(NbMenuInternalService), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.Router));\n  };\n\n  NbMenuComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbMenuComponent,\n    selectors: [[\"nb-menu\"]],\n    inputs: {\n      autoCollapse: \"autoCollapse\",\n      tag: \"tag\",\n      items: \"items\"\n    },\n    decls: 2,\n    vars: 1,\n    consts: [[1, \"menu-items\"], [4, \"ngFor\", \"ngForOf\"], [\"nbMenuItem\", \"\", \"class\", \"menu-item\", 3, \"menuItem\", \"badge\", \"menu-group\", \"hoverItem\", \"toggleSubMenu\", \"selectItem\", \"itemClick\", 4, \"ngIf\"], [\"nbMenuItem\", \"\", 1, \"menu-item\", 3, \"menuItem\", \"badge\", \"hoverItem\", \"toggleSubMenu\", \"selectItem\", \"itemClick\"]],\n    template: function NbMenuComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"ul\", 0);\n        ɵngcc0.ɵɵtemplate(1, NbMenuComponent_ng_container_1_Template, 2, 1, \"ng-container\", 1);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.items);\n      }\n    },\n    directives: [ɵngcc2.NgForOf, ɵngcc2.NgIf, NbMenuItemComponent],\n    styles: [\"[_nghost-%COMP%]    {display:block}[_nghost-%COMP%]     .menu-items, [_nghost-%COMP%]     .menu-item>.menu-items{list-style-type:none;overflow:hidden}[_nghost-%COMP%]     .menu-item a{display:flex;text-decoration:none;align-items:center}[_nghost-%COMP%]     .menu-item a .menu-title{flex:1 0 auto}[dir=rtl]   [_nghost-%COMP%]     .menu-item a .menu-title{text-align:right}[_nghost-%COMP%]     .menu-item nb-badge{position:static}[_nghost-%COMP%]     .menu-group span{display:flex}\"]\n  });\n  return NbMenuComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * Badge is a simple labeling component.\n * It can be used to add additional information to any content or highlight unread items.\n *\n * Element is absolute positioned, so parent should be\n * [positioned element](https://developer.mozilla.org/en-US/docs/Web/CSS/position).\n * It means parent `position` should be set to anything except `static`, e.g. `relative`,\n * `absolute`, `fixed`, or `sticky`.\n *\n * ### Installation\n *\n * Import `NbBadgeModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbBadgeModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * Badge with default position and status(color):\n *\n * ```html\n * <nb-badge text=\"badgeText\"></nb-badge>\n * ```\n *\n * For example, badge can be placed into nb-card header:\n * @stacked-example(Showcase, badge/badge-showcase.component)\n *\n * Badge located on the bottom right with warning status:\n *\n * ```html\n * <nb-badge text=\"badgeText\" status=\"warning\" position=\"bottom right\">\n * </nb-badge>\n * ```\n *\n * @styles\n *\n * badge-border-radius:\n * badge-text-font-family:\n * badge-text-font-size:\n * badge-text-font-weight:\n * badge-text-line-height:\n * badge-padding:\n * badge-basic-background-color:\n * badge-basic-text-color:\n * badge-primary-background-color:\n * badge-primary-text-color:\n * badge-success-background-color:\n * badge-success-text-color:\n * badge-info-background-color:\n * badge-info-text-color:\n * badge-warning-background-color:\n * badge-warning-text-color:\n * badge-danger-background-color:\n * badge-danger-text-color:\n * badge-control-background-color:\n * badge-control-text-color:\n */\n\n\nlet NbBadgeComponent = /*#__PURE__*/(() => {\n  class NbBadgeComponent {\n    constructor(statusService) {\n      this.statusService = statusService;\n      /**\n       * Text to display\n       * @type string\n       */\n\n      this.text = '';\n      this._defaultPosition = 'top right';\n      this._position = this._defaultPosition;\n      /**\n       * Badge status (adds specific styles):\n       * 'basic', 'primary', 'info', 'success', 'warning', 'danger', 'control'\n       */\n\n      this.status = 'basic';\n    }\n    /**\n     * Badge position\n     *\n     * Can be set to any class or to one of predefined positions:\n     * 'top left', 'top right', 'bottom left', 'bottom right',\n     * 'top start', 'top end', 'bottom start', 'bottom end'\n     * @type string\n     */\n\n\n    get position() {\n      return this._position;\n    }\n\n    set position(value) {\n      this._position = value || this._defaultPosition;\n    }\n    /**\n     * Shows badge as a dot. No text is shown.\n     * @type boolean\n     */\n\n\n    get dotMode() {\n      return this._dotMode;\n    }\n\n    set dotMode(value) {\n      this._dotMode = convertToBoolProperty(value);\n    }\n\n    get additionalClasses() {\n      if (this.statusService.isCustomStatus(this.status)) {\n        return [this.statusService.getStatusClass(this.status)];\n      }\n\n      return [];\n    }\n\n    get primary() {\n      return this.status === 'primary';\n    }\n\n    get success() {\n      return this.status === 'success';\n    }\n\n    get info() {\n      return this.status === 'info';\n    }\n\n    get warning() {\n      return this.status === 'warning';\n    }\n\n    get danger() {\n      return this.status === 'danger';\n    }\n\n    get basic() {\n      return this.status === 'basic';\n    }\n\n    get control() {\n      return this.status === 'control';\n    }\n\n    get top() {\n      return this.position.includes('top');\n    }\n\n    get right() {\n      return this.position.includes('right');\n    }\n\n    get bottom() {\n      return this.position.includes('bottom');\n    }\n\n    get left() {\n      return this.position.includes('left');\n    }\n\n    get start() {\n      return this.position.includes('start');\n    }\n\n    get end() {\n      return this.position.includes('end');\n    }\n\n    get center() {\n      return this.position.includes('center');\n    }\n\n  }\n\n  NbBadgeComponent.ɵfac = function NbBadgeComponent_Factory(t) {\n    return new (t || NbBadgeComponent)(ɵngcc0.ɵɵdirectiveInject(NbStatusService));\n  };\n\n  NbBadgeComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbBadgeComponent,\n    selectors: [[\"nb-badge\"]],\n    hostVars: 32,\n    hostBindings: function NbBadgeComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassMap(ctx.additionalClasses);\n        ɵngcc0.ɵɵclassProp(\"dot-mode\", ctx.dotMode)(\"status-primary\", ctx.primary)(\"status-success\", ctx.success)(\"status-info\", ctx.info)(\"status-warning\", ctx.warning)(\"status-danger\", ctx.danger)(\"status-basic\", ctx.basic)(\"status-control\", ctx.control)(\"position-top\", ctx.top)(\"position-right\", ctx.right)(\"position-bottom\", ctx.bottom)(\"position-left\", ctx.left)(\"position-start\", ctx.start)(\"position-end\", ctx.end)(\"position-center\", ctx.center);\n      }\n    },\n    inputs: {\n      text: \"text\",\n      status: \"status\",\n      position: \"position\",\n      dotMode: \"dotMode\"\n    },\n    decls: 1,\n    vars: 1,\n    template: function NbBadgeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtext(0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵtextInterpolate(ctx.dotMode ? \"\" : ctx.text);\n      }\n    },\n    styles: [\"[_nghost-%COMP%]{position:absolute;text-align:center;white-space:nowrap;vertical-align:baseline}.position-top[_nghost-%COMP%]{top:0}.position-right[_nghost-%COMP%]{right:0}.position-bottom[_nghost-%COMP%]{bottom:0}.position-left[_nghost-%COMP%]{left:0}.position-center[_nghost-%COMP%]{top:50%;transform:translateY(-50%)}[dir=ltr]   .position-start[_nghost-%COMP%]{left:0}[dir=rtl]   .position-start[_nghost-%COMP%]{right:0}[dir=ltr]   .position-end[_nghost-%COMP%]{right:0}[dir=rtl]   .position-end[_nghost-%COMP%]{left:0}\"]\n  });\n  return NbBadgeComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nlet NbBadgeModule = /*#__PURE__*/(() => {\n  class NbBadgeModule {}\n\n  NbBadgeModule.ɵfac = function NbBadgeModule_Factory(t) {\n    return new (t || NbBadgeModule)();\n  };\n\n  NbBadgeModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NbBadgeModule\n  });\n  NbBadgeModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n  return NbBadgeModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NbBadgeModule, {\n    declarations: [NbBadgeComponent],\n    exports: [NbBadgeComponent]\n  });\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nconst nbMenuComponents = [NbMenuComponent, NbMenuItemComponent];\nconst NB_MENU_PROVIDERS = [NbMenuService, NbMenuInternalService];\nlet NbMenuModule = /*#__PURE__*/(() => {\n  class NbMenuModule {\n    static forRoot() {\n      return {\n        ngModule: NbMenuModule,\n        providers: [...NB_MENU_PROVIDERS]\n      };\n    }\n\n  }\n\n  NbMenuModule.ɵfac = function NbMenuModule_Factory(t) {\n    return new (t || NbMenuModule)();\n  };\n\n  NbMenuModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NbMenuModule\n  });\n  NbMenuModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[NbSharedModule, NbIconModule, NbBadgeModule]]\n  });\n  return NbMenuModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NbMenuModule, {\n    declarations: [NbMenuComponent, NbMenuItemComponent],\n    imports: [NbSharedModule, NbIconModule, NbBadgeModule],\n    exports: [NbMenuComponent, NbMenuItemComponent]\n  });\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * Route tabset components.\n * Renders tabs inside of a router-outlet.\n *\n * ```ts\n *  tabs = [\n *  {\n *    title: 'Route tab #1',\n *    route: '/pages/description',\n *    icon: 'home',\n *    responsive: true, // hide title before `route-tabs-icon-only-max-width` value\n *  },\n *  {\n *    title: 'Route tab #2',\n *    route: '/pages/images',\n *    }\n *  ];\n *\n *  <nb-route-tabset [tabs]=\"tabs\"></nb-route-tabset>\n * ```\n * ### Installation\n *\n * Import `NbRouteTabsetModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbRouteTabsetModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n *\n * @stacked-example(Route Tabset, tabset/route-tabset-showcase.component)\n *\n * @styles\n *\n * route-tabset-background-color:\n * route-tabset-border-radius:\n * route-tabset-shadow:\n * route-tabset-tab-background-color:\n * route-tabset-tab-padding:\n * route-tabset-tab-text-color:\n * route-tabset-tab-text-font-family:\n * route-tabset-tab-text-font-size:\n * route-tabset-tab-text-font-weight:\n * route-tabset-tab-text-line-height:\n * route-tabset-tab-text-transform:\n * route-tabset-tab-underline-width:\n * route-tabset-tab-underline-color:\n * route-tabset-tab-active-background-color:\n * route-tabset-tab-active-text-color:\n * route-tabset-tab-active-underline-color:\n * route-tabset-tab-focus-background-color:\n * route-tabset-tab-focus-text-color:\n * route-tabset-tab-focus-underline-color:\n * route-tabset-tab-hover-background-color:\n * route-tabset-tab-hover-text-color:\n * route-tabset-tab-hover-underline-color:\n * route-tabset-tab-disabled-background-color:\n * route-tabset-tab-disabled-text-color:\n * route-tabset-tab-disabled-underline-color:\n * route-tabset-divider-color:\n * route-tabset-divider-style:\n * route-tabset-divider-width:\n * route-tabset-scrollbar-color:\n * route-tabset-scrollbar-background-color:\n * route-tabset-scrollbar-width:\n * route-tabset-tab-text-hide-breakpoint:\n */\n\n\nlet NbRouteTabsetComponent = /*#__PURE__*/(() => {\n  class NbRouteTabsetComponent {\n    constructor() {\n      this.fullWidthValue = false;\n      /**\n       * Options passed to `routerLinkActiveOptions` directive which set on tab links.\n       * `{ exact: true }` by default.\n       */\n\n      this.activeLinkOptions = {\n        exact: true\n      };\n      /**\n       * Emits when tab is selected\n       * @type {EventEmitter<any>}\n       */\n\n      this.changeTab = new EventEmitter();\n    }\n    /**\n     * Take full width of a parent\n     * @param {boolean} val\n     */\n\n\n    set fullWidth(val) {\n      this.fullWidthValue = convertToBoolProperty(val);\n    }\n\n    selectTab(tab) {\n      this.changeTab.emit(tab);\n    }\n\n  }\n\n  NbRouteTabsetComponent.ɵfac = function NbRouteTabsetComponent_Factory(t) {\n    return new (t || NbRouteTabsetComponent)();\n  };\n\n  NbRouteTabsetComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbRouteTabsetComponent,\n    selectors: [[\"nb-route-tabset\"]],\n    hostVars: 2,\n    hostBindings: function NbRouteTabsetComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"full-width\", ctx.fullWidthValue);\n      }\n    },\n    inputs: {\n      activeLinkOptions: \"activeLinkOptions\",\n      fullWidth: \"fullWidth\",\n      tabs: \"tabs\"\n    },\n    outputs: {\n      changeTab: \"changeTab\"\n    },\n    decls: 3,\n    vars: 1,\n    consts: [[1, \"route-tabset\"], [4, \"ngFor\", \"ngForOf\"], [\"class\", \"route-tab disabled\", \"tabindex\", \"-1\", 3, \"responsive\", 4, \"ngIf\", \"ngIfElse\"], [\"enabled\", \"\"], [\"tabindex\", \"-1\", 1, \"route-tab\", \"disabled\"], [\"tabindex\", \"-1\", 1, \"tab-link\"], [3, \"config\", 4, \"ngIf\"], [\"class\", \"tab-text\", 4, \"ngIf\"], [3, \"config\"], [1, \"tab-text\"], [\"routerLinkActive\", \"active\", \"tabindex\", \"0\", 1, \"route-tab\", 3, \"routerLink\", \"routerLinkActiveOptions\", \"queryParams\", \"queryParamsHandling\", \"fragment\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"state\", \"click\"], [3, \"icon\", 4, \"ngIf\"], [3, \"icon\"]],\n    template: function NbRouteTabsetComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"ul\", 0);\n        ɵngcc0.ɵɵtemplate(1, NbRouteTabsetComponent_ng_container_1_Template, 4, 2, \"ng-container\", 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(2, \"router-outlet\");\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.tabs);\n      }\n    },\n    directives: [ɵngcc2.NgForOf, ɵngcc5.RouterOutlet, ɵngcc2.NgIf, NbIconComponent, ɵngcc5.RouterLinkActive, ɵngcc5.RouterLink],\n    styles: [\".route-tabset[_ngcontent-%COMP%]{display:flex;flex-direction:row;list-style-type:none;margin:0;padding:0}.route-tabset[_ngcontent-%COMP%]   .route-tab[_ngcontent-%COMP%]{margin-bottom:-1px;text-align:center;padding:0}.route-tabset[_ngcontent-%COMP%]   .route-tab.active[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]::before{display:block}.route-tabset[_ngcontent-%COMP%]   .route-tab[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{position:relative;text-decoration:none;display:inline-block}.route-tabset[_ngcontent-%COMP%]   .route-tab[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]::before{position:absolute;content:'';width:100%;border-radius:3px;bottom:-2px;left:0}.route-tabset[_ngcontent-%COMP%]   .route-tab[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]   nb-icon[_ngcontent-%COMP%]{vertical-align:middle}[dir=ltr]   [_nghost-%COMP%]   .tab-link[_ngcontent-%COMP%]   nb-icon[_ngcontent-%COMP%] + span[_ngcontent-%COMP%]{margin-left:.5rem}[dir=rtl]   [_nghost-%COMP%]   .tab-link[_ngcontent-%COMP%]   nb-icon[_ngcontent-%COMP%] + span[_ngcontent-%COMP%]{margin-right:.5rem}.full-width[_nghost-%COMP%]   .route-tabset[_ngcontent-%COMP%]{justify-content:space-around}\"]\n  });\n  return NbRouteTabsetComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nlet NbRouteTabsetModule = /*#__PURE__*/(() => {\n  class NbRouteTabsetModule {}\n\n  NbRouteTabsetModule.ɵfac = function NbRouteTabsetModule_Factory(t) {\n    return new (t || NbRouteTabsetModule)();\n  };\n\n  NbRouteTabsetModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NbRouteTabsetModule\n  });\n  NbRouteTabsetModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[NbSharedModule, NbIconModule]]\n  });\n  return NbRouteTabsetModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NbRouteTabsetModule, {\n    declarations: [NbRouteTabsetComponent],\n    imports: [NbSharedModule, NbIconModule],\n    exports: [NbRouteTabsetComponent]\n  });\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nconst getSidebarState$ = new Subject();\nconst getSidebarResponsiveState$ = new Subject();\n/**\n * Sidebar service.\n *\n * Root module service to control the sidebar from any part of the app.\n *\n * Allows you to change sidebar state dynamically from any part of the app:\n * @stacked-example(Sidebar State, sidebar/sidebar-toggle.component)\n */\n\nlet NbSidebarService = /*#__PURE__*/(() => {\n  class NbSidebarService {\n    constructor() {\n      this.toggle$ = new Subject();\n      this.expand$ = new Subject();\n      this.collapse$ = new Subject();\n      this.compact$ = new Subject();\n    }\n    /**\n     * Subscribe to toggle events\n     *\n     * @returns Observable<{ compact: boolean, tag: string }>\n     */\n\n\n    onToggle() {\n      return this.toggle$.pipe(share());\n    }\n    /**\n     * Subscribe to expand events\n     * @returns Observable<{ tag: string }>\n     */\n\n\n    onExpand() {\n      return this.expand$.pipe(share());\n    }\n    /**\n     * Subscribe to collapse evens\n     * @returns Observable<{ tag: string }>\n     */\n\n\n    onCollapse() {\n      return this.collapse$.pipe(share());\n    }\n    /**\n     * Subscribe to compact evens\n     * @returns Observable<{ tag: string }>\n     */\n\n\n    onCompact() {\n      return this.compact$.pipe(share());\n    }\n    /**\n     * Toggle a sidebar\n     * @param {boolean} compact\n     * @param {string} tag If you have multiple sidebars on the page, mark them with `tag` input property and pass it here\n     * to specify which sidebar you want to control\n     */\n\n\n    toggle(compact = false, tag) {\n      this.toggle$.next({\n        compact,\n        tag\n      });\n    }\n    /**\n     * Expands a sidebar\n     * @param {string} tag If you have multiple sidebars on the page, mark them with `tag` input property and pass it here\n     * to specify which sidebar you want to control\n     */\n\n\n    expand(tag) {\n      this.expand$.next({\n        tag\n      });\n    }\n    /**\n     * Collapses a sidebar\n     * @param {string} tag If you have multiple sidebars on the page, mark them with `tag` input property and pass it here\n     * to specify which sidebar you want to control\n     */\n\n\n    collapse(tag) {\n      this.collapse$.next({\n        tag\n      });\n    }\n    /**\n     * Makes sidebar compact\n     * @param {string} tag If you have multiple sidebars on the page, mark them with `tag` input property and pass it here\n     * to specify which sidebar you want to control\n     */\n\n\n    compact(tag) {\n      this.compact$.next({\n        tag\n      });\n    }\n    /**\n     * Returns sidebar state observable which emits once\n     * @param {string} tag If you have multiple sidebars on the page, mark them with `tag` input property and pass it here\n     * to specify which sidebar state you need\n     */\n\n\n    getSidebarState(tag) {\n      const observer = new ReplaySubject(1);\n      getSidebarState$.next({\n        observer,\n        tag\n      });\n      return observer.pipe(publish(), refCount());\n    }\n    /**\n     * Returns sidebar state observable which emits once\n     * @param {string} tag If you have multiple sidebars on the page, mark them with `tag` input property and pass it here\n     * to specify which sidebar responsive state you need\n     */\n\n\n    getSidebarResponsiveState(tag) {\n      const observer = new ReplaySubject();\n      getSidebarResponsiveState$.next({\n        observer,\n        tag\n      });\n      return observer.pipe(publish(), refCount());\n    }\n\n  }\n\n  NbSidebarService.ɵfac = function NbSidebarService_Factory(t) {\n    return new (t || NbSidebarService)();\n  };\n\n  NbSidebarService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: NbSidebarService,\n    factory: NbSidebarService.ɵfac\n  });\n  return NbSidebarService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * Sidebar header container.\n *\n * Placeholder which contains a sidebar header content,\n * placed at the very top of the sidebar outside of the scroll area.\n */\n\n\nlet NbSidebarHeaderComponent = /*#__PURE__*/(() => {\n  class NbSidebarHeaderComponent {}\n\n  NbSidebarHeaderComponent.ɵfac = function NbSidebarHeaderComponent_Factory(t) {\n    return new (t || NbSidebarHeaderComponent)();\n  };\n\n  NbSidebarHeaderComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbSidebarHeaderComponent,\n    selectors: [[\"nb-sidebar-header\"]],\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function NbSidebarHeaderComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2\n  });\n  return NbSidebarHeaderComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Sidebar footer container.\n *\n * Placeholder which contains a sidebar footer content,\n * placed at the very bottom of the sidebar outside of the scroll area.\n */\n\n\nlet NbSidebarFooterComponent = /*#__PURE__*/(() => {\n  class NbSidebarFooterComponent {}\n\n  NbSidebarFooterComponent.ɵfac = function NbSidebarFooterComponent_Factory(t) {\n    return new (t || NbSidebarFooterComponent)();\n  };\n\n  NbSidebarFooterComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbSidebarFooterComponent,\n    selectors: [[\"nb-sidebar-footer\"]],\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function NbSidebarFooterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2\n  });\n  return NbSidebarFooterComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Layout sidebar component.\n *\n * @stacked-example(Showcase, sidebar/sidebar-showcase.component)\n *\n * ### Installation\n *\n * Import `NbSidebarModule.forRoot()` to your app module.\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbSidebarModule.forRoot(),\n *   ],\n * })\n * export class AppModule { }\n * ```\n * and `NbSidebarModule` to your feature module where the component should be shown:\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbSidebarModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * Sidebar can be placed on the left or the right side of the layout,\n * or on start/end position of layout (depends on document direction, left to right or right to left)\n * It can be fixed (shown above the content) or can push the layout when opened.\n *\n * There are three states - `expanded`, `collapsed`, `compacted`.\n * By default sidebar content is fixed and saves its position while the page is being scrolled.\n *\n * Compacted sidebar example:\n * @stacked-example(Compacted Sidebar, sidebar/sidebar-compacted.component)\n *\n * Sidebar also supports a `responsive` behavior, listening to window size change and changing its size respectably.\n *\n * In a pair with header it is possible to setup a configuration when header is placed on a side of the sidebar\n * and not on top of it. To achieve this simply put a `subheader` property to the header like this:\n * ```html\n * <nb-layout-header subheader></nb-layout-header>\n * ```\n * @stacked-example(Subheader, layout/layout-sidebar-subheader.component)\n * Note that in such configuration sidebar shadow is removed and header cannot be make `fixed`.\n *\n * @additional-example(Right Sidebar, sidebar/sidebar-right.component)\n * @additional-example(Fixed Sidebar, sidebar/sidebar-fixed.component)\n *\n * @styles\n *\n * sidebar-background-color:\n * sidebar-text-color:\n * sidebar-text-font-family:\n * sidebar-text-font-size:\n * sidebar-text-font-weight:\n * sidebar-text-line-height:\n * sidebar-height:\n * sidebar-width:\n * sidebar-width-compact:\n * sidebar-padding:\n * sidebar-header-height:\n * sidebar-footer-height:\n * sidebar-shadow:\n * sidebar-menu-item-highlight-color:\n * sidebar-scrollbar-background-color:\n * sidebar-scrollbar-color:\n * sidebar-scrollbar-width:\n */\n\n\nlet NbSidebarComponent = /*#__PURE__*/(() => {\n  class NbSidebarComponent {\n    constructor(sidebarService, themeService, element, cd) {\n      this.sidebarService = sidebarService;\n      this.themeService = themeService;\n      this.element = element;\n      this.cd = cd;\n      this.responsiveValueChange$ = new Subject();\n      this.responsiveState = 'pc';\n      this.destroy$ = new Subject();\n      this.containerFixedValue = true;\n      this.fixedValue = false;\n      this.rightValue = false;\n      this.leftValue = true;\n      this.startValue = false;\n      this.endValue = false;\n      this._state = 'expanded';\n      this._responsive = false; // TODO: get width by the key and define only max width for the tablets and mobiles\n\n      /**\n       * Controls on which screen sizes sidebar should be switched to compacted state.\n       * Works only when responsive mode is on.\n       * Default values are `['xs', 'is', 'sm', 'md', 'lg']`.\n       *\n       * @type string[]\n       */\n\n      this.compactedBreakpoints = ['xs', 'is', 'sm', 'md', 'lg'];\n      /**\n       * Controls on which screen sizes sidebar should be switched to collapsed state.\n       * Works only when responsive mode is on.\n       * Default values are `['xs', 'is']`.\n       *\n       * @type string[]\n       */\n\n      this.collapsedBreakpoints = ['xs', 'is'];\n      /**\n       * Emits whenever sidebar state change.\n       */\n\n      this.stateChange = new EventEmitter();\n      /**\n       * Emits whenever sidebar responsive state change.\n       */\n\n      this.responsiveStateChange = new EventEmitter();\n    }\n\n    get expanded() {\n      return this.state === 'expanded';\n    }\n\n    get collapsed() {\n      return this.state === 'collapsed';\n    }\n\n    get compacted() {\n      return this.state === 'compacted';\n    }\n    /**\n     * Places sidebar on the right side\n     * @type {boolean}\n     */\n\n\n    set right(val) {\n      this.rightValue = convertToBoolProperty(val);\n      this.leftValue = !this.rightValue;\n      this.startValue = false;\n      this.endValue = false;\n    }\n    /**\n     * Places sidebar on the left side\n     * @type {boolean}\n     */\n\n\n    set left(val) {\n      this.leftValue = convertToBoolProperty(val);\n      this.rightValue = !this.leftValue;\n      this.startValue = false;\n      this.endValue = false;\n    }\n    /**\n     * Places sidebar on the start edge of layout\n     * @type {boolean}\n     */\n\n\n    set start(val) {\n      this.startValue = convertToBoolProperty(val);\n      this.endValue = !this.startValue;\n      this.leftValue = false;\n      this.rightValue = false;\n    }\n    /**\n     * Places sidebar on the end edge of layout\n     * @type {boolean}\n     */\n\n\n    set end(val) {\n      this.endValue = convertToBoolProperty(val);\n      this.startValue = !this.endValue;\n      this.leftValue = false;\n      this.rightValue = false;\n    }\n    /**\n     * Makes sidebar fixed (shown above the layout content)\n     * @type {boolean}\n     */\n\n\n    set fixed(val) {\n      this.fixedValue = convertToBoolProperty(val);\n    }\n    /**\n     * Makes sidebar container fixed\n     * @type {boolean}\n     */\n\n\n    set containerFixed(val) {\n      this.containerFixedValue = convertToBoolProperty(val);\n    }\n    /**\n     * Initial sidebar state, `expanded`|`collapsed`|`compacted`\n     * @type {string}\n     */\n\n\n    get state() {\n      return this._state;\n    }\n\n    set state(value) {\n      this._state = value;\n    }\n    /**\n     * Makes sidebar listen to media query events and change its behaviour\n     * @type {boolean}\n     */\n\n\n    get responsive() {\n      return this._responsive;\n    }\n\n    set responsive(value) {\n      if (this.responsive !== convertToBoolProperty(value)) {\n        this._responsive = !this.responsive;\n        this.responsiveValueChange$.next(this.responsive);\n      }\n    }\n\n    ngOnInit() {\n      this.sidebarService.onToggle().pipe(filter(({\n        tag\n      }) => !this.tag || this.tag === tag), takeUntil(this.destroy$)).subscribe(({\n        compact\n      }) => this.toggle(compact));\n      this.sidebarService.onExpand().pipe(filter(({\n        tag\n      }) => !this.tag || this.tag === tag), takeUntil(this.destroy$)).subscribe(() => this.expand());\n      this.sidebarService.onCollapse().pipe(filter(({\n        tag\n      }) => !this.tag || this.tag === tag), takeUntil(this.destroy$)).subscribe(() => this.collapse());\n      this.sidebarService.onCompact().pipe(filter(({\n        tag\n      }) => !this.tag || this.tag === tag), takeUntil(this.destroy$)).subscribe(() => this.compact());\n      getSidebarState$.pipe(filter(({\n        tag\n      }) => !this.tag || this.tag === tag), takeUntil(this.destroy$)).subscribe(({\n        observer\n      }) => observer.next(this.state));\n      getSidebarResponsiveState$.pipe(filter(({\n        tag\n      }) => !this.tag || this.tag === tag), takeUntil(this.destroy$)).subscribe(({\n        observer\n      }) => observer.next(this.responsiveState));\n      this.responsiveValueChange$.pipe(filter(responsive => !responsive), takeUntil(this.destroy$)).subscribe(() => this.expand());\n      this.subscribeToMediaQueryChange();\n    }\n\n    ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    } // TODO: this is more of a workaround, should be a better way to make components communicate to each other\n\n\n    onClick(event) {\n      const menu = this.element.nativeElement.querySelector('nb-menu');\n\n      if (menu && menu.contains(event.target)) {\n        const link = this.getMenuLink(event.target);\n\n        if (link && link.nextElementSibling && link.nextElementSibling.classList.contains('menu-items')) {\n          this.sidebarService.expand(this.tag);\n        }\n      }\n    }\n    /**\n     * Collapses the sidebar\n     */\n\n\n    collapse() {\n      this.updateState('collapsed');\n    }\n    /**\n     * Expands the sidebar\n     */\n\n\n    expand() {\n      this.updateState('expanded');\n    }\n    /**\n     * Compacts the sidebar (minimizes)\n     */\n\n\n    compact() {\n      this.updateState('compacted');\n    }\n    /**\n     * Toggles sidebar state (expanded|collapsed|compacted)\n     * @param {boolean} compact If true, then sidebar state will be changed between expanded & compacted,\n     * otherwise - between expanded & collapsed. False by default.\n     *\n     * Toggle sidebar state\n     *\n     * ```ts\n     * this.sidebar.toggle(true);\n     * ```\n     */\n\n\n    toggle(compact = false) {\n      if (this.responsive) {\n        if (this.responsiveState === 'mobile') {\n          compact = false;\n        }\n      }\n\n      if (this.state === 'compacted' || this.state === 'collapsed') {\n        this.updateState('expanded');\n      } else {\n        this.updateState(compact ? 'compacted' : 'collapsed');\n      }\n    }\n\n    subscribeToMediaQueryChange() {\n      combineLatest([this.responsiveValueChange$.pipe(startWith(this.responsive)), this.themeService.onMediaQueryChange()]).pipe(filter(([responsive]) => responsive), map(([, breakpoints]) => breakpoints), takeUntil(this.destroy$)).subscribe(([prev, current]) => {\n        const isCollapsed = this.collapsedBreakpoints.includes(current.name);\n        const isCompacted = this.compactedBreakpoints.includes(current.name);\n        let newResponsiveState;\n\n        if (isCompacted) {\n          this.fixed = this.containerFixedValue;\n          this.compact();\n          newResponsiveState = 'tablet';\n        }\n\n        if (isCollapsed) {\n          this.fixed = true;\n          this.collapse();\n          newResponsiveState = 'mobile';\n        }\n\n        if (!isCollapsed && !isCompacted && (!prev.width || prev.width < current.width)) {\n          this.expand();\n          this.fixed = false;\n          newResponsiveState = 'pc';\n        }\n\n        if (newResponsiveState && newResponsiveState !== this.responsiveState) {\n          this.responsiveState = newResponsiveState;\n          this.responsiveStateChange.emit(this.responsiveState);\n          this.cd.markForCheck();\n        }\n      });\n    }\n\n    getMenuLink(element) {\n      if (!element || element.tagName.toLowerCase() === 'nb-menu') {\n        return;\n      }\n\n      if (element.tagName.toLowerCase() === 'a') {\n        return element;\n      }\n\n      return this.getMenuLink(element.parentElement);\n    }\n\n    updateState(state$$1) {\n      if (this.state !== state$$1) {\n        this.state = state$$1;\n        this.stateChange.emit(this.state);\n        this.cd.markForCheck();\n      }\n    }\n    /**\n     * @deprecated Use `responsive` property instead\n     * @breaking-change Remove @8.0.0\n     */\n\n\n    toggleResponsive(enabled) {\n      this.responsive = enabled;\n    }\n\n  }\n\n  NbSidebarComponent.ɵfac = function NbSidebarComponent_Factory(t) {\n    return new (t || NbSidebarComponent)(ɵngcc0.ɵɵdirectiveInject(NbSidebarService), ɵngcc0.ɵɵdirectiveInject(NbThemeService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n  };\n\n  NbSidebarComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbSidebarComponent,\n    selectors: [[\"nb-sidebar\"]],\n    hostVars: 16,\n    hostBindings: function NbSidebarComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"fixed\", ctx.fixedValue)(\"right\", ctx.rightValue)(\"left\", ctx.leftValue)(\"start\", ctx.startValue)(\"end\", ctx.endValue)(\"expanded\", ctx.expanded)(\"collapsed\", ctx.collapsed)(\"compacted\", ctx.compacted);\n      }\n    },\n    inputs: {\n      compactedBreakpoints: \"compactedBreakpoints\",\n      collapsedBreakpoints: \"collapsedBreakpoints\",\n      right: \"right\",\n      left: \"left\",\n      start: \"start\",\n      end: \"end\",\n      fixed: \"fixed\",\n      containerFixed: \"containerFixed\",\n      state: \"state\",\n      responsive: \"responsive\",\n      tag: \"tag\"\n    },\n    outputs: {\n      stateChange: \"stateChange\",\n      responsiveStateChange: \"responsiveStateChange\"\n    },\n    ngContentSelectors: _c16,\n    decls: 5,\n    vars: 2,\n    consts: [[1, \"main-container\"], [1, \"scrollable\", 3, \"click\"]],\n    template: function NbSidebarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c15);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 1);\n        ɵngcc0.ɵɵlistener(\"click\", function NbSidebarComponent_Template_div_click_2_listener($event) {\n          return ctx.onClick($event);\n        });\n        ɵngcc0.ɵɵprojection(3, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(4, 2);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"main-container-fixed\", ctx.containerFixedValue);\n      }\n    },\n    styles: [\"[_nghost-%COMP%]{display:flex;flex-direction:column;overflow:hidden;z-index:auto;order:0}[_nghost-%COMP%]   .scrollable[_ngcontent-%COMP%]{overflow-y:auto;overflow-x:hidden;flex:1}[_nghost-%COMP%]   .main-container[_ngcontent-%COMP%]{transform:translate3d(0, 0, 0);display:flex;flex-direction:column}[_nghost-%COMP%]   .main-container-fixed[_ngcontent-%COMP%]{position:fixed}.right[_nghost-%COMP%]{margin-right:0;margin-left:auto}[dir=ltr]   .right[_nghost-%COMP%]{order:4}[dir=rtl]   .right[_nghost-%COMP%]{order:0}.end[_nghost-%COMP%]{order:4}[dir=ltr]   .end[_nghost-%COMP%]{margin-right:0;margin-left:auto}[dir=rtl]   .end[_nghost-%COMP%]{margin-left:0;margin-right:auto}.fixed[_nghost-%COMP%]{position:fixed;height:100%;z-index:999;top:0;bottom:0;left:0}.fixed.right[_nghost-%COMP%]{right:0}[dir=ltr]   .fixed.start[_nghost-%COMP%]{left:0}[dir=rtl]   .fixed.start[_nghost-%COMP%]{right:0}[dir=ltr]   .fixed.end[_nghost-%COMP%]{right:0}[dir=rtl]   .fixed.end[_nghost-%COMP%]{left:0}[_nghost-%COMP%]     nb-sidebar-footer{margin-top:auto;display:block}[_nghost-%COMP%]     nb-sidebar-header{display:block}\"],\n    changeDetection: 0\n  });\n  /**\n   * @deprecated Use NbSidebarState type instead\n   * @breaking-change Remove @8.0.0\n   */\n\n  NbSidebarComponent.STATE_EXPANDED = 'expanded';\n  /**\n   * @deprecated Use NbSidebarState type instead\n   * @breaking-change Remove @8.0.0\n   */\n\n  NbSidebarComponent.STATE_COLLAPSED = 'collapsed';\n  /**\n   * @deprecated Use NbSidebarState type instead\n   * @breaking-change Remove @8.0.0\n   */\n\n  NbSidebarComponent.STATE_COMPACTED = 'compacted';\n  /**\n   * @deprecated Use NbSidebarResponsiveState type instead\n   * @breaking-change Remove @8.0.0\n   */\n\n  NbSidebarComponent.RESPONSIVE_STATE_MOBILE = 'mobile';\n  /**\n   * @deprecated Use NbSidebarResponsiveState type instead\n   * @breaking-change Remove @8.0.0\n   */\n\n  NbSidebarComponent.RESPONSIVE_STATE_TABLET = 'tablet';\n  /**\n   * @deprecated Use NbSidebarResponsiveState type instead\n   * @breaking-change Remove @8.0.0\n   */\n\n  NbSidebarComponent.RESPONSIVE_STATE_PC = 'pc';\n  return NbSidebarComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nconst NB_SIDEBAR_COMPONENTS = [NbSidebarComponent, NbSidebarFooterComponent, NbSidebarHeaderComponent];\nconst NB_SIDEBAR_PROVIDERS = [NbSidebarService];\nlet NbSidebarModule = /*#__PURE__*/(() => {\n  class NbSidebarModule {\n    static forRoot() {\n      return {\n        ngModule: NbSidebarModule,\n        providers: [...NB_SIDEBAR_PROVIDERS]\n      };\n    }\n\n  }\n\n  NbSidebarModule.ɵfac = function NbSidebarModule_Factory(t) {\n    return new (t || NbSidebarModule)();\n  };\n\n  NbSidebarModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NbSidebarModule\n  });\n  NbSidebarModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[NbSharedModule]]\n  });\n  return NbSidebarModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NbSidebarModule, {\n    declarations: [NbSidebarComponent, NbSidebarFooterComponent, NbSidebarHeaderComponent],\n    imports: [NbSharedModule],\n    exports: [NbSidebarComponent, NbSidebarFooterComponent, NbSidebarHeaderComponent]\n  });\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * Specific tab container.\n *\n * ```ts\n * <nb-tab tabTitle=\"Users\"\n *   badgeText=\"99+\"\n *   badgeStatus=\"danger\">\n *   <p>List of <strong>users</strong>.</p>\n * </nb-tab>\n ```\n */\n\n\nlet NbTabComponent = /*#__PURE__*/(() => {\n  class NbTabComponent {\n    constructor() {\n      this.activeValue = false;\n      this.responsiveValue = false;\n      this.disabledValue = false;\n      /**\n       * Badge status (adds specific styles):\n       * 'primary', 'info', 'success', 'warning', 'danger'\n       * @param {string} val\n       */\n\n      this.badgeStatus = 'basic';\n      this.init = false;\n    }\n    /**\n     * Use badge dot mode\n     * @type {boolean}\n     */\n\n\n    get badgeDot() {\n      return this._badgeDot;\n    }\n\n    set badgeDot(val) {\n      this._badgeDot = convertToBoolProperty(val);\n    }\n    /**\n     * Item is disabled and cannot be opened.\n     * @type {boolean}\n     */\n\n\n    get disabled() {\n      return this.disabledValue;\n    }\n\n    set disabled(val) {\n      this.disabledValue = convertToBoolProperty(val);\n    }\n    /**\n     * Show only icons when width is smaller than `tabs-icon-only-max-width`\n     * @type {boolean}\n     */\n\n\n    set responsive(val) {\n      this.responsiveValue = convertToBoolProperty(val);\n    }\n\n    get responsive() {\n      return this.responsiveValue;\n    }\n    /**\n     * Specifies active tab\n     * @returns {boolean}\n     */\n\n\n    get active() {\n      return this.activeValue;\n    }\n\n    set active(val) {\n      this.activeValue = convertToBoolProperty(val);\n\n      if (this.activeValue) {\n        this.init = true;\n      }\n    }\n    /**\n     * Lazy load content before tab selection\n     * TODO: rename, as lazy is by default, and this is more `instant load`\n     * @param {boolean} val\n     */\n\n\n    set lazyLoad(val) {\n      this.init = convertToBoolProperty(val);\n    }\n\n  }\n\n  NbTabComponent.ɵfac = function NbTabComponent_Factory(t) {\n    return new (t || NbTabComponent)();\n  };\n\n  NbTabComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbTabComponent,\n    selectors: [[\"nb-tab\"]],\n    hostVars: 4,\n    hostBindings: function NbTabComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"content-active\", ctx.activeValue)(\"disabled\", ctx.disabled);\n      }\n    },\n    inputs: {\n      badgeStatus: \"badgeStatus\",\n      badgeDot: \"badgeDot\",\n      disabled: \"disabled\",\n      responsive: \"responsive\",\n      active: \"active\",\n      lazyLoad: \"lazyLoad\",\n      tabTitle: \"tabTitle\",\n      tabId: \"tabId\",\n      tabIcon: \"tabIcon\",\n      route: \"route\",\n      badgeText: \"badgeText\",\n      badgePosition: \"badgePosition\"\n    },\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 1,\n    consts: [[4, \"ngIf\"]],\n    template: function NbTabComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, NbTabComponent_ng_container_0_Template, 2, 0, \"ng-container\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.init);\n      }\n    },\n    directives: [ɵngcc2.NgIf],\n    encapsulation: 2\n  });\n  return NbTabComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})(); // TODO: Combine tabset with route-tabset, so that we can:\n// - have similar interface\n// - easy to migrate from one to another\n// - can mix them both (route/content tab)\n\n/**\n *\n * Dynamic tabset component.\n * @stacked-example(Showcase, tabset/tabset-showcase.component)\n *\n * Basic tabset example\n *\n * ```html\n * <nb-tabset>\n *  <nb-tab tabTitle=\"Simple Tab #1\">\n *    Tab content 1\n *  </nb-tab>\n *  <nb-tab tabTitle=\"Simple Tab #2\">\n *    Tab content 2\n *  </nb-tab>\n * </nb-tabset>\n * ```\n *\n * ### Installation\n *\n * Import `NbTabsetModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbTabsetModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * It is also possible to set a badge to a particular tab:\n * @stacked-example(Tab With Badge, tabset/tabset-badge.component)\n *\n * and we can set it to full a width of a parent component\n * @stacked-example(Full Width, tabset/tabset-width.component)\n *\n * `tabIcon` should be used to add an icon to the tab. Icon can also be combined with title.\n * `responsive` tab property if set allows you to hide the title on smaller screens\n * (`tabs-icon-only-max-width` property) for better responsive behaviour. You can open the following example and make\n * your screen smaller - titles will be hidden in the last tabset in the list:\n *\n * @stacked-example(Icon, tabset/tabset-icon.component)\n *\n * It is also possible to disable a tab using `disabled` property:\n * @stacked-example(Disabled Tab, tabset/tabset-disabled.component)\n *\n * @styles\n *\n * tabset-background-color:\n * tabset-border-radius:\n * tabset-shadow:\n * tabset-tab-background-color:\n * tabset-tab-padding:\n * tabset-tab-text-color:\n * tabset-tab-text-font-family:\n * tabset-tab-text-font-size:\n * tabset-tab-text-font-weight:\n * tabset-tab-text-line-height:\n * tabset-tab-text-transform:\n * tabset-tab-underline-width:\n * tabset-tab-underline-color:\n * tabset-tab-active-background-color:\n * tabset-tab-active-text-color:\n * tabset-tab-active-underline-color:\n * tabset-tab-focus-background-color:\n * tabset-tab-focus-text-color:\n * tabset-tab-focus-underline-color:\n * tabset-tab-hover-background-color:\n * tabset-tab-hover-text-color:\n * tabset-tab-hover-underline-color:\n * tabset-tab-disabled-background-color:\n * tabset-tab-disabled-text-color:\n * tabset-tab-disabled-underline-color:\n * tabset-divider-color:\n * tabset-divider-style:\n * tabset-divider-width:\n * tabset-content-background-color:\n * tabset-content-padding:\n * tabset-content-text-color:\n * tabset-content-text-font-family:\n * tabset-content-text-font-size:\n * tabset-content-text-font-weight:\n * tabset-content-text-line-height:\n * tabset-scrollbar-color:\n * tabset-scrollbar-background-color:\n * tabset-scrollbar-width:\n * tabset-tab-text-hide-breakpoint:\n */\n\n\nlet NbTabsetComponent = /*#__PURE__*/(() => {\n  class NbTabsetComponent {\n    constructor(route, changeDetectorRef) {\n      this.route = route;\n      this.changeDetectorRef = changeDetectorRef;\n      this.fullWidthValue = false;\n      /**\n       * Emits when tab is selected\n       * @type EventEmitter<any>\n       */\n\n      this.changeTab = new EventEmitter();\n    }\n    /**\n     * Take full width of a parent\n     * @param {boolean} val\n     */\n\n\n    set fullWidth(val) {\n      this.fullWidthValue = convertToBoolProperty(val);\n    } // TODO: refactoring this component, avoid change detection loop\n\n\n    ngAfterContentInit() {\n      this.route.params.pipe(map(params => this.tabs.find(tab => this.routeParam ? tab.route === params[this.routeParam] : tab.active)), delay(0), map(tab => tab || this.tabs.first), filter(tab => !!tab)).subscribe(tabToSelect => {\n        this.selectTab(tabToSelect);\n        this.changeDetectorRef.markForCheck();\n      });\n    } // TODO: navigate to routeParam\n\n\n    selectTab(selectedTab) {\n      if (!selectedTab.disabled) {\n        this.tabs.forEach(tab => tab.active = tab === selectedTab);\n        this.changeTab.emit(selectedTab);\n      }\n    }\n\n  }\n\n  NbTabsetComponent.ɵfac = function NbTabsetComponent_Factory(t) {\n    return new (t || NbTabsetComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc5.ActivatedRoute), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n  };\n\n  NbTabsetComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbTabsetComponent,\n    selectors: [[\"nb-tabset\"]],\n    contentQueries: function NbTabsetComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NbTabComponent, 4);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tabs = _t);\n      }\n    },\n    hostVars: 2,\n    hostBindings: function NbTabsetComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"full-width\", ctx.fullWidthValue);\n      }\n    },\n    inputs: {\n      fullWidth: \"fullWidth\",\n      routeParam: \"routeParam\"\n    },\n    outputs: {\n      changeTab: \"changeTab\"\n    },\n    ngContentSelectors: _c18,\n    decls: 3,\n    vars: 1,\n    consts: [[1, \"tabset\"], [\"class\", \"tab\", 3, \"responsive\", \"active\", \"disabled\", \"click\", \"keyup.space\", \"keyup.enter\", 4, \"ngFor\", \"ngForOf\"], [1, \"tab\", 3, \"click\", \"keyup.space\", \"keyup.enter\"], [\"href\", \"\", \"tabindex\", \"-1\", 1, \"tab-link\", 3, \"click\"], [3, \"config\", 4, \"ngIf\"], [\"class\", \"tab-text\", 4, \"ngIf\"], [3, \"text\", \"dotMode\", \"status\", \"position\", 4, \"ngIf\"], [3, \"config\"], [1, \"tab-text\"], [3, \"text\", \"dotMode\", \"status\", \"position\"]],\n    template: function NbTabsetComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c17);\n        ɵngcc0.ɵɵelementStart(0, \"ul\", 0);\n        ɵngcc0.ɵɵtemplate(1, NbTabsetComponent_li_1_Template, 5, 11, \"li\", 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(2);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.tabs);\n      }\n    },\n    directives: [ɵngcc2.NgForOf, ɵngcc2.NgIf, NbIconComponent, NbBadgeComponent],\n    styles: [\"[_nghost-%COMP%]{display:block}.full-width[_nghost-%COMP%]   .tabset[_ngcontent-%COMP%]{justify-content:space-around}[_nghost-%COMP%]     nb-tab{flex:1;-ms-flex:1 1 auto;overflow:auto;display:none}[_nghost-%COMP%]     nb-tab.content-active{display:block}[_nghost-%COMP%]   .tabset[_ngcontent-%COMP%]{display:flex;flex-direction:row;list-style-type:none;margin:0;padding:0}[_nghost-%COMP%]   .tabset[_ngcontent-%COMP%]   .tab[_ngcontent-%COMP%]{margin-bottom:-1px;text-align:center;position:relative}[_nghost-%COMP%]   .tabset[_ngcontent-%COMP%]   .tab.active[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]::before{display:block}[_nghost-%COMP%]   .tabset[_ngcontent-%COMP%]   .tab[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{display:flex;position:relative;text-decoration:none}[_nghost-%COMP%]   .tabset[_ngcontent-%COMP%]   .tab[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]::before{position:absolute;content:'';width:100%;border-radius:3px;bottom:-2px;left:0}[_nghost-%COMP%]   .tabset[_ngcontent-%COMP%]   .tab[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]   nb-icon[_ngcontent-%COMP%]{vertical-align:middle}[dir=ltr]   [_nghost-%COMP%]   .tabset[_ngcontent-%COMP%]   .tab[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]   nb-icon[_ngcontent-%COMP%] + span[_ngcontent-%COMP%]{margin-left:.5rem}[dir=rtl]   [_nghost-%COMP%]   .tabset[_ngcontent-%COMP%]   .tab[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]   nb-icon[_ngcontent-%COMP%] + span[_ngcontent-%COMP%]{margin-right:.5rem}\"]\n  });\n  return NbTabsetComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nconst NB_TABSET_COMPONENTS = [NbTabsetComponent, NbTabComponent];\nlet NbTabsetModule = /*#__PURE__*/(() => {\n  class NbTabsetModule {}\n\n  NbTabsetModule.ɵfac = function NbTabsetModule_Factory(t) {\n    return new (t || NbTabsetModule)();\n  };\n\n  NbTabsetModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NbTabsetModule\n  });\n  NbTabsetModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[NbSharedModule, NbBadgeModule, NbIconModule]]\n  });\n  return NbTabsetModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NbTabsetModule, {\n    declarations: [NbTabsetComponent, NbTabComponent],\n    imports: [NbSharedModule, NbBadgeModule, NbIconModule],\n    exports: [NbTabsetComponent, NbTabComponent]\n  });\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * Represents a component showing a user avatar (picture) with a user name on the right.\n * @stacked-example(Showcase, user/user-showcase.component)\n *\n * ```ts\n *   <nb-user name=\"John Doe\" title=\"Engineer\"></nb-user>\n * ```\n *\n * ### Installation\n *\n * Import `NbUserModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbUserModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * Available in multiple sizes:\n * @stacked-example(Multiple Sizes, user/user-sizes.component)\n *\n *\n * You can hide unnecessary captions (name, title or both):\n * @stacked-example(Hide captions in user component, user/user-hide-captions.component)\n *\n *\n * You can set custom avatar background-color, user image (as link or BASE64 string) and disable user initials:\n * @stacked-example(Avatar image settings, user/user-avatar-settings.component)\n *\n * Component shape could be controlled with `shape` input.\n * @stacked-example(Shapes, user/user-shape.component)\n *\n * @styles\n *\n * user-picture-box-background-color:\n * user-picture-box-border-color:\n * user-picture-box-border-width:\n * user-initials-text-color:\n * user-initials-text-font-family:\n * user-initials-text-font-weight:\n * user-name-text-color:\n * user-name-text-font-family:\n * user-name-text-font-weight:\n * user-title-text-color:\n * user-title-text-font-family:\n * user-title-text-font-weight:\n * user-rectangle-border-radius:\n * user-semi-round-border-radius:\n * user-round-border-radius:\n * user-tiny-height:\n * user-tiny-width:\n * user-tiny-initials-text-font-size:\n * user-tiny-initials-text-line-height:\n * user-tiny-name-text-font-size:\n * user-tiny-name-text-line-height:\n * user-tiny-title-text-font-size:\n * user-tiny-title-text-line-height:\n * user-small-height:\n * user-small-width:\n * user-small-initials-text-font-size:\n * user-small-initials-text-line-height:\n * user-small-name-text-font-size:\n * user-small-name-text-line-height:\n * user-small-title-text-font-size:\n * user-small-title-text-line-height:\n * user-medium-height:\n * user-medium-width:\n * user-medium-initials-text-font-size:\n * user-medium-initials-text-line-height:\n * user-medium-name-text-font-size:\n * user-medium-name-text-line-height:\n * user-medium-title-text-font-size:\n * user-medium-title-text-line-height:\n * user-large-height:\n * user-large-width:\n * user-large-initials-text-font-size:\n * user-large-initials-text-line-height:\n * user-large-name-text-font-size:\n * user-large-name-text-line-height:\n * user-large-title-text-font-size:\n * user-large-title-text-line-height:\n * user-giant-height:\n * user-giant-width:\n * user-giant-initials-text-font-size:\n * user-giant-initials-text-line-height:\n * user-giant-name-text-font-size:\n * user-giant-name-text-line-height:\n * user-giant-title-text-font-size:\n * user-giant-title-text-line-height:\n */\n\n\nlet NbUserComponent = /*#__PURE__*/(() => {\n  class NbUserComponent {\n    constructor(domSanitizer) {\n      this.domSanitizer = domSanitizer;\n      /**\n       * Specifies a name to be shown on the right of a user picture\n       * @type string\n       */\n\n      this.name = 'Anonymous';\n      /**\n       * Size of the component.\n       * Possible values: `tiny`, `small`, `medium` (default), `large`, 'giant'.\n       */\n\n      this.size = 'medium';\n      /**\n       * Shape of the picture box.\n       * Possible values: `rectangle`, `semi-round`, `round`.\n       */\n\n      this.shape = 'round';\n      this._showName = true;\n      this._showTitle = true;\n      this._showInitials = true;\n      /**\n       * Badge status (adds specific styles):\n       * `primary`, `info`, `success`, `warning`, `danger`\n       * @param {string} val\n       */\n\n      this.badgeStatus = 'basic';\n    }\n    /**\n     * Absolute path to a user picture or base64 image.\n     * User name initials will be shown if no picture specified (JD for John Doe).\n     * @type string\n     */\n\n\n    set picture(value) {\n      this.imageBackgroundStyle = value ? this.domSanitizer.bypassSecurityTrustStyle(`url(${value})`) : null;\n    }\n    /**\n     * Whether to show a user name or not\n     */\n\n\n    get showName() {\n      return this._showName;\n    }\n\n    set showName(val) {\n      this._showName = convertToBoolProperty(val);\n    }\n    /**\n     * Whether to show a user title or not\n     * @type boolean\n     */\n\n\n    get showTitle() {\n      return this._showTitle;\n    }\n\n    set showTitle(val) {\n      this._showTitle = convertToBoolProperty(val);\n    }\n    /**\n     * Whether to show a user initials (if no picture specified) or not\n     * @type boolean\n     */\n\n\n    get showInitials() {\n      return this._showInitials;\n    }\n\n    set showInitials(val) {\n      this._showInitials = convertToBoolProperty(val);\n    }\n    /**\n     * Whether to show only a picture or also show the name and title\n     * @type boolean\n     */\n\n\n    get onlyPicture() {\n      return !this.showName && !this.showTitle;\n    }\n\n    set onlyPicture(val) {\n      this.showName = this.showTitle = !convertToBoolProperty(val);\n    }\n\n    get tiny() {\n      return this.size === 'tiny';\n    }\n\n    get small() {\n      return this.size === 'small';\n    }\n\n    get medium() {\n      return this.size === 'medium';\n    }\n\n    get large() {\n      return this.size === 'large';\n    }\n\n    get giant() {\n      return this.size === 'giant';\n    }\n\n    get rectangle() {\n      return this.shape === 'rectangle';\n    }\n\n    get semiRound() {\n      return this.shape === 'semi-round';\n    }\n\n    get round() {\n      return this.shape === 'round';\n    }\n\n    getInitials() {\n      if (this.name) {\n        const names = this.name.split(' ');\n        return names.map(n => n.charAt(0)).splice(0, 2).join('').toUpperCase();\n      }\n\n      return '';\n    }\n\n  }\n\n  NbUserComponent.ɵfac = function NbUserComponent_Factory(t) {\n    return new (t || NbUserComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.DomSanitizer));\n  };\n\n  NbUserComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbUserComponent,\n    selectors: [[\"nb-user\"]],\n    hostVars: 16,\n    hostBindings: function NbUserComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"size-tiny\", ctx.tiny)(\"size-small\", ctx.small)(\"size-medium\", ctx.medium)(\"size-large\", ctx.large)(\"size-giant\", ctx.giant)(\"shape-rectangle\", ctx.rectangle)(\"shape-semi-round\", ctx.semiRound)(\"shape-round\", ctx.round);\n      }\n    },\n    inputs: {\n      name: \"name\",\n      size: \"size\",\n      shape: \"shape\",\n      badgeStatus: \"badgeStatus\",\n      picture: \"picture\",\n      showName: \"showName\",\n      showTitle: \"showTitle\",\n      showInitials: \"showInitials\",\n      onlyPicture: \"onlyPicture\",\n      title: \"title\",\n      color: \"color\",\n      badgeText: \"badgeText\",\n      badgePosition: \"badgePosition\"\n    },\n    decls: 6,\n    vars: 4,\n    consts: [[1, \"user-container\"], [\"class\", \"user-picture image\", 3, \"background-image\", 4, \"ngIf\"], [\"class\", \"user-picture initials\", 3, \"background-color\", 4, \"ngIf\"], [1, \"info-container\"], [\"class\", \"user-name\", 4, \"ngIf\"], [\"class\", \"user-title\", 4, \"ngIf\"], [1, \"user-picture\", \"image\"], [3, \"text\", \"status\", \"position\", 4, \"ngIf\"], [3, \"text\", \"status\", \"position\"], [1, \"user-picture\", \"initials\"], [4, \"ngIf\"], [1, \"user-name\"], [1, \"user-title\"]],\n    template: function NbUserComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵtemplate(1, NbUserComponent_div_1_Template, 2, 3, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, NbUserComponent_div_2_Template, 3, 4, \"div\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3);\n        ɵngcc0.ɵɵtemplate(4, NbUserComponent_div_4_Template, 2, 1, \"div\", 4);\n        ɵngcc0.ɵɵtemplate(5, NbUserComponent_div_5_Template, 2, 1, \"div\", 5);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.imageBackgroundStyle);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.imageBackgroundStyle);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showName && ctx.name);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showTitle && ctx.title);\n      }\n    },\n    directives: [ɵngcc2.NgIf, NbBadgeComponent],\n    styles: [\"[_nghost-%COMP%]{display:flex}[_nghost-%COMP%]   .user-container[_ngcontent-%COMP%]{position:relative;display:flex;align-items:center}[_nghost-%COMP%]   .user-picture[_ngcontent-%COMP%]{position:relative;flex-shrink:0}[_nghost-%COMP%]   .user-picture.image[_ngcontent-%COMP%]{background-size:cover;background-repeat:no-repeat}[_nghost-%COMP%]   .user-picture.initials[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center}[dir=rtl]   [_nghost-%COMP%]   .user-name[_ngcontent-%COMP%], [dir=rtl]   [_nghost-%COMP%]   .user-title[_ngcontent-%COMP%]{text-align:right}[dir=ltr]   [_nghost-%COMP%]   .info-container[_ngcontent-%COMP%]{margin-left:.5rem}[dir=rtl]   [_nghost-%COMP%]   .info-container[_ngcontent-%COMP%]{margin-right:.5rem}\"]\n  });\n  return NbUserComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nconst NB_USER_COMPONENTS = [NbUserComponent];\nlet NbUserModule = /*#__PURE__*/(() => {\n  class NbUserModule {}\n\n  NbUserModule.ɵfac = function NbUserModule_Factory(t) {\n    return new (t || NbUserModule)();\n  };\n\n  NbUserModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NbUserModule\n  });\n  NbUserModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[NbSharedModule, NbBadgeModule]]\n  });\n  return NbUserModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NbUserModule, {\n    declarations: [NbUserComponent],\n    imports: [NbSharedModule, NbBadgeModule],\n    exports: [NbUserComponent]\n  });\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * Action item, display a link with an icon, or any other content provided instead.\n */\n\n\nlet NbActionComponent = /*#__PURE__*/(() => {\n  class NbActionComponent {\n    constructor() {\n      /**\n       * Optional title for mouseover\n       * @type string\n       */\n      this.title = '';\n      this._disabled = false;\n      /**\n       * Badge status (adds specific styles):\n       * 'basic', 'primary', 'info', 'success', 'warning', 'danger', 'control'\n       * @param {string} val\n       */\n\n      this.badgeStatus = 'basic';\n    }\n    /**\n     * Visually disables the item\n     * @type boolean\n     */\n\n\n    get disabled() {\n      return this._disabled;\n    }\n\n    set disabled(value) {\n      this._disabled = convertToBoolProperty(value);\n    }\n    /**\n     * Use badge dot mode\n     * @type boolean\n     */\n\n\n    get badgeDot() {\n      return this._badgeDot;\n    }\n\n    set badgeDot(value) {\n      this._badgeDot = convertToBoolProperty(value);\n    }\n\n  }\n\n  NbActionComponent.ɵfac = function NbActionComponent_Factory(t) {\n    return new (t || NbActionComponent)();\n  };\n\n  NbActionComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbActionComponent,\n    selectors: [[\"nb-action\"]],\n    hostVars: 2,\n    hostBindings: function NbActionComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"disabled\", ctx.disabled);\n      }\n    },\n    inputs: {\n      title: \"title\",\n      badgeStatus: \"badgeStatus\",\n      disabled: \"disabled\",\n      badgeDot: \"badgeDot\",\n      link: \"link\",\n      href: \"href\",\n      icon: \"icon\",\n      badgeText: \"badgeText\",\n      badgePosition: \"badgePosition\"\n    },\n    ngContentSelectors: _c0,\n    decls: 5,\n    vars: 2,\n    consts: [[4, \"ngIf\", \"ngIfElse\"], [\"projectedContent\", \"\"], [\"badgeTemplate\", \"\"], [\"class\", \"icon-container\", 3, \"routerLink\", \"title\", 4, \"ngIf\"], [\"class\", \"icon-container\", 3, \"href\", \"title\", 4, \"ngIf\"], [\"class\", \"icon-container\", \"href\", \"#\", 3, \"title\", \"click\", 4, \"ngIf\"], [1, \"icon-container\", 3, \"routerLink\", \"title\"], [3, \"config\"], [3, \"ngTemplateOutlet\"], [1, \"icon-container\", 3, \"href\", \"title\"], [\"href\", \"#\", 1, \"icon-container\", 3, \"title\", \"click\"], [3, \"text\", \"dotMode\", \"status\", \"position\", 4, \"ngIf\"], [3, \"text\", \"dotMode\", \"status\", \"position\"]],\n    template: function NbActionComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, NbActionComponent_ng_container_0_Template, 4, 3, \"ng-container\", 0);\n        ɵngcc0.ɵɵtemplate(1, NbActionComponent_ng_template_1_Template, 2, 1, \"ng-template\", null, 1, ɵngcc0.ɵɵtemplateRefExtractor);\n        ɵngcc0.ɵɵtemplate(3, NbActionComponent_ng_template_3_Template, 1, 1, \"ng-template\", null, 2, ɵngcc0.ɵɵtemplateRefExtractor);\n      }\n\n      if (rf & 2) {\n        const _r1 = ɵngcc0.ɵɵreference(2);\n\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.icon)(\"ngIfElse\", _r1);\n      }\n    },\n    directives: [ɵngcc2.NgIf, ɵngcc5.RouterLinkWithHref, NbIconComponent, ɵngcc2.NgTemplateOutlet, NbBadgeComponent],\n    styles: [\"[_nghost-%COMP%]{background:transparent;display:flex;align-items:center;position:relative}.disabled[_nghost-%COMP%]{cursor:not-allowed}.disabled[_nghost-%COMP%]   a[_ngcontent-%COMP%], .disabled[_nghost-%COMP%]   nb-icon[_ngcontent-%COMP%]{cursor:not-allowed}nb-actions.full-width[_nghost-%COMP%], nb-actions.full-width   [_nghost-%COMP%]{justify-content:center;width:100%}a.icon-container[_ngcontent-%COMP%]{position:relative}a.icon-container[_ngcontent-%COMP%]:hover, a.icon-container[_ngcontent-%COMP%]:focus{text-decoration:none}nb-icon[_ngcontent-%COMP%]:hover{cursor:pointer}\"]\n  });\n  return NbActionComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Shows a horizontal list of actions, available in multiple sizes.\n * Aligns items vertically.\n *\n * @stacked-example(Showcase, action/action-showcase.component)\n *\n * Basic actions setup:\n * ```html\n * <nb-actions size=\"small\">\n *   <nb-action icon=\"nb-search\"></nb-action>\n *   <nb-action icon=\"nb-power-circled\"></nb-action>\n *   <nb-action icon=\"nb-person\"></nb-action>\n * </nb-actions>\n * ```\n * ### Installation\n *\n * Import `NbActionsModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbActionsModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * Multiple sizes example:\n * @stacked-example(Multiple Sizes, action/action-sizes.component)\n *\n * It is also possible to specify a `badge` value:\n *\n * @stacked-example(Action Badge, action/action-badge.component)\n *\n * and we can set it to full a width of a parent component\n * @stacked-example(Full Width, action/action-width.component)\n *\n * Action dot mode\n * @stacked-example(Action badge in dot mode, action/action-dot-mode.component)\n *\n * @styles\n *\n * actions-background-color:\n * actions-divider-color:\n * actions-divider-style:\n * actions-divider-width:\n * actions-icon-color:\n * actions-text-color:\n * actions-text-font-family:\n * actions-text-font-weight:\n * actions-text-line-height:\n * actions-disabled-icon-color:\n * actions-disabled-text-color:\n * actions-tiny-height:\n * actions-tiny-icon-height:\n * actions-tiny-padding:\n * actions-tiny-text-font-size:\n * actions-small-height:\n * actions-small-icon-height:\n * actions-small-padding:\n * actions-small-text-font-size:\n * actions-medium-height:\n * actions-medium-icon-height:\n * actions-medium-padding:\n * actions-medium-text-font-size:\n * actions-large-height:\n * actions-large-icon-height:\n * actions-large-padding:\n * actions-large-text-font-size:\n * actions-giant-height:\n * actions-giant-icon-height:\n * actions-giant-padding:\n * actions-giant-text-font-size:\n */\n\n\nlet NbActionsComponent = /*#__PURE__*/(() => {\n  class NbActionsComponent {\n    constructor() {\n      this._size = 'small';\n      this._fullWidth = false;\n    }\n    /**\n     * Size of the component: 'tiny', 'small' (default), 'medium', 'large', 'giant'\n     */\n\n\n    get size() {\n      return this._size;\n    }\n\n    set size(value) {\n      this._size = value;\n    }\n    /**\n     * Component will fill full width of the container\n     */\n\n\n    get fullWidth() {\n      return this._fullWidth;\n    }\n\n    set fullWidth(value) {\n      this._fullWidth = convertToBoolProperty(value);\n    }\n\n    get tiny() {\n      return this.size === 'tiny';\n    }\n\n    get small() {\n      return this.size === 'small';\n    }\n\n    get medium() {\n      return this.size === 'medium';\n    }\n\n    get large() {\n      return this.size === 'large';\n    }\n\n    get giant() {\n      return this.size === 'giant';\n    }\n\n  }\n\n  NbActionsComponent.ɵfac = function NbActionsComponent_Factory(t) {\n    return new (t || NbActionsComponent)();\n  };\n\n  NbActionsComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbActionsComponent,\n    selectors: [[\"nb-actions\"]],\n    hostVars: 12,\n    hostBindings: function NbActionsComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"full-width\", ctx.fullWidth)(\"size-tiny\", ctx.tiny)(\"size-small\", ctx.small)(\"size-medium\", ctx.medium)(\"size-large\", ctx.large)(\"size-giant\", ctx.giant);\n      }\n    },\n    inputs: {\n      size: \"size\",\n      fullWidth: \"fullWidth\"\n    },\n    ngContentSelectors: _c20,\n    decls: 1,\n    vars: 0,\n    template: function NbActionsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c19);\n        ɵngcc0.ɵɵprojection(0);\n      }\n    },\n    styles: [\"[_nghost-%COMP%]{display:flex;align-items:center}\"]\n  });\n  return NbActionsComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nconst NB_ACTIONS_COMPONENTS = [NbActionComponent, NbActionsComponent];\nlet NbActionsModule = /*#__PURE__*/(() => {\n  class NbActionsModule {}\n\n  NbActionsModule.ɵfac = function NbActionsModule_Factory(t) {\n    return new (t || NbActionsModule)();\n  };\n\n  NbActionsModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NbActionsModule\n  });\n  NbActionsModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[NbSharedModule, NbBadgeModule, NbIconModule]]\n  });\n  return NbActionsModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NbActionsModule, {\n    declarations: [NbActionComponent, NbActionsComponent],\n    imports: [NbSharedModule, NbBadgeModule, NbIconModule],\n    exports: [NbActionComponent, NbActionsComponent]\n  });\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * Search component service, connects your code to a page-level search component.\n */\n\n\nlet NbSearchService = /*#__PURE__*/(() => {\n  class NbSearchService {\n    constructor() {\n      this.searchSubmittings$ = new Subject();\n      this.searchActivations$ = new Subject();\n      this.searchDeactivations$ = new Subject();\n      this.searchInput$ = new Subject();\n    }\n    /***\n     * Activate (open) search component\n     * @param {string} searchType\n     * @param {string} tag\n     */\n\n\n    activateSearch(searchType, tag) {\n      this.searchActivations$.next({\n        searchType,\n        tag\n      });\n    }\n    /**\n     * Deactibate (close) search component\n     * @param {string} searchType\n     * @param {string} tag\n     */\n\n\n    deactivateSearch(searchType, tag) {\n      this.searchDeactivations$.next({\n        searchType,\n        tag\n      });\n    }\n    /**\n     * Trigger search submit\n     * @param {string} term\n     * @param {string} tag\n     */\n\n\n    submitSearch(term, tag) {\n      this.searchSubmittings$.next({\n        term,\n        tag\n      });\n    }\n    /**\n     * Trigger search submit by input event\n     * @param {string} term\n     * @param {string} tag\n     */\n\n\n    searchInput(term, tag) {\n      this.searchInput$.next({\n        term,\n        tag\n      });\n    }\n    /**\n     * Subscribe to 'activate' event\n     * @returns Observable<{searchType: string; tag?: string}>\n     */\n\n\n    onSearchActivate() {\n      return this.searchActivations$.pipe(share());\n    }\n    /**\n     * Subscribe to 'deactivate' event\n     * @returns Observable<{searchType: string; tag?: string}>\n     */\n\n\n    onSearchDeactivate() {\n      return this.searchDeactivations$.pipe(share());\n    }\n    /**\n     * Subscribe to 'submit' event (when submit button clicked)\n     * @returns Observable<{term: string; tag?: string}>\n     */\n\n\n    onSearchSubmit() {\n      return this.searchSubmittings$.pipe(share());\n    }\n    /**\n     * Subscribe to input event\n     * @returns Observable<{term: string; tag?: string}>\n     */\n\n\n    onSearchInput() {\n      return this.searchInput$.pipe(share());\n    }\n\n  }\n\n  NbSearchService.ɵfac = function NbSearchService_Factory(t) {\n    return new (t || NbSearchService)();\n  };\n\n  NbSearchService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: NbSearchService,\n    factory: NbSearchService.ɵfac\n  });\n  return NbSearchService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * search-field-component is used under the hood by nb-search component\n * can't be used itself\n */\n\n\nlet NbSearchFieldComponent = /*#__PURE__*/(() => {\n  class NbSearchFieldComponent {\n    constructor() {\n      this.show = false;\n      this.close = new EventEmitter();\n      this.search = new EventEmitter();\n      this.searchInput = new EventEmitter();\n    }\n\n    get showClass() {\n      return this.show;\n    }\n\n    get modalZoomin() {\n      return this.type === NbSearchFieldComponent.TYPE_MODAL_ZOOMIN;\n    }\n\n    get rotateLayout() {\n      return this.type === NbSearchFieldComponent.TYPE_ROTATE_LAYOUT;\n    }\n\n    get modalMove() {\n      return this.type === NbSearchFieldComponent.TYPE_MODAL_MOVE;\n    }\n\n    get curtain() {\n      return this.type === NbSearchFieldComponent.TYPE_CURTAIN;\n    }\n\n    get columnCurtain() {\n      return this.type === NbSearchFieldComponent.TYPE_COLUMN_CURTAIN;\n    }\n\n    get modalDrop() {\n      return this.type === NbSearchFieldComponent.TYPE_MODAL_DROP;\n    }\n\n    get modalHalf() {\n      return this.type === NbSearchFieldComponent.TYPE_MODAL_HALF;\n    }\n\n    ngOnChanges({\n      show\n    }) {\n      const becameHidden = !show.isFirstChange() && show.currentValue === false;\n\n      if (becameHidden && this.inputElement) {\n        this.inputElement.nativeElement.value = '';\n      }\n\n      this.focusInput();\n    }\n\n    ngAfterViewInit() {\n      this.focusInput();\n    }\n\n    emitClose() {\n      this.close.emit();\n    }\n\n    submitSearch(term) {\n      if (term) {\n        this.search.emit(term);\n      }\n    }\n\n    emitSearchInput(term) {\n      this.searchInput.emit(term);\n    }\n\n    focusInput() {\n      if (this.show && this.inputElement) {\n        this.inputElement.nativeElement.focus();\n      }\n    }\n\n  }\n\n  NbSearchFieldComponent.ɵfac = function NbSearchFieldComponent_Factory(t) {\n    return new (t || NbSearchFieldComponent)();\n  };\n\n  NbSearchFieldComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbSearchFieldComponent,\n    selectors: [[\"nb-search-field\"]],\n    viewQuery: function NbSearchFieldComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c21, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.inputElement = _t.first);\n      }\n    },\n    hostVars: 16,\n    hostBindings: function NbSearchFieldComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"show\", ctx.showClass)(\"modal-zoomin\", ctx.modalZoomin)(\"rotate-layout\", ctx.rotateLayout)(\"modal-move\", ctx.modalMove)(\"curtain\", ctx.curtain)(\"column-curtain\", ctx.columnCurtain)(\"modal-drop\", ctx.modalDrop)(\"modal-half\", ctx.modalHalf);\n      }\n    },\n    inputs: {\n      show: \"show\",\n      type: \"type\",\n      placeholder: \"placeholder\",\n      hint: \"hint\"\n    },\n    outputs: {\n      close: \"close\",\n      search: \"search\",\n      searchInput: \"searchInput\"\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature],\n    decls: 10,\n    vars: 2,\n    consts: [[1, \"search\", 3, \"keyup.esc\"], [\"nbButton\", \"\", \"ghost\", \"\", 1, \"close-button\", 3, \"click\"], [\"icon\", \"close-outline\", \"pack\", \"nebular-essentials\"], [1, \"form-wrapper\"], [1, \"form\", 3, \"keyup.enter\"], [1, \"form-content\"], [\"autocomplete\", \"off\", \"tabindex\", \"-1\", 1, \"search-input\", 3, \"input\", \"blur\"], [\"searchInput\", \"\"], [1, \"info\"]],\n    template: function NbSearchFieldComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = ɵngcc0.ɵɵgetCurrentView();\n\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵlistener(\"keyup.esc\", function NbSearchFieldComponent_Template_div_keyup_esc_0_listener() {\n          return ctx.emitClose();\n        });\n        ɵngcc0.ɵɵelementStart(1, \"button\", 1);\n        ɵngcc0.ɵɵlistener(\"click\", function NbSearchFieldComponent_Template_button_click_1_listener() {\n          return ctx.emitClose();\n        });\n        ɵngcc0.ɵɵelement(2, \"nb-icon\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3);\n        ɵngcc0.ɵɵelementStart(4, \"form\", 4);\n        ɵngcc0.ɵɵlistener(\"keyup.enter\", function NbSearchFieldComponent_Template_form_keyup_enter_4_listener() {\n          ɵngcc0.ɵɵrestoreView(_r1);\n\n          const _r0 = ɵngcc0.ɵɵreference(7);\n\n          return ctx.submitSearch(_r0.value);\n        });\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5);\n        ɵngcc0.ɵɵelementStart(6, \"input\", 6, 7);\n        ɵngcc0.ɵɵlistener(\"input\", function NbSearchFieldComponent_Template_input_input_6_listener() {\n          ɵngcc0.ɵɵrestoreView(_r1);\n\n          const _r0 = ɵngcc0.ɵɵreference(7);\n\n          return ctx.emitSearchInput(_r0.value);\n        })(\"blur\", function NbSearchFieldComponent_Template_input_blur_6_listener() {\n          return ctx.focusInput();\n        });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(8, \"span\", 8);\n        ɵngcc0.ɵɵtext(9);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(6);\n        ɵngcc0.ɵɵattribute(\"placeholder\", ctx.placeholder);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵtextInterpolate(ctx.hint);\n      }\n    },\n    directives: [NbButtonComponent, NbIconComponent, ɵngcc6.ɵNgNoValidate, ɵngcc6.NgControlStatusGroup, ɵngcc6.NgForm],\n    styles: [\"[_nghost-%COMP%]   button[_ngcontent-%COMP%]{margin:0;padding:0;cursor:pointer;border:none;background:none}[_nghost-%COMP%]   button[_ngcontent-%COMP%]:focus{box-shadow:none;outline:none}[_nghost-%COMP%]   input[_ngcontent-%COMP%]{border-top:0;border-right:0;border-left:0;background:transparent;border-radius:0;line-height:1;display:inline-block;box-sizing:border-box;padding:0.05rem 0;-webkit-appearance:none}[_nghost-%COMP%]   input[_ngcontent-%COMP%]:focus{outline:none}[_nghost-%COMP%]   input[_ngcontent-%COMP%]::placeholder{opacity:0.3}[_nghost-%COMP%]   span[_ngcontent-%COMP%]{font-size:90%;font-weight:bold;display:block;width:75%;margin:0 auto;padding:0.85rem 0;text-align:right}.modal-zoomin[_nghost-%COMP%]{display:block}.modal-zoomin[_nghost-%COMP%]   .search[_ngcontent-%COMP%]{display:flex;flex-direction:column;justify-content:center;align-items:center;text-align:center;position:fixed;z-index:1050;top:0;left:0;width:100%;height:100vh;pointer-events:none;opacity:0;transition:opacity 0.5s}.modal-zoomin[_nghost-%COMP%]   .search[_ngcontent-%COMP%]::before, .modal-zoomin[_nghost-%COMP%]   .search[_ngcontent-%COMP%]::after{content:'';position:absolute;width:calc(100% + 15px);height:calc(100% + 15px);pointer-events:none}.modal-zoomin[_nghost-%COMP%]   .search[_ngcontent-%COMP%]::before{top:0;left:0;border-right-width:0;border-bottom-width:0;transform:translate3d(-15px, -15px, 0)}.modal-zoomin[_nghost-%COMP%]   .search[_ngcontent-%COMP%]::after{right:0;bottom:0;border-top-width:0;border-left-width:0;transform:translate3d(15px, 15px, 0)}.modal-zoomin[_nghost-%COMP%]   .search[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{position:absolute;top:3rem;font-size:2.5rem}[dir=ltr]   .modal-zoomin[_nghost-%COMP%]   .search[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{right:3rem}[dir=rtl]   .modal-zoomin[_nghost-%COMP%]   .search[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{left:3rem}.modal-zoomin[_nghost-%COMP%]   .search[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{font-size:10vw;width:75%}.modal-zoomin[_nghost-%COMP%]   .search[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{opacity:0;transform:scale3d(0.8, 0.8, 1);transition:opacity 0.5s, transform 0.5s}.modal-zoomin[_nghost-%COMP%]   .search[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{opacity:0;transform:scale3d(0.8, 0.8, 1);transition:opacity 0.5s, transform 0.5s}.modal-zoomin.show[_nghost-%COMP%]   .search[_ngcontent-%COMP%]{pointer-events:auto;opacity:1}.modal-zoomin.show[_nghost-%COMP%]   .search[_ngcontent-%COMP%]::before, .modal-zoomin.show[_nghost-%COMP%]   .search[_ngcontent-%COMP%]::after{transform:translate3d(0, 0, 0);transition:transform 0.5s}.modal-zoomin.show[_nghost-%COMP%]   .search[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{opacity:1;transform:scale3d(1, 1, 1)}.modal-zoomin.show[_nghost-%COMP%]   .search[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{opacity:1;transform:scale3d(1, 1, 1)}@media screen and (max-width: 40rem){.modal-zoomin[_nghost-%COMP%]   form[_ngcontent-%COMP%]{margin:5rem 0 1rem}.modal-zoomin[_nghost-%COMP%]   span[_ngcontent-%COMP%]{text-align:left}}\", \"nb-layout.rotate-layout{position:fixed;overflow:hidden;width:100%}  nb-layout.rotate-layout .scrollable-container{position:relative;z-index:10001;transition:transform 0.5s cubic-bezier(0.2, 1, 0.3, 1)}  nb-layout.rotate-layout.with-search .scrollable-container{transition:transform 0.5s cubic-bezier(0.2, 1, 0.3, 1);transform-origin:50vw 50vh;transform:perspective(1000px) translate3d(0, 50vh, 0) rotate3d(1, 0, 0, 30deg);pointer-events:none}.rotate-layout[_nghost-%COMP%]{position:absolute;display:block;width:100vw;height:100vh;pointer-events:none;opacity:0;transition-property:opacity;transition-delay:0.4s}.rotate-layout[_nghost-%COMP%]   .search[_ngcontent-%COMP%]{display:flex;flex-direction:column;justify-content:center;align-items:center;text-align:center;z-index:1050;position:fixed;top:0;left:0;width:100%;height:50vh;pointer-events:none;opacity:0;transition:opacity 0.5s;transition-timing-function:cubic-bezier(0.2, 1, 0.3, 1)}.rotate-layout[_nghost-%COMP%]   .search[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{position:absolute;top:3rem;font-size:2.5rem;opacity:0;transform:scale3d(0.8, 0.8, 1);transition:opacity 0.5s, transform 0.5s;transition-timing-function:cubic-bezier(0.2, 1, 0.3, 1)}[dir=ltr]   .rotate-layout[_nghost-%COMP%]   .search[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{right:3rem}[dir=rtl]   .rotate-layout[_nghost-%COMP%]   .search[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{left:3rem}.rotate-layout[_nghost-%COMP%]   .search[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{margin:5rem 0;opacity:0;transform:scale3d(0.7, 0.7, 1);transition:opacity 0.5s, transform 0.5s;transition-timing-function:cubic-bezier(0.2, 1, 0.3, 1)}.rotate-layout[_nghost-%COMP%]   .search[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{font-size:7vw;width:75%}.rotate-layout.show[_nghost-%COMP%]{opacity:1;transition-delay:0s}.rotate-layout.show[_nghost-%COMP%]   .search[_ngcontent-%COMP%]{pointer-events:auto;opacity:1}.rotate-layout.show[_nghost-%COMP%]   .search[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{opacity:1;transform:scale3d(1, 1, 1)}.rotate-layout.show[_nghost-%COMP%]   .search[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{opacity:1;transform:scale3d(1, 1, 1)}\", \"nb-layout.modal-move .layout{transition:transform 0.5s}  nb-layout.modal-move.with-search .layout{transform:scale3d(0.8, 0.8, 1);pointer-events:none}.modal-move[_nghost-%COMP%]   .search[_ngcontent-%COMP%]{display:flex;flex-direction:column;justify-content:center;align-items:center;text-align:center;position:fixed;z-index:1050;top:0;left:0;width:100%;height:100vh;pointer-events:none;opacity:0;transition:opacity 0.5s}.modal-move[_nghost-%COMP%]   .search[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{position:absolute;top:3rem;font-size:2.5rem;opacity:0;transition:opacity 0.5s}[dir=ltr]   .modal-move[_nghost-%COMP%]   .search[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{right:3rem}[dir=rtl]   .modal-move[_nghost-%COMP%]   .search[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{left:3rem}.modal-move[_nghost-%COMP%]   .search[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{margin:5rem 0;opacity:0;transform:scale3d(0.8, 0.8, 1);transition:opacity 0.5s, transform 0.5s}.modal-move[_nghost-%COMP%]   .search[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{font-size:10vw;width:75%;transform:scale3d(0, 1, 1);transform-origin:0 50%;transition:transform 0.3s}.modal-move.show[_nghost-%COMP%]   .search[_ngcontent-%COMP%]{pointer-events:auto;opacity:1}.modal-move.show[_nghost-%COMP%]   .search[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{opacity:1}.modal-move.show[_nghost-%COMP%]   .search[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{opacity:1;transform:scale3d(1, 1, 1)}.modal-move.show[_nghost-%COMP%]   .search[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{transform:scale3d(1, 1, 1);transition-duration:0.5s}@media screen and (max-width: 40rem){.modal-move[_nghost-%COMP%]   span[_ngcontent-%COMP%]{text-align:left}}\", \".curtain[_nghost-%COMP%]   .search[_ngcontent-%COMP%]{position:fixed;z-index:1050;top:0;left:100%;overflow:hidden;height:100vh;width:100%;padding:3rem;pointer-events:none;transition:transform 0.3s;transition-delay:0.4s;transition-timing-function:ease-out}.curtain[_nghost-%COMP%]   .search[_ngcontent-%COMP%]::after{content:'';position:absolute;top:0;left:0;width:100%;height:100%;transition:transform 0.3s;transition-timing-function:ease-out}.curtain[_nghost-%COMP%]   .search[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{font-size:2.5rem;position:absolute;top:3rem;transition:opacity 0.1s;transition-delay:0.3s}[dir=ltr]   .curtain[_nghost-%COMP%]   .search[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{right:3rem}[dir=rtl]   .curtain[_nghost-%COMP%]   .search[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{left:3rem}.curtain[_nghost-%COMP%]   .search[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{width:50%;opacity:0;transform:scale3d(0.8, 0.8, 1);transition:opacity 0.5s, transform 0.5s}.curtain[_nghost-%COMP%]   .search[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{width:100%;font-size:6vw}.curtain.show[_nghost-%COMP%]   .search[_ngcontent-%COMP%]{width:100%;pointer-events:auto;transform:translate3d(-100%, 0, 0);transition-delay:0s}.curtain.show[_nghost-%COMP%]   .search[_ngcontent-%COMP%]::after{transform:translate3d(100%, 0, 0);transition-delay:0.4s}.curtain.show[_nghost-%COMP%]   .search[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{opacity:1;transform:scale3d(1, 1, 1)}.curtain.show[_nghost-%COMP%]   .search[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{opacity:1;transform:scale3d(1, 1, 1)}@media screen and (max-width: 40em){.curtain[_nghost-%COMP%]   span[_ngcontent-%COMP%]{width:90%}.curtain[_nghost-%COMP%]   input[_ngcontent-%COMP%]{font-size:2em;width:90%}}  nb-layout.curtain .scrollable-container{position:relative;z-index:0}\", \"nb-layout.column-curtain.with-search .layout{pointer-events:none}.column-curtain[_nghost-%COMP%]{display:block;position:fixed;z-index:1050;top:0;left:50%;overflow:hidden;width:50%;height:100vh;pointer-events:none}.column-curtain[_nghost-%COMP%]::before{content:'';position:absolute;top:0;left:0;width:100%;height:100%;transform:scale3d(0, 1, 1);transform-origin:0 50%;transition:transform 0.3s;transition-timing-function:cubic-bezier(0.86, 0, 0.07, 1)}.column-curtain[_nghost-%COMP%]   .search[_ngcontent-%COMP%]{position:relative;padding:2.5rem 1.5rem 0;background:transparent}.column-curtain[_nghost-%COMP%]   .search[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{position:absolute;top:2rem;font-size:2.5rem;opacity:0;transition:opacity 0.5s}[dir=ltr]   .column-curtain[_nghost-%COMP%]   .search[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{right:2rem}[dir=rtl]   .column-curtain[_nghost-%COMP%]   .search[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{left:2rem}.column-curtain[_nghost-%COMP%]   .search[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{width:85%;transform:translate3d(-150%, 0, 0);transition:transform 0.3s}.column-curtain[_nghost-%COMP%]   .search[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{font-size:2.5rem;width:100%}.column-curtain[_nghost-%COMP%]   .search[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{font-size:85%}.column-curtain.show[_nghost-%COMP%]{pointer-events:auto}.column-curtain.show[_nghost-%COMP%]::before{transform:scale3d(1, 1, 1)}.column-curtain.show[_nghost-%COMP%]   .search[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{transform:translate3d(0, 0, 0);transition-delay:0.15s;transition-timing-function:cubic-bezier(0.86, 0, 0.07, 1)}.column-curtain.show[_nghost-%COMP%]   .search[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{opacity:1;z-index:100}@media screen and (max-width: 40rem){.column-curtain[_nghost-%COMP%]   span[_ngcontent-%COMP%]{width:90%}.column-curtain[_nghost-%COMP%]   input[_ngcontent-%COMP%]{font-size:2rem;width:90%}}\", \"nb-layout.modal-drop .layout{position:relative;transition:transform 0.4s, opacity 0.4s;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1)}  nb-layout.modal-drop.with-search .layout{opacity:0;transform:scale3d(0.9, 0.9, 1);pointer-events:none}.modal-drop[_nghost-%COMP%]   .search[_ngcontent-%COMP%]{display:flex;flex-direction:column;justify-content:center;align-items:center;text-align:center;z-index:1050;position:fixed;top:0;left:0;width:100%;height:100vh;background:none;pointer-events:none}.modal-drop[_nghost-%COMP%]   .search[_ngcontent-%COMP%]::before{content:'';position:absolute;top:0;right:0;width:100%;height:100%;opacity:0;transition:opacity 0.4s}.modal-drop[_nghost-%COMP%]   .search[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{font-size:2.5rem;position:absolute;top:3rem;display:block;opacity:0;transition:opacity 0.4s}[dir=ltr]   .modal-drop[_nghost-%COMP%]   .search[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{right:3rem}[dir=rtl]   .modal-drop[_nghost-%COMP%]   .search[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{left:3rem}.modal-drop[_nghost-%COMP%]   .search[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{position:relative;margin:5rem 0 2rem}.modal-drop[_nghost-%COMP%]   .search[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{font-size:6vw;width:60%;padding:0.25rem;text-align:center;opacity:0;transition:opacity 0.4s}.modal-drop[_nghost-%COMP%]   .search[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{position:relative;z-index:9;display:block;width:60%;padding:0.85rem 0;opacity:0;transform:translate3d(0, -50px, 0);transition:opacity 0.4s, transform 0.4s}.modal-drop[_nghost-%COMP%]   .search[_ngcontent-%COMP%]   .form-content[_ngcontent-%COMP%]{position:relative;z-index:10;overflow:hidden;transform:translate3d(0, -50px, 0);transition:transform 0.4s}.modal-drop[_nghost-%COMP%]   .search[_ngcontent-%COMP%]   .form-content[_ngcontent-%COMP%]::after{content:'';position:absolute;top:0;left:20%;width:60%;height:105%;opacity:0;transform-origin:50% 0}.modal-drop.show[_nghost-%COMP%]   .search[_ngcontent-%COMP%]{pointer-events:auto}.modal-drop.show[_nghost-%COMP%]   .search[_ngcontent-%COMP%]::before{opacity:1}.modal-drop.show[_nghost-%COMP%]   .search[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{opacity:1}.modal-drop.show[_nghost-%COMP%]   .search[_ngcontent-%COMP%]   .form-content[_ngcontent-%COMP%]{transform:translate3d(0, 0, 0);transition:none}.modal-drop.show[_nghost-%COMP%]   .search[_ngcontent-%COMP%]   .form-content[_ngcontent-%COMP%]::after{animation:scaleUpDown 0.8s cubic-bezier(0.4, 0, 0.2, 1) forwards}.modal-drop.show[_nghost-%COMP%]   .search[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{opacity:1;transition:opacity 0s 0.4s}.modal-drop.show[_nghost-%COMP%]   .search[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{opacity:1;transform:translate3d(0, 0, 0);transition-delay:0.4s;transition-timing-function:ease-out}@keyframes scaleUpDown{0%{opacity:1;transform:scale3d(1, 0, 1)}50%{transform:scale3d(1, 1, 1);transform-origin:50% 0;transition-timing-function:ease-out}50.1%{transform-origin:50% 100%;transition-timing-function:ease-out}100%{opacity:1;transform:scale3d(1, 0, 1);transform-origin:50% 100%;transition-timing-function:ease-out}}@media screen and (max-width: 40rem){.modal-drop[_nghost-%COMP%]   form[_ngcontent-%COMP%]{margin:2rem 0}.modal-drop[_nghost-%COMP%]   input[_ngcontent-%COMP%]{width:100%;left:0}}\", \"nb-layout.modal-half .layout{transition:transform 0.6s, opacity 0.6s;transition-timing-function:cubic-bezier(0.2, 1, 0.3, 1)}  nb-layout.modal-half.with-search .layout{transform:scale3d(0.8, 0.8, 1);pointer-events:none}.modal-half[_nghost-%COMP%]   .search[_ngcontent-%COMP%]{text-align:center;position:fixed;z-index:1050;top:0;left:0;overflow:hidden;width:100%;height:100vh;background:none;pointer-events:none}.modal-half[_nghost-%COMP%]   .search[_ngcontent-%COMP%]::before{content:'';position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;opacity:0;transition:opacity 0.6s;transition-timing-function:cubic-bezier(0.2, 1, 0.3, 1)}.modal-half[_nghost-%COMP%]   .search[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{font-size:2.5rem;position:absolute;top:3rem;display:block;z-index:100;opacity:0;transform:scale3d(0.8, 0.8, 1);transition:opacity 0.6s, transform 0.6s;transition-timing-function:cubic-bezier(0.2, 1, 0.3, 1)}[dir=ltr]   .modal-half[_nghost-%COMP%]   .search[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{right:3rem}[dir=rtl]   .modal-half[_nghost-%COMP%]   .search[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{left:3rem}.modal-half[_nghost-%COMP%]   .search[_ngcontent-%COMP%]   .form-wrapper[_ngcontent-%COMP%]{position:absolute;display:flex;justify-content:center;align-items:center;width:100%;height:50%;transition:transform 0.6s;transition-timing-function:cubic-bezier(0.2, 1, 0.3, 1);transform:translate3d(0, -100%, 0)}.modal-half[_nghost-%COMP%]   .search[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{width:75%;margin:0 auto}.modal-half[_nghost-%COMP%]   .search[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{font-size:7vw;width:100%}.modal-half.show[_nghost-%COMP%]   .search[_ngcontent-%COMP%]{pointer-events:auto}.modal-half.show[_nghost-%COMP%]   .search[_ngcontent-%COMP%]::before{opacity:1}.modal-half.show[_nghost-%COMP%]   .search[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{opacity:1;transform:scale3d(1, 1, 1)}.modal-half.show[_nghost-%COMP%]   .search[_ngcontent-%COMP%]   .form-wrapper[_ngcontent-%COMP%]{transform:translate3d(0, 0, 0)}\"],\n    changeDetection: 0\n  });\n  NbSearchFieldComponent.TYPE_MODAL_ZOOMIN = 'modal-zoomin';\n  NbSearchFieldComponent.TYPE_ROTATE_LAYOUT = 'rotate-layout';\n  NbSearchFieldComponent.TYPE_MODAL_MOVE = 'modal-move';\n  NbSearchFieldComponent.TYPE_CURTAIN = 'curtain';\n  NbSearchFieldComponent.TYPE_COLUMN_CURTAIN = 'column-curtain';\n  NbSearchFieldComponent.TYPE_MODAL_DROP = 'modal-drop';\n  NbSearchFieldComponent.TYPE_MODAL_HALF = 'modal-half';\n  return NbSearchFieldComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Beautiful full-page search control.\n *\n * @stacked-example(Showcase, search/search-showcase.component)\n *\n * Basic setup:\n *\n * ```ts\n *  <nb-search type=\"rotate-layout\"></nb-search>\n * ```\n * ### Installation\n *\n * Import `NbSearchModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbSearchModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * Several animation types are available:\n * modal-zoomin, rotate-layout, modal-move, curtain, column-curtain, modal-drop, modal-half\n *\n * It is also possible to handle search event using `NbSearchService`:\n *\n * @stacked-example(Search Event, search/search-event.component)\n *\n * @styles\n *\n * search-background-color:\n * search-divider-color:\n * search-divider-style:\n * search-divider-width:\n * search-extra-background-color:\n * search-text-color:\n * search-text-font-family:\n * search-text-font-size:\n * search-text-font-weight:\n * search-text-line-height:\n * search-placeholder-text-color:\n * search-info-text-color:\n * search-info-text-font-family:\n * search-info-text-font-size:\n * search-info-text-font-weight:\n * search-info-text-line-height:\n */\n\n\nlet NbSearchComponent = /*#__PURE__*/(() => {\n  class NbSearchComponent {\n    constructor(searchService, themeService, router, overlayService, changeDetector) {\n      this.searchService = searchService;\n      this.themeService = themeService;\n      this.router = router;\n      this.overlayService = overlayService;\n      this.changeDetector = changeDetector;\n      this.destroy$ = new Subject();\n      this.showSearchField = false;\n      /**\n       * Search input placeholder\n       * @type {string}\n       */\n\n      this.placeholder = 'Search...';\n      /**\n       * Hint showing under the input field to improve user experience\n       *\n       * @type {string}\n       */\n\n      this.hint = 'Hit enter to search';\n    }\n\n    ngOnInit() {\n      this.router.events.pipe(filter(event => event instanceof NavigationEnd), takeUntil(this.destroy$)).subscribe(() => this.hideSearch());\n      this.searchService.onSearchActivate().pipe(filter(data => !this.tag || data.tag === this.tag), takeUntil(this.destroy$)).subscribe(() => this.openSearch());\n      this.searchService.onSearchDeactivate().pipe(filter(data => !this.tag || data.tag === this.tag), takeUntil(this.destroy$)).subscribe(() => this.hideSearch());\n    }\n\n    ngOnDestroy() {\n      if (this.overlayRef && this.overlayRef.hasAttached()) {\n        this.removeLayoutClasses();\n        this.overlayRef.detach();\n      }\n\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n\n    openSearch() {\n      if (!this.overlayRef) {\n        this.overlayRef = this.overlayService.create();\n        this.overlayRef.attach(this.searchFieldPortal);\n      }\n\n      this.themeService.appendLayoutClass(this.type);\n      of(null).pipe(delay(0)).subscribe(() => {\n        this.themeService.appendLayoutClass('with-search');\n        this.showSearchField = true;\n        this.changeDetector.detectChanges();\n      });\n    }\n\n    hideSearch() {\n      this.removeLayoutClasses();\n      this.showSearchField = false;\n      this.changeDetector.detectChanges();\n      this.searchButton.nativeElement.focus();\n    }\n\n    search(term) {\n      this.searchService.submitSearch(term, this.tag);\n      this.hideSearch();\n    }\n\n    emitInput(term) {\n      this.searchService.searchInput(term, this.tag);\n    }\n\n    emitActivate() {\n      this.searchService.activateSearch(this.type, this.tag);\n    }\n\n    emitDeactivate() {\n      this.searchService.deactivateSearch(this.type, this.tag);\n    }\n\n    removeLayoutClasses() {\n      this.themeService.removeLayoutClass('with-search');\n      of(null).pipe(delay(500)).subscribe(() => {\n        this.themeService.removeLayoutClass(this.type);\n      });\n    }\n\n  }\n\n  NbSearchComponent.ɵfac = function NbSearchComponent_Factory(t) {\n    return new (t || NbSearchComponent)(ɵngcc0.ɵɵdirectiveInject(NbSearchService), ɵngcc0.ɵɵdirectiveInject(NbThemeService), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.Router), ɵngcc0.ɵɵdirectiveInject(NbOverlayService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n  };\n\n  NbSearchComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbSearchComponent,\n    selectors: [[\"nb-search\"]],\n    viewQuery: function NbSearchComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(NbPortalDirective, 5);\n        ɵngcc0.ɵɵviewQuery(_c22, 5, ElementRef);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.searchFieldPortal = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.searchButton = _t.first);\n      }\n    },\n    inputs: {\n      placeholder: \"placeholder\",\n      hint: \"hint\",\n      tag: \"tag\",\n      type: \"type\"\n    },\n    decls: 4,\n    vars: 0,\n    consts: [[\"nbButton\", \"\", \"ghost\", \"\", 1, \"start-search\", 3, \"click\"], [\"searchButton\", \"\"], [\"icon\", \"search-outline\", \"pack\", \"nebular-essentials\"], [3, \"show\", \"type\", \"placeholder\", \"hint\", \"search\", \"searchInput\", \"close\", 4, \"nbPortal\"], [3, \"show\", \"type\", \"placeholder\", \"hint\", \"search\", \"searchInput\", \"close\"]],\n    template: function NbSearchComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"button\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function NbSearchComponent_Template_button_click_0_listener() {\n          return ctx.emitActivate();\n        });\n        ɵngcc0.ɵɵelement(2, \"nb-icon\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(3, NbSearchComponent_nb_search_field_3_Template, 1, 4, \"nb-search-field\", 3);\n      }\n    },\n    directives: [NbButtonComponent, NbIconComponent, NbPortalDirective, NbSearchFieldComponent],\n    styles: [\"[_nghost-%COMP%]   button[_ngcontent-%COMP%]{font-size:2rem;margin:0 auto;padding:0;cursor:pointer;border:none;background:none}[_nghost-%COMP%]   button[_ngcontent-%COMP%]:focus{box-shadow:none;outline:none}  nb-layout.with-search .scrollable-container{position:relative;z-index:0}\"],\n    changeDetection: 0\n  });\n  return NbSearchComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nlet NbSearchModule = /*#__PURE__*/(() => {\n  class NbSearchModule {}\n\n  NbSearchModule.ɵfac = function NbSearchModule_Factory(t) {\n    return new (t || NbSearchModule)();\n  };\n\n  NbSearchModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NbSearchModule\n  });\n  NbSearchModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    providers: [NbSearchService],\n    imports: [[NbSharedModule, NbOverlayModule, NbIconModule, NbButtonModule]]\n  });\n  return NbSearchModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NbSearchModule, {\n    declarations: [NbSearchComponent, NbSearchFieldComponent],\n    imports: [NbSharedModule, NbOverlayModule, NbIconModule, NbButtonModule],\n    exports: [NbSearchComponent, NbSearchFieldComponent]\n  });\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * Styled checkbox component\n *\n * @stacked-example(Showcase, checkbox/checkbox-showcase.component)\n *\n * ### Installation\n *\n * Import `NbCheckboxComponent` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbCheckboxModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * Checkbox is available in multiple colors using `status` property:\n * @stacked-example(Colored Checkboxes, checkbox/checkbox-status.component)\n *\n * Indeterminate state is also supported:\n * @stacked-example(Indeterminate Checkbox, checkbox/checkbox-indeterminate.component)\n *\n * Checkbox can be disabled via `disabled` attribute.\n * @stacked-example(Disabled Checkbox, checkbox/checkbox-disabled.component)\n *\n * @styles\n *\n * checkbox-height:\n * checkbox-width:\n * checkbox-border-style:\n * checkbox-border-width:\n * checkbox-border-radius:\n * checkbox-outline-width:\n * checkbox-outline-color:\n * checkbox-text-font-family:\n * checkbox-text-font-size:\n * checkbox-text-font-weight:\n * checkbox-text-line-height:\n * checkbox-text-space:\n * checkbox-padding:\n * checkbox-focus-inset-shadow-length:\n * checkbox-basic-text-color:\n * checkbox-basic-background-color:\n * checkbox-basic-border-color:\n * checkbox-basic-checked-background-color:\n * checkbox-basic-checked-border-color:\n * checkbox-basic-checked-checkmark-color:\n * checkbox-basic-indeterminate-background-color:\n * checkbox-basic-indeterminate-border-color:\n * checkbox-basic-indeterminate-checkmark-color:\n * checkbox-basic-focus-background-color:\n * checkbox-basic-focus-border-color:\n * checkbox-basic-focus-checked-background-color:\n * checkbox-basic-focus-checked-border-color:\n * checkbox-basic-hover-background-color:\n * checkbox-basic-hover-border-color:\n * checkbox-basic-hover-checked-background-color:\n * checkbox-basic-hover-checked-border-color:\n * checkbox-basic-active-background-color:\n * checkbox-basic-active-border-color:\n * checkbox-basic-active-checked-background-color:\n * checkbox-basic-active-checked-border-color:\n * checkbox-basic-disabled-background-color:\n * checkbox-basic-disabled-border-color:\n * checkbox-basic-disabled-checkmark-color:\n * checkbox-basic-disabled-text-color:\n * checkbox-basic-disabled-checked-background-color:\n * checkbox-primary-text-color:\n * checkbox-primary-background-color:\n * checkbox-primary-border-color:\n * checkbox-primary-checked-background-color:\n * checkbox-primary-checked-border-color:\n * checkbox-primary-checked-checkmark-color:\n * checkbox-primary-indeterminate-background-color:\n * checkbox-primary-indeterminate-border-color:\n * checkbox-primary-indeterminate-checkmark-color:\n * checkbox-primary-focus-background-color:\n * checkbox-primary-focus-border-color:\n * checkbox-primary-focus-checked-background-color:\n * checkbox-primary-focus-checked-border-color:\n * checkbox-primary-hover-background-color:\n * checkbox-primary-hover-border-color:\n * checkbox-primary-hover-checked-background-color:\n * checkbox-primary-hover-checked-border-color:\n * checkbox-primary-active-background-color:\n * checkbox-primary-active-border-color:\n * checkbox-primary-active-checked-background-color:\n * checkbox-primary-active-checked-border-color:\n * checkbox-primary-disabled-background-color:\n * checkbox-primary-disabled-border-color:\n * checkbox-primary-disabled-checkmark-color:\n * checkbox-primary-disabled-text-color:\n * checkbox-primary-disabled-checked-background-color:\n * checkbox-success-text-color:\n * checkbox-success-background-color:\n * checkbox-success-border-color:\n * checkbox-success-checked-background-color:\n * checkbox-success-checked-border-color:\n * checkbox-success-checked-checkmark-color:\n * checkbox-success-indeterminate-background-color:\n * checkbox-success-indeterminate-border-color:\n * checkbox-success-indeterminate-checkmark-color:\n * checkbox-success-focus-background-color:\n * checkbox-success-focus-border-color:\n * checkbox-success-focus-checked-background-color:\n * checkbox-success-focus-checked-border-color:\n * checkbox-success-hover-background-color:\n * checkbox-success-hover-border-color:\n * checkbox-success-hover-checked-background-color:\n * checkbox-success-hover-checked-border-color:\n * checkbox-success-active-background-color:\n * checkbox-success-active-border-color:\n * checkbox-success-active-checked-background-color:\n * checkbox-success-active-checked-border-color:\n * checkbox-success-disabled-background-color:\n * checkbox-success-disabled-border-color:\n * checkbox-success-disabled-checkmark-color:\n * checkbox-success-disabled-text-color:\n * checkbox-success-disabled-checked-background-color:\n * checkbox-info-text-color:\n * checkbox-info-background-color:\n * checkbox-info-border-color:\n * checkbox-info-checked-background-color:\n * checkbox-info-checked-border-color:\n * checkbox-info-checked-checkmark-color:\n * checkbox-info-indeterminate-background-color:\n * checkbox-info-indeterminate-border-color:\n * checkbox-info-indeterminate-checkmark-color:\n * checkbox-info-focus-background-color:\n * checkbox-info-focus-border-color:\n * checkbox-info-focus-checked-background-color:\n * checkbox-info-focus-checked-border-color:\n * checkbox-info-hover-background-color:\n * checkbox-info-hover-border-color:\n * checkbox-info-hover-checked-background-color:\n * checkbox-info-hover-checked-border-color:\n * checkbox-info-active-background-color:\n * checkbox-info-active-border-color:\n * checkbox-info-active-checked-background-color:\n * checkbox-info-active-checked-border-color:\n * checkbox-info-disabled-background-color:\n * checkbox-info-disabled-border-color:\n * checkbox-info-disabled-checkmark-color:\n * checkbox-info-disabled-text-color:\n * checkbox-info-disabled-checked-background-color:\n * checkbox-warning-text-color:\n * checkbox-warning-background-color:\n * checkbox-warning-border-color:\n * checkbox-warning-checked-background-color:\n * checkbox-warning-checked-border-color:\n * checkbox-warning-checked-checkmark-color:\n * checkbox-warning-indeterminate-background-color:\n * checkbox-warning-indeterminate-border-color:\n * checkbox-warning-indeterminate-checkmark-color:\n * checkbox-warning-focus-background-color:\n * checkbox-warning-focus-border-color:\n * checkbox-warning-focus-checked-background-color:\n * checkbox-warning-focus-checked-border-color:\n * checkbox-warning-hover-background-color:\n * checkbox-warning-hover-border-color:\n * checkbox-warning-hover-checked-background-color:\n * checkbox-warning-hover-checked-border-color:\n * checkbox-warning-active-background-color:\n * checkbox-warning-active-border-color:\n * checkbox-warning-active-checked-background-color:\n * checkbox-warning-active-checked-border-color:\n * checkbox-warning-disabled-background-color:\n * checkbox-warning-disabled-border-color:\n * checkbox-warning-disabled-checkmark-color:\n * checkbox-warning-disabled-text-color:\n * checkbox-warning-disabled-checked-background-color:\n * checkbox-danger-text-color:\n * checkbox-danger-background-color:\n * checkbox-danger-border-color:\n * checkbox-danger-checked-background-color:\n * checkbox-danger-checked-border-color:\n * checkbox-danger-checked-checkmark-color:\n * checkbox-danger-indeterminate-background-color:\n * checkbox-danger-indeterminate-border-color:\n * checkbox-danger-indeterminate-checkmark-color:\n * checkbox-danger-focus-background-color:\n * checkbox-danger-focus-border-color:\n * checkbox-danger-focus-checked-background-color:\n * checkbox-danger-focus-checked-border-color:\n * checkbox-danger-hover-background-color:\n * checkbox-danger-hover-border-color:\n * checkbox-danger-hover-checked-background-color:\n * checkbox-danger-hover-checked-border-color:\n * checkbox-danger-active-background-color:\n * checkbox-danger-active-border-color:\n * checkbox-danger-active-checked-background-color:\n * checkbox-danger-active-checked-border-color:\n * checkbox-danger-disabled-background-color:\n * checkbox-danger-disabled-border-color:\n * checkbox-danger-disabled-checkmark-color:\n * checkbox-danger-disabled-text-color:\n * checkbox-danger-disabled-checked-background-color:\n * checkbox-control-text-color:\n * checkbox-control-background-color:\n * checkbox-control-border-color:\n * checkbox-control-checked-background-color:\n * checkbox-control-checked-border-color:\n * checkbox-control-checked-checkmark-color:\n * checkbox-control-indeterminate-background-color:\n * checkbox-control-indeterminate-border-color:\n * checkbox-control-indeterminate-checkmark-color:\n * checkbox-control-focus-background-color:\n * checkbox-control-focus-border-color:\n * checkbox-control-focus-checked-background-color:\n * checkbox-control-focus-checked-border-color:\n * checkbox-control-hover-background-color:\n * checkbox-control-hover-border-color:\n * checkbox-control-hover-checked-background-color:\n * checkbox-control-hover-checked-border-color:\n * checkbox-control-active-background-color:\n * checkbox-control-active-border-color:\n * checkbox-control-active-checked-background-color:\n * checkbox-control-active-checked-border-color:\n * checkbox-control-disabled-background-color:\n * checkbox-control-disabled-border-color:\n * checkbox-control-disabled-checkmark-color:\n * checkbox-control-disabled-text-color:\n * checkbox-control-disabled-checked-background-color:\n */\n\n\nlet NbCheckboxComponent = /*#__PURE__*/(() => {\n  class NbCheckboxComponent {\n    constructor(changeDetector, renderer, hostElement, zone, statusService) {\n      this.changeDetector = changeDetector;\n      this.renderer = renderer;\n      this.hostElement = hostElement;\n      this.zone = zone;\n      this.statusService = statusService;\n\n      this.onChange = () => {};\n\n      this.onTouched = () => {};\n\n      this._checked = false;\n      this._disabled = false;\n      /**\n       * Checkbox status.\n       * Possible values are: `basic`, `primary`, `success`, `warning`, `danger`, `info`, `control`.\n       */\n\n      this.status = 'basic';\n      this._indeterminate = false;\n      /**\n       * Output when checked state is changed by a user\n       * @type EventEmitter<boolean>\n       */\n\n      this.checkedChange = new EventEmitter();\n    }\n\n    get checked() {\n      return this._checked;\n    }\n\n    set checked(value) {\n      this._checked = convertToBoolProperty(value);\n    }\n    /**\n     * Controls input disabled state\n     */\n\n\n    get disabled() {\n      return this._disabled;\n    }\n\n    set disabled(value) {\n      this._disabled = convertToBoolProperty(value);\n    }\n    /**\n     * Controls checkbox indeterminate state\n     */\n\n\n    get indeterminate() {\n      return this._indeterminate;\n    }\n\n    set indeterminate(value) {\n      this._indeterminate = convertToBoolProperty(value);\n    }\n\n    get primary() {\n      return this.status === 'primary';\n    }\n\n    get success() {\n      return this.status === 'success';\n    }\n\n    get warning() {\n      return this.status === 'warning';\n    }\n\n    get danger() {\n      return this.status === 'danger';\n    }\n\n    get info() {\n      return this.status === 'info';\n    }\n\n    get basic() {\n      return this.status === 'basic';\n    }\n\n    get control() {\n      return this.status === 'control';\n    }\n\n    get additionalClasses() {\n      if (this.statusService.isCustomStatus(this.status)) {\n        return [this.statusService.getStatusClass(this.status)];\n      }\n\n      return [];\n    }\n\n    ngAfterViewInit() {\n      // TODO: #2254\n      this.zone.runOutsideAngular(() => setTimeout(() => {\n        this.renderer.addClass(this.hostElement.nativeElement, 'nb-transition');\n      }));\n    }\n\n    registerOnChange(fn) {\n      this.onChange = fn;\n    }\n\n    registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n\n    writeValue(val) {\n      this._checked = val;\n      this.changeDetector.markForCheck();\n    }\n\n    setDisabledState(val) {\n      this.disabled = convertToBoolProperty(val);\n      this.changeDetector.markForCheck();\n    }\n\n    setTouched() {\n      this.onTouched();\n    }\n\n    updateValueAndIndeterminate(event) {\n      const input = event.target;\n      this.checked = input.checked;\n      this.checkedChange.emit(this.checked);\n      this.onChange(this.checked);\n      this.indeterminate = input.indeterminate;\n    }\n\n  }\n\n  NbCheckboxComponent.ɵfac = function NbCheckboxComponent_Factory(t) {\n    return new (t || NbCheckboxComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(NbStatusService));\n  };\n\n  NbCheckboxComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbCheckboxComponent,\n    selectors: [[\"nb-checkbox\"]],\n    hostVars: 16,\n    hostBindings: function NbCheckboxComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassMap(ctx.additionalClasses);\n        ɵngcc0.ɵɵclassProp(\"status-primary\", ctx.primary)(\"status-success\", ctx.success)(\"status-warning\", ctx.warning)(\"status-danger\", ctx.danger)(\"status-info\", ctx.info)(\"status-basic\", ctx.basic)(\"status-control\", ctx.control);\n      }\n    },\n    inputs: {\n      status: \"status\",\n      checked: \"checked\",\n      disabled: \"disabled\",\n      indeterminate: \"indeterminate\"\n    },\n    outputs: {\n      checkedChange: \"checkedChange\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NbCheckboxComponent),\n      multi: true\n    }])],\n    ngContentSelectors: _c0,\n    decls: 7,\n    vars: 9,\n    consts: [[1, \"label\"], [\"type\", \"checkbox\", 1, \"native-input\", \"visually-hidden\", 3, \"disabled\", \"checked\", \"indeterminate\", \"change\", \"blur\", \"click\"], [1, \"custom-checkbox\"], [\"icon\", \"minus-bold-outline\", \"pack\", \"nebular-essentials\", 4, \"ngIf\"], [\"icon\", \"checkmark-bold-outline\", \"pack\", \"nebular-essentials\", 4, \"ngIf\"], [1, \"text\"], [\"icon\", \"minus-bold-outline\", \"pack\", \"nebular-essentials\"], [\"icon\", \"checkmark-bold-outline\", \"pack\", \"nebular-essentials\"]],\n    template: function NbCheckboxComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"input\", 1);\n        ɵngcc0.ɵɵlistener(\"change\", function NbCheckboxComponent_Template_input_change_1_listener($event) {\n          return ctx.updateValueAndIndeterminate($event);\n        })(\"blur\", function NbCheckboxComponent_Template_input_blur_1_listener() {\n          return ctx.setTouched();\n        })(\"click\", function NbCheckboxComponent_Template_input_click_1_listener($event) {\n          return $event.stopPropagation();\n        });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(2, \"span\", 2);\n        ɵngcc0.ɵɵtemplate(3, NbCheckboxComponent_nb_icon_3_Template, 1, 0, \"nb-icon\", 3);\n        ɵngcc0.ɵɵtemplate(4, NbCheckboxComponent_nb_icon_4_Template, 1, 0, \"nb-icon\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(5, \"span\", 5);\n        ɵngcc0.ɵɵprojection(6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"disabled\", ctx.disabled)(\"checked\", ctx.checked)(\"indeterminate\", ctx.indeterminate);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"indeterminate\", ctx.indeterminate)(\"checked\", ctx.checked);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.indeterminate);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.checked && !ctx.indeterminate);\n      }\n    },\n    directives: [ɵngcc2.NgIf, NbIconComponent],\n    styles: [\"[_nghost-%COMP%]   .label[_ngcontent-%COMP%]{position:relative;display:inline-flex;align-items:center;margin:0;min-height:inherit}[_nghost-%COMP%]   .custom-checkbox[_ngcontent-%COMP%]{flex-shrink:0}.nb-transition[_nghost-%COMP%]   .custom-checkbox[_ngcontent-%COMP%]{transition-duration:0.15s;transition-property:background-color,border,box-shadow;transition-timing-function:ease-in}.nb-transition[_nghost-%COMP%]   .text[_ngcontent-%COMP%]{transition-duration:0.15s;transition-property:color;transition-timing-function:ease-in}\"],\n    changeDetection: 0\n  });\n  return NbCheckboxComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nlet NbCheckboxModule = /*#__PURE__*/(() => {\n  class NbCheckboxModule {}\n\n  NbCheckboxModule.ɵfac = function NbCheckboxModule_Factory(t) {\n    return new (t || NbCheckboxModule)();\n  };\n\n  NbCheckboxModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NbCheckboxModule\n  });\n  NbCheckboxModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[NbSharedModule, NbIconModule]]\n  });\n  return NbCheckboxModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NbCheckboxModule, {\n    declarations: [NbCheckboxComponent],\n    imports: [NbSharedModule, NbIconModule],\n    exports: [NbCheckboxComponent]\n  });\n})();\n\nlet NbDynamicOverlay = /*#__PURE__*/(() => {\n  class NbDynamicOverlay {\n    constructor(overlay, componentFactoryResolver, zone, overlayContainer) {\n      this.overlay = overlay;\n      this.componentFactoryResolver = componentFactoryResolver;\n      this.zone = zone;\n      this.overlayContainer = overlayContainer;\n      this.context = {};\n      this.overlayConfig = {};\n      this.positionStrategyChange$ = new Subject();\n      this.isShown$ = new BehaviorSubject(false);\n      this.destroy$ = new Subject();\n      this.overlayDestroy$ = new Subject();\n    }\n\n    get isAttached() {\n      return this.ref && this.ref.hasAttached();\n    }\n\n    get isShown() {\n      return this.isShown$.pipe(distinctUntilChanged());\n    }\n\n    create(componentType, content, context, positionStrategy, overlayConfig = {}) {\n      this.setContentAndContext(content, context);\n      this.setComponent(componentType);\n      this.setPositionStrategy(positionStrategy);\n      this.setOverlayConfig(overlayConfig);\n      return this;\n    }\n\n    setContent(content) {\n      this.content = content;\n\n      if (this.container) {\n        this.updateContext();\n      }\n\n      this.updatePosition();\n    }\n\n    setContext(context) {\n      this.context = context;\n\n      if (this.container) {\n        this.updateContext();\n      }\n\n      this.updatePosition();\n    }\n\n    setContentAndContext(content, context) {\n      this.content = content;\n      this.context = context;\n\n      if (this.container) {\n        this.updateContext();\n      }\n\n      this.updatePosition();\n    }\n\n    setComponent(componentType) {\n      this.componentType = componentType; // in case the component is shown we recreate it and show it back\n\n      const wasAttached = this.isAttached;\n      this.disposeOverlayRef();\n\n      if (wasAttached) {\n        this.show();\n      }\n    }\n\n    setPositionStrategy(positionStrategy) {\n      this.positionStrategyChange$.next();\n      this.positionStrategy = positionStrategy;\n      this.positionStrategy.positionChange.pipe(filter(() => !!this.container), takeUntil(merge(this.positionStrategyChange$, this.destroy$))).subscribe(position => {\n        this.lastAppliedPosition = position;\n        patch(this.container, {\n          position\n        });\n      });\n\n      if (this.ref) {\n        this.ref.updatePositionStrategy(this.positionStrategy);\n      }\n    }\n\n    setOverlayConfig(overlayConfig) {\n      this.overlayConfig = overlayConfig;\n      const wasAttached = this.isAttached;\n      this.disposeOverlayRef();\n\n      if (wasAttached) {\n        this.show();\n      }\n    }\n\n    show() {\n      if (!this.ref) {\n        this.createOverlay();\n      }\n\n      this.renderContainer();\n\n      if (!this.hasOverlayInContainer()) {\n        // Dispose overlay ref as it refers to the old overlay container and create new by calling `show`\n        this.disposeOverlayRef();\n        return this.show();\n      }\n\n      this.isShown$.next(true);\n    }\n\n    hide() {\n      if (!this.ref) {\n        return;\n      }\n\n      this.ref.detach();\n      this.container = null;\n      this.isShown$.next(false);\n    }\n\n    toggle() {\n      if (this.isAttached) {\n        this.hide();\n      } else {\n        this.show();\n      }\n    }\n\n    dispose() {\n      this.destroy$.next();\n      this.destroy$.complete();\n      this.hide();\n      this.disposeOverlayRef();\n      this.isShown$.complete();\n      this.positionStrategyChange$.complete();\n      this.overlayDestroy$.complete();\n    }\n\n    getContainer() {\n      return this.container;\n    }\n\n    createOverlay() {\n      this.ref = this.overlay.create(Object.assign({\n        positionStrategy: this.positionStrategy,\n        scrollStrategy: this.overlay.scrollStrategies.reposition()\n      }, this.overlayConfig));\n      this.updatePositionWhenStable(this.ref);\n    }\n\n    renderContainer() {\n      const containerContext = this.createContainerContext();\n\n      if (!this.container) {\n        this.container = createContainer(this.ref, this.componentType, containerContext, this.componentFactoryResolver);\n      }\n\n      this.container.instance.renderContent();\n    }\n\n    updateContext() {\n      const containerContext = this.createContainerContext();\n      Object.assign(this.container.instance, containerContext);\n      this.container.instance.renderContent();\n      this.container.changeDetectorRef.detectChanges();\n    }\n\n    createContainerContext() {\n      return {\n        content: this.content,\n        context: this.context,\n        cfr: this.componentFactoryResolver,\n        position: this.lastAppliedPosition\n      };\n    }\n    /**\n     * Dimensions of the container may change after content update. So we listen to zone.stable event to\n     * reposition the container.\n     */\n\n\n    updatePositionWhenStable(overlay) {\n      const overlayDestroy$ = this.overlayDestroy$.pipe(filter(destroyedOverlay => destroyedOverlay === overlay));\n      this.zone.onStable.pipe(takeUntil(merge(this.destroy$, overlayDestroy$))).subscribe(() => this.updatePosition());\n    }\n\n    updatePosition() {\n      if (this.ref) {\n        this.ref.updatePosition();\n      }\n    }\n\n    hasOverlayInContainer() {\n      return this.overlayContainer.getContainerElement().contains(this.ref.hostElement);\n    }\n\n    disposeOverlayRef() {\n      if (this.ref) {\n        this.ref.dispose();\n        this.overlayDestroy$.next(this.ref);\n        this.ref = null;\n        this.container = null;\n      }\n    }\n\n  }\n\n  NbDynamicOverlay.ɵfac = function NbDynamicOverlay_Factory(t) {\n    return new (t || NbDynamicOverlay)(ɵngcc0.ɵɵinject(NbOverlayService), ɵngcc0.ɵɵinject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(NbOverlayContainer));\n  };\n\n  NbDynamicOverlay.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: NbDynamicOverlay,\n    factory: NbDynamicOverlay.ɵfac\n  });\n  return NbDynamicOverlay;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nclass NbDynamicOverlayChange extends SimpleChange {\n  constructor(previousValue, currentValue, firstChange = false) {\n    super(previousValue, currentValue, firstChange);\n  }\n\n  isChanged() {\n    return this.currentValue !== this.previousValue;\n  }\n\n}\n\nlet NbDynamicOverlayHandler = /*#__PURE__*/(() => {\n  class NbDynamicOverlayHandler {\n    constructor(positionBuilder, triggerStrategyBuilder, dynamicOverlayService) {\n      this.positionBuilder = positionBuilder;\n      this.triggerStrategyBuilder = triggerStrategyBuilder;\n      this.dynamicOverlayService = dynamicOverlayService;\n      this._context = {};\n      this._trigger = NbTrigger.NOOP;\n      this._position = NbPosition.TOP;\n      this._adjustment = NbAdjustment.NOOP;\n      this._offset = 15;\n      this._overlayConfig = {};\n      this.changes = {};\n    }\n\n    host(host) {\n      this.changes.host = new NbDynamicOverlayChange(this._host, host);\n      this._host = host;\n      return this;\n    }\n\n    trigger(trigger$$1) {\n      this.changes.trigger = new NbDynamicOverlayChange(this._trigger, trigger$$1);\n      this._trigger = trigger$$1;\n      return this;\n    }\n\n    position(position) {\n      this.changes.position = new NbDynamicOverlayChange(this._position, position);\n      this._position = position;\n      return this;\n    }\n\n    adjustment(adjustment) {\n      this.changes.adjustment = new NbDynamicOverlayChange(this._adjustment, adjustment);\n      this._adjustment = adjustment;\n      return this;\n    }\n\n    componentType(componentType) {\n      this.changes.componentType = new NbDynamicOverlayChange(this._componentType, componentType);\n      this._componentType = componentType;\n      return this;\n    }\n\n    content(content) {\n      this.changes.content = new NbDynamicOverlayChange(this._content, content);\n      this._content = content;\n      return this;\n    }\n\n    context(context) {\n      this.changes.context = new NbDynamicOverlayChange(this._context, context);\n      this._context = context;\n      return this;\n    }\n\n    offset(offset) {\n      this.changes.offset = new NbDynamicOverlayChange(this._offset, offset);\n      this._offset = offset;\n      return this;\n    }\n\n    overlayConfig(overlayConfig) {\n      this.changes.overlayConfig = new NbDynamicOverlayChange(this._overlayConfig, overlayConfig);\n      this._overlayConfig = overlayConfig;\n      return this;\n    }\n\n    build() {\n      if (!this._componentType || !this._host) {\n        throw Error(`NbDynamicOverlayHandler: at least 'componentType' and 'host' should be\n      passed before building a dynamic overlay.`);\n      }\n\n      this.dynamicOverlay = this.dynamicOverlayService.create(this._componentType, this._content, this._context, this.createPositionStrategy(), this._overlayConfig);\n      this.connect();\n      this.clearChanges();\n      return this.dynamicOverlay;\n    }\n\n    rebuild() {\n      /**\n       * we should not throw here\n       * as we use rebuilt in lifecycle hooks\n       * which it could be called before the build\n       * so we just ignore this call\n       */\n      if (!this.dynamicOverlay) {\n        return;\n      }\n\n      if (this.isPositionStrategyUpdateRequired()) {\n        this.dynamicOverlay.setPositionStrategy(this.createPositionStrategy());\n      }\n\n      if (this.isTriggerStrategyUpdateRequired()) {\n        this.connect();\n      }\n\n      if (this.isContainerRerenderRequired()) {\n        this.dynamicOverlay.setContentAndContext(this._content, this._context);\n      }\n\n      if (this.isComponentTypeUpdateRequired()) {\n        this.dynamicOverlay.setComponent(this._componentType);\n      }\n\n      if (this.isOverlayConfigUpdateRequired()) {\n        this.dynamicOverlay.setOverlayConfig(this._overlayConfig);\n      }\n\n      this.clearChanges();\n      return this.dynamicOverlay;\n    }\n\n    connect() {\n      if (!this.dynamicOverlay) {\n        throw new Error(`NbDynamicOverlayHandler: cannot connect to DynamicOverlay\n      as it is not created yet. Call build() first`);\n      }\n\n      this.disconnect();\n      this.subscribeOnTriggers(this.dynamicOverlay);\n    }\n\n    disconnect() {\n      if (this.triggerStrategy) {\n        this.triggerStrategy.destroy();\n      }\n    }\n\n    destroy() {\n      this.disconnect();\n      this.clearChanges();\n\n      if (this.dynamicOverlay) {\n        this.dynamicOverlay.dispose();\n      }\n    }\n\n    createPositionStrategy() {\n      return this.positionBuilder.connectedTo(this._host).position(this._position).adjustment(this._adjustment).offset(this._offset);\n    }\n\n    subscribeOnTriggers(dynamicOverlay) {\n      this.triggerStrategy = this.triggerStrategyBuilder.trigger(this._trigger).host(this._host.nativeElement).container(() => dynamicOverlay.getContainer()).build();\n      this.triggerStrategy.show$.subscribe(() => dynamicOverlay.show());\n      this.triggerStrategy.hide$.subscribe(() => dynamicOverlay.hide());\n    }\n\n    isContainerRerenderRequired() {\n      return this.isContentUpdated() || this.isContextUpdated() || this.isPositionStrategyUpdateRequired();\n    }\n\n    isPositionStrategyUpdateRequired() {\n      return this.isAdjustmentUpdated() || this.isPositionUpdated() || this.isOffsetUpdated() || this.isHostUpdated();\n    }\n\n    isTriggerStrategyUpdateRequired() {\n      return this.isTriggerUpdated() || this.isHostUpdated();\n    }\n\n    isComponentTypeUpdateRequired() {\n      return this.isComponentTypeUpdated();\n    }\n\n    isOverlayConfigUpdateRequired() {\n      return this.isOverlayConfigUpdated();\n    }\n\n    isComponentTypeUpdated() {\n      return this.changes.componentType && this.changes.componentType.isChanged();\n    }\n\n    isContentUpdated() {\n      return this.changes.content && this.changes.content.isChanged();\n    }\n\n    isContextUpdated() {\n      return this.changes.context && this.changes.context.isChanged();\n    }\n\n    isAdjustmentUpdated() {\n      return this.changes.adjustment && this.changes.adjustment.isChanged();\n    }\n\n    isPositionUpdated() {\n      return this.changes.position && this.changes.position.isChanged();\n    }\n\n    isHostUpdated() {\n      return this.changes.host && this.changes.host.isChanged();\n    }\n\n    isTriggerUpdated() {\n      return this.changes.trigger && this.changes.trigger.isChanged();\n    }\n\n    isOffsetUpdated() {\n      return this.changes.offset && this.changes.offset.isChanged();\n    }\n\n    isOverlayConfigUpdated() {\n      return this.changes.overlayConfig && this.changes.overlayConfig.isChanged();\n    }\n\n    clearChanges() {\n      this.changes = {};\n    }\n\n  }\n\n  NbDynamicOverlayHandler.ɵfac = function NbDynamicOverlayHandler_Factory(t) {\n    return new (t || NbDynamicOverlayHandler)(ɵngcc0.ɵɵinject(NbPositionBuilderService), ɵngcc0.ɵɵinject(NbTriggerStrategyBuilderService), ɵngcc0.ɵɵinject(NbDynamicOverlay));\n  };\n\n  NbDynamicOverlayHandler.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: NbDynamicOverlayHandler,\n    factory: NbDynamicOverlayHandler.ɵfac\n  });\n  return NbDynamicOverlayHandler;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * Overlay container.\n * Renders provided content inside.\n *\n * @styles\n *\n * popover-text-color:\n * popover-text-font-family:\n * popover-text-font-size:\n * popover-text-font-weight:\n * popover-text-line-height:\n * popover-background-color:\n * popover-border-width:\n * popover-border-color:\n * popover-border-radius:\n * popover-shadow:\n * popover-arrow-size:\n * popover-padding:\n * */\n\n\nlet NbPopoverComponent = /*#__PURE__*/(() => {\n  class NbPopoverComponent extends NbPositionedContainerComponent {\n    renderContent() {\n      this.detachContent();\n      this.attachContent();\n    }\n\n    detachContent() {\n      this.overlayContainer.detach();\n    }\n\n    attachContent() {\n      if (this.content instanceof TemplateRef) {\n        this.attachTemplate();\n      } else if (this.content instanceof Type) {\n        this.attachComponent();\n      } else {\n        this.attachString();\n      }\n    }\n\n    attachTemplate() {\n      this.overlayContainer.attachTemplatePortal(new NbTemplatePortal(this.content, null, {\n        $implicit: this.context\n      }));\n    }\n\n    attachComponent() {\n      const portal = new NbComponentPortal(this.content, null, null, this.cfr);\n      const ref = this.overlayContainer.attachComponentPortal(portal, this.context);\n      ref.changeDetectorRef.detectChanges();\n    }\n\n    attachString() {\n      this.overlayContainer.attachStringContent(this.content);\n    }\n\n  }\n\n  NbPopoverComponent.ɵfac = /*@__PURE__*/function () {\n    let ɵNbPopoverComponent_BaseFactory;\n    return function NbPopoverComponent_Factory(t) {\n      return (ɵNbPopoverComponent_BaseFactory || (ɵNbPopoverComponent_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(NbPopoverComponent)))(t || NbPopoverComponent);\n    };\n  }();\n\n  NbPopoverComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbPopoverComponent,\n    selectors: [[\"nb-popover\"]],\n    viewQuery: function NbPopoverComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(NbOverlayContainerComponent, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.overlayContainer = _t.first);\n      }\n    },\n    inputs: {\n      content: \"content\",\n      context: \"context\",\n      cfr: \"cfr\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 2,\n    vars: 0,\n    consts: [[1, \"arrow\"]],\n    template: function NbPopoverComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"span\", 0);\n        ɵngcc0.ɵɵelement(1, \"nb-overlay-container\");\n      }\n    },\n    directives: [NbOverlayContainerComponent],\n    styles: [\"[_nghost-%COMP%]   .arrow[_ngcontent-%COMP%]{position:absolute;width:0;height:0}\"]\n  });\n  return NbPopoverComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * Powerful popover directive, which provides the best UX for your users.\n *\n * @stacked-example(Showcase, popover/popover-showcase.component)\n *\n * Popover can accept different content such as:\n * TemplateRef\n *\n * ```html\n * <button [nbPopover]=\"templateRef\"></button>\n * <ng-template #templateRef>\n *   <span>Hello, Popover!</span>\n * </ng-template>\n * ```\n * ### Installation\n *\n * Import `NbPopoverModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbPopoverModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * Custom components\n *\n * ```html\n * <button [nbPopover]=\"MyPopoverComponent\"></button>\n * ```\n *\n * Both custom components and templateRef popovers can receive *contentContext* property\n * that will be passed to the content props.\n *\n * Primitive types\n *\n * ```html\n * <button nbPopover=\"Hello, Popover!\"></button>\n * ```\n *\n * Popover has different placements, such as: top, bottom, left, right, start and end\n * which can be used as following:\n *\n * @stacked-example(Placements, popover/popover-placements.component)\n *\n * By default popover will try to adjust itself to maximally fit viewport\n * and provide the best user experience. It will try to change position of the popover container.\n * If you want to disable this behaviour set it `noop`.\n *\n * ```html\n * <button nbPopover=\"Hello, Popover!\" nbPopoverAdjustment=\"noop\"></button>\n * ```\n *\n * Popover has a number of triggers which provides an ability to show and hide the component in different ways:\n *\n * - Click mode shows the component when a user clicks on the host element and hides when the user clicks\n * somewhere on the document outside the component.\n * - Hint provides capability to show the component when the user hovers over the host element\n * and hide when the user hovers out of the host.\n * - Hover works like hint mode with one exception - when the user moves mouse from host element to\n * the container element the component remains open, so that it is possible to interact with it content.\n * - Focus mode is applied when user focuses the element.\n * - Noop mode - the component won't react to the user interaction.\n *\n * @stacked-example(Available Triggers, popover/popover-modes.component.html)\n *\n * Noop mode is especially useful when you need to control Popover programmatically, for example show/hide\n * as a result of some third-party action, like HTTP request or validation check:\n *\n * @stacked-example(Manual Control, popover/popover-noop.component)\n *\n * Below are examples for manual popover settings control, both via template binding and code.\n * @stacked-example(Popover Settings, popover/popover-dynamic.component)\n *\n * Please note, while manipulating Popover setting via code, you need to call `rebuild()` method to apply the settings\n * changed.\n * @stacked-example(Popover Settings Code, popover/popover-dynamic-code.component)\n *\n * @additional-example(Template Ref, popover/popover-template-ref.component)\n * @additional-example(Custom Component, popover/popover-custom-component.component)\n * */\n\n\nlet NbPopoverDirective = /*#__PURE__*/(() => {\n  class NbPopoverDirective {\n    constructor(hostRef, dynamicOverlayHandler) {\n      this.hostRef = hostRef;\n      this.dynamicOverlayHandler = dynamicOverlayHandler;\n      this.popoverComponent = NbPopoverComponent;\n      this.destroy$ = new Subject();\n      /**\n       * Container content context. Will be applied to the rendered component.\n       * */\n\n      this.context = {};\n      /**\n       * Position will be calculated relatively host element based on the position.\n       * Can be top, right, bottom, left, start or end.\n       * */\n\n      this.position = NbPosition.TOP;\n      this._adjustment = NbAdjustment.CLOCKWISE;\n      /**\n       * Describes when the container will be shown.\n       * Available options: `click`, `hover`, `hint`, `focus` and `noop`\n       * */\n\n      this.trigger = NbTrigger.CLICK;\n      /**\n       * Sets popover offset\n       * */\n\n      this.offset = 15;\n      this._popoverClass = '';\n      this.nbPopoverShowStateChange = new EventEmitter();\n      this.overlayConfig = {\n        panelClass: this.popoverClass\n      };\n    }\n    /**\n     * Container position will be changes automatically based on this strategy if container can't fit view port.\n     * Set this property to `noop` value if you want to disable automatically adjustment.\n     * Available values: `clockwise` (default), `counterclockwise`, `vertical`, `horizontal`, `noop`.\n     * */\n\n\n    get adjustment() {\n      return this._adjustment;\n    }\n\n    set adjustment(value) {\n      this._adjustment = value;\n    }\n\n    get popoverClass() {\n      return this._popoverClass;\n    }\n\n    set popoverClass(value) {\n      if (value !== this.popoverClass) {\n        this._popoverClass = value;\n        this.overlayConfig = {\n          panelClass: this.popoverClass\n        };\n      }\n    }\n\n    get isShown() {\n      return !!(this.dynamicOverlay && this.dynamicOverlay.isAttached);\n    }\n\n    ngOnInit() {\n      this.dynamicOverlayHandler.host(this.hostRef).componentType(this.popoverComponent);\n    }\n\n    ngOnChanges() {\n      this.rebuild();\n    }\n\n    ngAfterViewInit() {\n      this.dynamicOverlay = this.configureDynamicOverlay().build();\n      this.dynamicOverlay.isShown.pipe(skip(1), takeUntil(this.destroy$)).subscribe(isShown => this.nbPopoverShowStateChange.emit({\n        isShown\n      }));\n    }\n\n    rebuild() {\n      this.dynamicOverlay = this.configureDynamicOverlay().rebuild();\n    }\n\n    show() {\n      this.dynamicOverlay.show();\n    }\n\n    hide() {\n      this.dynamicOverlay.hide();\n    }\n\n    toggle() {\n      this.dynamicOverlay.toggle();\n    }\n\n    ngOnDestroy() {\n      this.dynamicOverlayHandler.destroy();\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n\n    configureDynamicOverlay() {\n      return this.dynamicOverlayHandler.position(this.position).trigger(this.trigger).offset(this.offset).adjustment(this.adjustment).content(this.content).context(this.context).overlayConfig(this.overlayConfig);\n    }\n\n  }\n\n  NbPopoverDirective.ɵfac = function NbPopoverDirective_Factory(t) {\n    return new (t || NbPopoverDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(NbDynamicOverlayHandler));\n  };\n\n  NbPopoverDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NbPopoverDirective,\n    selectors: [[\"\", \"nbPopover\", \"\"]],\n    inputs: {\n      context: [\"nbPopoverContext\", \"context\"],\n      position: [\"nbPopoverPlacement\", \"position\"],\n      trigger: [\"nbPopoverTrigger\", \"trigger\"],\n      offset: [\"nbPopoverOffset\", \"offset\"],\n      adjustment: [\"nbPopoverAdjustment\", \"adjustment\"],\n      popoverClass: [\"nbPopoverClass\", \"popoverClass\"],\n      content: [\"nbPopover\", \"content\"]\n    },\n    outputs: {\n      nbPopoverShowStateChange: \"nbPopoverShowStateChange\"\n    },\n    exportAs: [\"nbPopover\"],\n    features: [ɵngcc0.ɵɵProvidersFeature([NbDynamicOverlayHandler, NbDynamicOverlay]), ɵngcc0.ɵɵNgOnChangesFeature]\n  });\n  return NbPopoverDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nlet NbPopoverModule = /*#__PURE__*/(() => {\n  class NbPopoverModule {}\n\n  NbPopoverModule.ɵfac = function NbPopoverModule_Factory(t) {\n    return new (t || NbPopoverModule)();\n  };\n\n  NbPopoverModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NbPopoverModule\n  });\n  NbPopoverModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[NbOverlayModule]]\n  });\n  return NbPopoverModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NbPopoverModule, {\n    declarations: [NbPopoverDirective, NbPopoverComponent],\n    imports: [NbOverlayModule],\n    exports: [NbPopoverDirective]\n  });\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * Context menu component used as content within NbContextMenuDirective.\n *\n * @styles\n *\n * context-menu-background-color:\n * context-menu-border-color:\n * context-menu-border-style:\n * context-menu-border-width:\n * context-menu-border-radius:\n * context-menu-text-align:\n * context-menu-min-width:\n * context-menu-max-width:\n * context-menu-shadow:\n * */\n\n\nlet NbContextMenuComponent = /*#__PURE__*/(() => {\n  class NbContextMenuComponent extends NbPositionedContainerComponent {\n    constructor() {\n      super(...arguments);\n      this.items = [];\n      this.context = {\n        items: []\n      };\n    }\n    /**\n     * The method is empty since we don't need to do anything additionally\n     * render is handled by change detection\n     */\n\n\n    renderContent() {}\n\n  }\n\n  NbContextMenuComponent.ɵfac = /*@__PURE__*/function () {\n    let ɵNbContextMenuComponent_BaseFactory;\n    return function NbContextMenuComponent_Factory(t) {\n      return (ɵNbContextMenuComponent_BaseFactory || (ɵNbContextMenuComponent_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(NbContextMenuComponent)))(t || NbContextMenuComponent);\n    };\n  }();\n\n  NbContextMenuComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbContextMenuComponent,\n    selectors: [[\"nb-context-menu\"]],\n    inputs: {\n      items: \"items\",\n      context: \"context\",\n      tag: \"tag\"\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 1,\n    vars: 2,\n    consts: [[1, \"context-menu\", 3, \"items\", \"tag\"]],\n    template: function NbContextMenuComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"nb-menu\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"items\", ctx.context.items)(\"tag\", ctx.context.tag);\n      }\n    },\n    directives: [NbMenuComponent],\n    encapsulation: 2\n  });\n  return NbContextMenuComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * Full featured context menu directive.\n *\n * @stacked-example(Showcase, context-menu/context-menu-showcase.component)\n *\n * Just pass menu items array:\n *\n * ```html\n * <button [nbContextMenu]=\"items\"></button>\n * ...\n * items = [{ title: 'Profile' }, { title: 'Log out' }];\n * ```\n * ### Installation\n *\n * Import `NbContextMenuModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbContextMenuModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * Also make sure `NbMenuModule` is imported to your `app.module`.\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbMenuModule.forRoot(),\n *   ],\n * })\n * export class AppModule { }\n * ```\n *\n * ### Usage\n *\n * If you want to handle context menu clicks you have to pass `nbContextMenuTag`\n * param and register to events using NbMenuService.\n * `NbContextMenu` renders plain `NbMenu` inside, so\n * you have to work with it just like with `NbMenu` component:\n *\n * @stacked-example(Menu item click, context-menu/context-menu-click.component)\n *\n * Context menu has different placements, such as: top, bottom, left and right\n * which can be used as following:\n *\n * ```html\n * <button [nbContextMenu]=\"items\" nbContextMenuPlacement=\"right\"></button>\n * ```\n *\n * ```ts\n * items = [{ title: 'Profile' }, { title: 'Log out' }];\n * ```\n *\n * By default context menu will try to adjust itself to maximally fit viewport\n * and provide the best user experience. It will try to change position of the context menu.\n * If you wanna disable this behaviour just set it falsy value.\n *\n * ```html\n * <button [nbContextMenu]=\"items\" nbContextMenuAdjustment=\"counterclockwise\"></button>\n * ```\n *\n * ```ts\n * items = [{ title: 'Profile' }, { title: 'Log out' }];\n * ```\n * Context menu has a number of triggers which provides an ability to show and hide the component in different ways:\n *\n * - Click mode shows the component when a user clicks on the host element and hides when the user clicks\n * somewhere on the document outside the component.\n * - Hint provides capability to show the component when the user hovers over the host element\n * and hide when the user hovers out of the host.\n * - Hover works like hint mode with one exception - when the user moves mouse from host element to\n * the container element the component remains open, so that it is possible to interact with it content.\n * - Focus mode is applied when user focuses the element.\n * - Noop mode - the component won't react to the user interaction.\n *\n * @stacked-example(Available Triggers, context-menu/context-menu-modes.component.html)\n *\n * Noop mode is especially useful when you need to control Popover programmatically, for example show/hide\n * as a result of some third-party action, like HTTP request or validation check:\n *\n * @stacked-example(Manual Control, context-menu/context-menu-noop.component)\n *\n * @stacked-example(Manual Control, context-menu/context-menu-right-click.component)\n * */\n\n\nlet NbContextMenuDirective = /*#__PURE__*/(() => {\n  class NbContextMenuDirective {\n    constructor(hostRef, menuService, dynamicOverlayHandler) {\n      this.hostRef = hostRef;\n      this.menuService = menuService;\n      this.dynamicOverlayHandler = dynamicOverlayHandler;\n      this.contextMenuHost = true;\n      this._position = NbPosition.BOTTOM;\n      /**\n       * Container position will be changes automatically based on this strategy if container can't fit view port.\n       * Set this property to any falsy value if you want to disable automatically adjustment.\n       * Available values: clockwise, counterclockwise.\n       * */\n\n      this.adjustment = NbAdjustment.CLOCKWISE;\n      /**\n       * Describes when the container will be shown.\n       * Available options: `click`, `hover`, `hint`, `focus` and `noop`\n       * */\n\n      this.trigger = NbTrigger.CLICK;\n      this._contextMenuClass = '';\n      this.overlayConfig = {\n        panelClass: this.contextMenuClass\n      };\n      this.overlayContext = {\n        items: this.items,\n        tag: this.tag,\n        position: this.position\n      };\n      this.destroy$ = new Subject();\n      this._items = [];\n    }\n    /**\n     * Position will be calculated relatively host element based on the position.\n     * Can be top, right, bottom and left.\n     * */\n\n\n    get position() {\n      return this._position;\n    }\n\n    set position(value) {\n      if (value !== this.position) {\n        this._position = value;\n        this.updateOverlayContext();\n      }\n    }\n    /**\n     * Set NbMenu tag, which helps identify menu when working with NbMenuService.\n     * */\n\n\n    get tag() {\n      return this._tag;\n    }\n\n    set tag(value) {\n      if (value !== this.tag) {\n        this._tag = value;\n        this.updateOverlayContext();\n      }\n    }\n    /**\n     * Basic menu items, will be passed to the internal NbMenuComponent.\n     * */\n\n\n    get items() {\n      return this._items;\n    }\n\n    set items(items) {\n      this.validateItems(items);\n      this._items = items;\n      this.updateOverlayContext();\n    }\n\n    get contextMenuClass() {\n      return this._contextMenuClass;\n    }\n\n    set contextMenuClass(value) {\n      if (value !== this.contextMenuClass) {\n        this._contextMenuClass = value;\n        this.overlayConfig = {\n          panelClass: this.contextMenuClass\n        };\n      }\n    }\n\n    ngOnInit() {\n      this.dynamicOverlayHandler.host(this.hostRef).componentType(NbContextMenuComponent);\n    }\n\n    ngOnChanges() {\n      this.rebuild();\n    }\n\n    ngAfterViewInit() {\n      this.dynamicOverlay = this.configureDynamicOverlay().build();\n      this.subscribeOnItemClick();\n    }\n\n    rebuild() {\n      this.dynamicOverlay = this.configureDynamicOverlay().rebuild();\n    }\n\n    show() {\n      this.dynamicOverlay.show();\n    }\n\n    hide() {\n      this.dynamicOverlay.hide();\n    }\n\n    toggle() {\n      this.dynamicOverlay.toggle();\n    }\n\n    ngOnDestroy() {\n      this.dynamicOverlayHandler.destroy();\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n\n    configureDynamicOverlay() {\n      return this.dynamicOverlayHandler.position(this.position).trigger(this.trigger).adjustment(this.adjustment).context(this.overlayContext).overlayConfig(this.overlayConfig);\n    }\n    /*\n     * NbMenuComponent will crash if don't pass menu items to it.\n     * So, we just validating them and throw custom obvious error.\n     * */\n\n\n    validateItems(items) {\n      if (!items || !items.length) {\n        throw Error(`List of menu items expected, but given: ${items}`);\n      }\n    }\n\n    subscribeOnItemClick() {\n      this.menuService.onItemClick().pipe(filter(({\n        tag\n      }) => tag === this.tag), takeUntil(this.destroy$)).subscribe(() => this.hide());\n    }\n\n    updateOverlayContext() {\n      this.overlayContext = {\n        items: this.items,\n        position: this.position,\n        tag: this.tag\n      };\n    }\n\n  }\n\n  NbContextMenuDirective.ɵfac = function NbContextMenuDirective_Factory(t) {\n    return new (t || NbContextMenuDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(NbMenuService), ɵngcc0.ɵɵdirectiveInject(NbDynamicOverlayHandler));\n  };\n\n  NbContextMenuDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NbContextMenuDirective,\n    selectors: [[\"\", \"nbContextMenu\", \"\"]],\n    hostVars: 2,\n    hostBindings: function NbContextMenuDirective_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"context-menu-host\", ctx.contextMenuHost);\n      }\n    },\n    inputs: {\n      adjustment: [\"nbContextMenuAdjustment\", \"adjustment\"],\n      trigger: [\"nbContextMenuTrigger\", \"trigger\"],\n      position: [\"nbContextMenuPlacement\", \"position\"],\n      tag: [\"nbContextMenuTag\", \"tag\"],\n      items: [\"nbContextMenu\", \"items\"],\n      contextMenuClass: [\"nbContextMenuClass\", \"contextMenuClass\"]\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([NbDynamicOverlayHandler, NbDynamicOverlay]), ɵngcc0.ɵɵNgOnChangesFeature]\n  });\n  return NbContextMenuDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nlet NbContextMenuModule = /*#__PURE__*/(() => {\n  class NbContextMenuModule {}\n\n  NbContextMenuModule.ɵfac = function NbContextMenuModule_Factory(t) {\n    return new (t || NbContextMenuModule)();\n  };\n\n  NbContextMenuModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NbContextMenuModule\n  });\n  NbContextMenuModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, NbOverlayModule, NbMenuModule]]\n  });\n  return NbContextMenuModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NbContextMenuModule, {\n    declarations: function () {\n      return [NbContextMenuDirective, NbContextMenuComponent];\n    },\n    imports: function () {\n      return [CommonModule, NbOverlayModule, NbMenuModule];\n    },\n    exports: function () {\n      return [NbContextMenuDirective];\n    }\n  });\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * Progress Bar is a component for indicating progress.\n *\n * Simple usage:\n *\n * ```html\n * <nb-progress-bar [value]=\"50\"></nb-progress-bar>\n * ```\n * ### Installation\n *\n * Import `NbProgressBarModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbProgressBarModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * Progress bar accepts property `value` in range 0-100\n * @stacked-example(Progress bar, progress-bar/progress-bar-showcase.component)\n *\n * Progress bar background could be configured by providing a `status` property:\n * @stacked-example(Progress bar status, progress-bar/progress-bar-status.component)\n *\n * Progress bar size (height and font-size) could be configured by providing a `size` property:\n * @stacked-example(Progress bar size, progress-bar/progress-bar-size.component)\n *\n * `displayValue` property shows current value inside progress bar. It's also possible to add custom text inside:\n * @stacked-example(Progress bar value, progress-bar/progress-bar-value.component)\n *\n * Progress bar supports `width` and `background-color` transition:\n * @stacked-example(Progress bar interactive, progress-bar/progress-bar-interactive.component)\n *\n * @styles\n *\n * progress-bar-animation-duration:\n * progress-bar-border-radius:\n * progress-bar-text-font-family:\n * progress-bar-tiny-height:\n * progress-bar-tiny-text-font-size:\n * progress-bar-tiny-text-font-weight:\n * progress-bar-tiny-text-line-height:\n * progress-bar-small-height:\n * progress-bar-small-text-font-size:\n * progress-bar-small-text-font-weight:\n * progress-bar-small-text-line-height:\n * progress-bar-medium-height:\n * progress-bar-medium-text-font-size:\n * progress-bar-medium-text-font-weight:\n * progress-bar-medium-text-line-height:\n * progress-bar-large-height:\n * progress-bar-large-text-font-size:\n * progress-bar-large-text-font-weight:\n * progress-bar-large-text-line-height:\n * progress-bar-giant-height:\n * progress-bar-giant-text-font-size:\n * progress-bar-giant-text-font-weight:\n * progress-bar-giant-text-line-height:\n * progress-bar-basic-background-color:\n * progress-bar-basic-filled-background-color:\n * progress-bar-basic-text-color:\n * progress-bar-primary-background-color:\n * progress-bar-primary-filled-background-color:\n * progress-bar-primary-text-color:\n * progress-bar-success-background-color:\n * progress-bar-success-filled-background-color:\n * progress-bar-success-text-color:\n * progress-bar-info-background-color:\n * progress-bar-info-filled-background-color:\n * progress-bar-info-text-color:\n * progress-bar-warning-background-color:\n * progress-bar-warning-filled-background-color:\n * progress-bar-warning-text-color:\n * progress-bar-danger-background-color:\n * progress-bar-danger-filled-background-color:\n * progress-bar-danger-text-color:\n * progress-bar-control-background-color:\n * progress-bar-control-filled-background-color:\n * progress-bar-control-text-color:\n */\n\n\nlet NbProgressBarComponent = /*#__PURE__*/(() => {\n  class NbProgressBarComponent {\n    constructor(statusService) {\n      this.statusService = statusService;\n      /**\n       * Progress bar value in percent (0 - 100)\n       */\n\n      this.value = 0;\n      /**\n       * Progress bar background (`basic` (default), `primary`, `info`, `success`, `warning`, `danger`, `control`)\n       */\n\n      this.status = 'basic';\n      /**\n       * Progress bar size (`tiny`, `small`, `medium` (default), `large`, `giant`)\n       */\n\n      this.size = 'medium';\n      /**\n       * Displays value inside progress bar\n       */\n\n      this.displayValue = false;\n    }\n\n    get tiny() {\n      return this.size === 'tiny';\n    }\n\n    get small() {\n      return this.size === 'small';\n    }\n\n    get medium() {\n      return this.size === 'medium';\n    }\n\n    get large() {\n      return this.size === 'large';\n    }\n\n    get giant() {\n      return this.size === 'giant';\n    }\n\n    get primary() {\n      return this.status === 'primary';\n    }\n\n    get success() {\n      return this.status === 'success';\n    }\n\n    get info() {\n      return this.status === 'info';\n    }\n\n    get warning() {\n      return this.status === 'warning';\n    }\n\n    get danger() {\n      return this.status === 'danger';\n    }\n\n    get basic() {\n      return this.status === 'basic';\n    }\n\n    get control() {\n      return this.status === 'control';\n    }\n\n    get additionalClasses() {\n      if (this.statusService.isCustomStatus(this.status)) {\n        return [this.statusService.getStatusClass(this.status)];\n      }\n\n      return [];\n    }\n\n  }\n\n  NbProgressBarComponent.ɵfac = function NbProgressBarComponent_Factory(t) {\n    return new (t || NbProgressBarComponent)(ɵngcc0.ɵɵdirectiveInject(NbStatusService));\n  };\n\n  NbProgressBarComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbProgressBarComponent,\n    selectors: [[\"nb-progress-bar\"]],\n    hostVars: 26,\n    hostBindings: function NbProgressBarComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassMap(ctx.additionalClasses);\n        ɵngcc0.ɵɵclassProp(\"size-tiny\", ctx.tiny)(\"size-small\", ctx.small)(\"size-medium\", ctx.medium)(\"size-large\", ctx.large)(\"size-giant\", ctx.giant)(\"status-primary\", ctx.primary)(\"status-success\", ctx.success)(\"status-info\", ctx.info)(\"status-warning\", ctx.warning)(\"status-danger\", ctx.danger)(\"status-basic\", ctx.basic)(\"status-control\", ctx.control);\n      }\n    },\n    inputs: {\n      value: \"value\",\n      status: \"status\",\n      size: \"size\",\n      displayValue: \"displayValue\"\n    },\n    ngContentSelectors: _c0,\n    decls: 4,\n    vars: 3,\n    consts: [[1, \"progress-container\"], [1, \"progress-value\"], [4, \"ngIf\"]],\n    template: function NbProgressBarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, NbProgressBarComponent_span_2_Template, 2, 1, \"span\", 2);\n        ɵngcc0.ɵɵprojection(3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.value, \"%\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.displayValue);\n      }\n    },\n    directives: [ɵngcc2.NgIf],\n    styles: [\"[_nghost-%COMP%]{display:block}.progress-container[_ngcontent-%COMP%]{overflow:hidden}.progress-value[_ngcontent-%COMP%]{height:100%;text-align:center;overflow:hidden}\"]\n  });\n  return NbProgressBarComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nlet NbProgressBarModule = /*#__PURE__*/(() => {\n  class NbProgressBarModule {}\n\n  NbProgressBarModule.ɵfac = function NbProgressBarModule_Factory(t) {\n    return new (t || NbProgressBarModule)();\n  };\n\n  NbProgressBarModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NbProgressBarModule\n  });\n  NbProgressBarModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[NbSharedModule]]\n  });\n  return NbProgressBarModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NbProgressBarModule, {\n    declarations: [NbProgressBarComponent],\n    imports: [NbSharedModule],\n    exports: [NbProgressBarComponent]\n  });\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * Alert component.\n *\n * Basic alert example:\n * @stacked-example(Showcase, alert/alert-showcase.component)\n *\n * Alert configuration:\n *\n * ```html\n * <nb-alert status=\"success\">\n *   You have been successfully authenticated!\n * </nb-alert>\n * ```\n * ### Installation\n *\n * Import `NbAlertModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbAlertModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * Alert could additionally have a `close` button when `closable` property is set:\n * ```html\n * <nb-alert status=\"success\" closable (close)=\"onClose()\">\n *   You have been successfully authenticated!\n * </nb-alert>\n * ```\n *\n * Colored alerts could be simply configured by providing a `status` property:\n * @stacked-example(Alert status, alert/alert-colors.component)\n *\n * It is also possible to assign an `accent` property for a slight alert highlight\n * as well as combine it with `status`:\n * @stacked-example(Alert accent, alert/alert-accents.component)\n *\n * And `outline` property:\n * @stacked-example(Outline Alert, alert/alert-outline.component)\n *\n * @additional-example(Multiple Sizes, alert/alert-sizes.component)\n *\n * @styles\n *\n * alert-border-radius:\n * alert-bottom-margin:\n * alert-padding:\n * alert-scrollbar-color:\n * alert-scrollbar-background-color:\n * alert-scrollbar-width:\n * alert-shadow:\n * alert-text-font-family:\n * alert-text-font-size:\n * alert-text-font-weight:\n * alert-text-line-height:\n * alert-closable-start-padding:\n * alert-tiny-height:\n * alert-small-height:\n * alert-medium-height:\n * alert-medium-padding:\n * alert-large-height:\n * alert-giant-height:\n * alert-basic-background-color:\n * alert-basic-text-color:\n * alert-primary-background-color:\n * alert-primary-text-color:\n * alert-success-background-color:\n * alert-success-text-color:\n * alert-info-background-color:\n * alert-info-text-color:\n * alert-warning-background-color:\n * alert-warning-text-color:\n * alert-danger-background-color:\n * alert-danger-text-color:\n * alert-control-background-color:\n * alert-control-text-color:\n * alert-accent-basic-color:\n * alert-accent-primary-color:\n * alert-accent-info-color:\n * alert-accent-success-color:\n * alert-accent-warning-color:\n * alert-accent-danger-color:\n * alert-accent-control-color:\n * alert-outline-width:\n * alert-outline-basic-color:\n * alert-outline-primary-color:\n * alert-outline-info-color:\n * alert-outline-success-color:\n * alert-outline-warning-color:\n * alert-outline-danger-color:\n * alert-outline-control-color:\n */\n\n\nlet NbAlertComponent = /*#__PURE__*/(() => {\n  class NbAlertComponent {\n    constructor(statusService) {\n      this.statusService = statusService;\n      /**\n       * Alert size, available sizes:\n       * `tiny`, `small`, `medium`, `large`, `giant`\n       * Unset by default.\n       */\n\n      this.size = '';\n      /**\n       * Alert status (adds specific styles):\n       * `basic` (default), `primary`, `success`, `info`, `warning`, `danger`, `control`.\n       */\n\n      this.status = 'basic';\n      /**\n       * Alert accent (color of the top border):\n       * `basic`, `primary`, `success`, `info`, `warning`, `danger`, `control`.\n       * Unset by default.\n       */\n\n      this.accent = '';\n      /**\n       * Alert outline (color of the border):\n       * `basic`, `primary`, `success`, `info`, `warning`, `danger`, `control`.\n       * Unset by default.\n       */\n\n      this.outline = '';\n      this._closable = false;\n      /**\n       * Emits when chip is removed\n       * @type EventEmitter<any>\n       */\n\n      this.close = new EventEmitter();\n    }\n    /**\n     * Shows `close` icon\n     */\n\n\n    get closable() {\n      return this._closable;\n    }\n\n    set closable(value) {\n      this._closable = convertToBoolProperty(value);\n    }\n    /**\n     * Emits the removed chip event\n     */\n\n\n    onClose() {\n      this.close.emit();\n    }\n\n    get tiny() {\n      return this.size === 'tiny';\n    }\n\n    get small() {\n      return this.size === 'small';\n    }\n\n    get medium() {\n      return this.size === 'medium';\n    }\n\n    get large() {\n      return this.size === 'large';\n    }\n\n    get giant() {\n      return this.size === 'giant';\n    }\n\n    get primary() {\n      return this.status === 'primary';\n    }\n\n    get success() {\n      return this.status === 'success';\n    }\n\n    get info() {\n      return this.status === 'info';\n    }\n\n    get warning() {\n      return this.status === 'warning';\n    }\n\n    get danger() {\n      return this.status === 'danger';\n    }\n\n    get basic() {\n      return this.status === 'basic';\n    }\n\n    get control() {\n      return this.status === 'control';\n    }\n\n    get primaryAccent() {\n      return this.accent === 'primary';\n    }\n\n    get successAccent() {\n      return this.accent === 'success';\n    }\n\n    get infoAccent() {\n      return this.accent === 'info';\n    }\n\n    get warningAccent() {\n      return this.accent === 'warning';\n    }\n\n    get dangerAccent() {\n      return this.accent === 'danger';\n    }\n\n    get basicAccent() {\n      return this.accent === 'basic';\n    }\n\n    get controlAccent() {\n      return this.accent === 'control';\n    }\n\n    get primaryOutline() {\n      return this.outline === 'primary';\n    }\n\n    get successOutline() {\n      return this.outline === 'success';\n    }\n\n    get infoOutline() {\n      return this.outline === 'info';\n    }\n\n    get warningOutline() {\n      return this.outline === 'warning';\n    }\n\n    get dangerOutline() {\n      return this.outline === 'danger';\n    }\n\n    get basicOutline() {\n      return this.outline === 'basic';\n    }\n\n    get controlOutline() {\n      return this.outline === 'control';\n    }\n\n    get additionalClasses() {\n      if (this.statusService.isCustomStatus(this.status)) {\n        return [this.statusService.getStatusClass(this.status)];\n      }\n\n      return [];\n    }\n\n  }\n\n  NbAlertComponent.ɵfac = function NbAlertComponent_Factory(t) {\n    return new (t || NbAlertComponent)(ɵngcc0.ɵɵdirectiveInject(NbStatusService));\n  };\n\n  NbAlertComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbAlertComponent,\n    selectors: [[\"nb-alert\"]],\n    hostVars: 56,\n    hostBindings: function NbAlertComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassMap(ctx.additionalClasses);\n        ɵngcc0.ɵɵclassProp(\"closable\", ctx.closable)(\"size-tiny\", ctx.tiny)(\"size-small\", ctx.small)(\"size-medium\", ctx.medium)(\"size-large\", ctx.large)(\"size-giant\", ctx.giant)(\"status-primary\", ctx.primary)(\"status-success\", ctx.success)(\"status-info\", ctx.info)(\"status-warning\", ctx.warning)(\"status-danger\", ctx.danger)(\"status-basic\", ctx.basic)(\"status-control\", ctx.control)(\"accent-primary\", ctx.primaryAccent)(\"accent-success\", ctx.successAccent)(\"accent-info\", ctx.infoAccent)(\"accent-warning\", ctx.warningAccent)(\"accent-danger\", ctx.dangerAccent)(\"accent-basic\", ctx.basicAccent)(\"accent-control\", ctx.controlAccent)(\"outline-primary\", ctx.primaryOutline)(\"outline-success\", ctx.successOutline)(\"outline-info\", ctx.infoOutline)(\"outline-warning\", ctx.warningOutline)(\"outline-danger\", ctx.dangerOutline)(\"outline-basic\", ctx.basicOutline)(\"outline-control\", ctx.controlOutline);\n      }\n    },\n    inputs: {\n      size: \"size\",\n      status: \"status\",\n      accent: \"accent\",\n      outline: \"outline\",\n      closable: \"closable\"\n    },\n    outputs: {\n      close: \"close\"\n    },\n    ngContentSelectors: _c0,\n    decls: 2,\n    vars: 1,\n    consts: [[\"type\", \"button\", \"class\", \"close\", \"aria-label\", \"Close\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"close\", 3, \"click\"], [\"aria-hidden\", \"true\"]],\n    template: function NbAlertComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, NbAlertComponent_button_0_Template, 3, 0, \"button\", 0);\n        ɵngcc0.ɵɵprojection(1);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.closable);\n      }\n    },\n    directives: [ɵngcc2.NgIf],\n    styles: [\"[_nghost-%COMP%]{display:flex;flex-direction:column;position:relative}[dir=ltr]   [_nghost-%COMP%]   .close[_ngcontent-%COMP%]{right:0}[dir=rtl]   [_nghost-%COMP%]   .close[_ngcontent-%COMP%]{left:0}.close[_ngcontent-%COMP%]{position:absolute;top:0;color:inherit;background-color:transparent;border:0;appearance:none}\"]\n  });\n  return NbAlertComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nlet NbAlertModule = /*#__PURE__*/(() => {\n  class NbAlertModule {}\n\n  NbAlertModule.ɵfac = function NbAlertModule_Factory(t) {\n    return new (t || NbAlertModule)();\n  };\n\n  NbAlertModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NbAlertModule\n  });\n  NbAlertModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[NbSharedModule]]\n  });\n  return NbAlertModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NbAlertModule, {\n    declarations: [NbAlertComponent],\n    imports: [NbSharedModule],\n    exports: [NbAlertComponent]\n  });\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * Chat form component.\n *\n * Show a message form with a send message button.\n *\n * ```ts\n * <nb-chat-form showButton=\"true\" buttonIcon=\"nb-send\">\n * </nb-chat-form>\n * ```\n *\n * When `[dropFiles]=\"true\"` handles files drag&drop with a file preview.\n *\n * Drag & drop available for files and images:\n * @stacked-example(Drag & Drop Chat, chat/chat-drop.component)\n *\n * New message could be tracked outside by using `(send)` output.\n *\n * ```ts\n * <nb-chat-form (send)=\"onNewMessage($event)\">\n * </nb-chat-form>\n *\n * // ...\n *\n * onNewMessage({ message: string, files: any[] }) {\n *   this.service.sendToServer(message, files);\n * }\n * ```\n */\n\n\nlet NbChatFormComponent = /*#__PURE__*/(() => {\n  class NbChatFormComponent {\n    constructor(cd, domSanitizer) {\n      this.cd = cd;\n      this.domSanitizer = domSanitizer;\n      this.status = 'basic';\n      this.inputFocus = false;\n      this.inputHover = false;\n      this.droppedFiles = [];\n      this.imgDropTypes = ['image/png', 'image/jpeg', 'image/gif'];\n      /**\n       * Predefined message text\n       * @type {string}\n       */\n\n      this.message = '';\n      /**\n       * Message placeholder text\n       * @type {string}\n       */\n\n      this.messagePlaceholder = 'Type a message';\n      /**\n       * Send button title\n       * @type {string}\n       */\n\n      this.buttonTitle = '';\n      /**\n       * Send button icon, shown if `buttonTitle` is empty\n       * @type {string}\n       */\n\n      this.buttonIcon = 'paper-plane-outline';\n      /**\n       * Show send button\n       * @type {boolean}\n       */\n\n      this.showButton = true;\n      /**\n       * Show send button\n       * @type {boolean}\n       */\n\n      this.dropFiles = false;\n      /**\n       * File drop placeholder text\n       * @type {string}\n       */\n\n      this.dropFilePlaceholder = 'Drop file to send';\n      /**\n       *\n       * @type {EventEmitter<{ message: string, files: File[] }>}\n       */\n\n      this.send = new EventEmitter();\n      /**\n       * Emits when message input value has been changed\n       * @type {EventEmitter<string>}\n       */\n\n      this.onInputChange = new EventEmitter();\n      this.fileOver = false;\n    }\n\n    onDrop(event) {\n      if (this.dropFiles) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.fileOver = false;\n\n        if (event.dataTransfer && event.dataTransfer.files) {\n          for (const file of event.dataTransfer.files) {\n            const res = file;\n\n            if (this.imgDropTypes.includes(file.type)) {\n              const fr = new FileReader();\n\n              fr.onload = e => {\n                res.src = e.target.result;\n                res.urlStyle = this.domSanitizer.bypassSecurityTrustStyle(`url(${res.src})`);\n                this.cd.detectChanges();\n              };\n\n              fr.readAsDataURL(file);\n            }\n\n            this.droppedFiles.push(res);\n          }\n        }\n      }\n    }\n\n    removeFile(file) {\n      const index = this.droppedFiles.indexOf(file);\n\n      if (index >= 0) {\n        this.droppedFiles.splice(index, 1);\n      }\n    }\n\n    onDragOver() {\n      if (this.dropFiles) {\n        this.fileOver = true;\n      }\n    }\n\n    onDragLeave() {\n      if (this.dropFiles) {\n        this.fileOver = false;\n      }\n    }\n\n    sendMessage() {\n      if (this.droppedFiles.length || String(this.message).trim().length) {\n        this.send.emit({\n          message: this.message,\n          files: this.droppedFiles\n        });\n        this.message = '';\n        this.droppedFiles = [];\n      }\n    }\n\n    setStatus(status) {\n      if (this.status !== status) {\n        this.status = status;\n        this.cd.detectChanges();\n      }\n    }\n\n    getInputStatus() {\n      if (this.fileOver) {\n        return this.getHighlightStatus();\n      }\n\n      if (this.inputFocus || this.inputHover) {\n        return this.status;\n      }\n\n      return 'basic';\n    }\n\n    getButtonStatus() {\n      return this.getHighlightStatus();\n    }\n\n    getHighlightStatus() {\n      if (this.status === 'basic' || this.status === 'control') {\n        return 'primary';\n      }\n\n      return this.status;\n    }\n\n    onModelChange(value) {\n      this.onInputChange.emit(value);\n    }\n\n  }\n\n  NbChatFormComponent.ɵfac = function NbChatFormComponent_Factory(t) {\n    return new (t || NbChatFormComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.DomSanitizer));\n  };\n\n  NbChatFormComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbChatFormComponent,\n    selectors: [[\"nb-chat-form\"]],\n    hostVars: 2,\n    hostBindings: function NbChatFormComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"drop\", function NbChatFormComponent_drop_HostBindingHandler($event) {\n          return ctx.onDrop($event);\n        })(\"dragover\", function NbChatFormComponent_dragover_HostBindingHandler() {\n          return ctx.onDragOver();\n        })(\"dragleave\", function NbChatFormComponent_dragleave_HostBindingHandler() {\n          return ctx.onDragLeave();\n        });\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"file-over\", ctx.fileOver);\n      }\n    },\n    inputs: {\n      message: \"message\",\n      messagePlaceholder: \"messagePlaceholder\",\n      buttonTitle: \"buttonTitle\",\n      buttonIcon: \"buttonIcon\",\n      showButton: \"showButton\",\n      dropFiles: \"dropFiles\",\n      dropFilePlaceholder: \"dropFilePlaceholder\"\n    },\n    outputs: {\n      send: \"send\",\n      onInputChange: \"onInputChange\"\n    },\n    decls: 4,\n    vars: 7,\n    consts: [[\"class\", \"dropped-files\", 4, \"ngIf\"], [1, \"message-row\"], [\"nbInput\", \"\", \"fullWidth\", \"\", \"type\", \"text\", 3, \"status\", \"ngModel\", \"placeholder\", \"focus\", \"blur\", \"mouseenter\", \"mouseleave\", \"ngModelChange\", \"keyup.enter\"], [\"nbButton\", \"\", \"class\", \"send-button\", 3, \"status\", \"with-icon\", \"click\", 4, \"ngIf\"], [1, \"dropped-files\"], [4, \"ngFor\", \"ngForOf\"], [3, \"background-image\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"remove\", 3, \"click\"], [\"icon\", \"file-text-outline\", \"pack\", \"nebular-essentials\"], [\"nbButton\", \"\", 1, \"send-button\", 3, \"status\", \"click\"], [\"pack\", \"nebular-essentials\", 3, \"icon\", 4, \"ngIf\", \"ngIfElse\"], [\"title\", \"\"], [\"pack\", \"nebular-essentials\", 3, \"icon\"]],\n    template: function NbChatFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, NbChatFormComponent_div_0_Template, 2, 1, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"input\", 2);\n        ɵngcc0.ɵɵlistener(\"focus\", function NbChatFormComponent_Template_input_focus_2_listener() {\n          return ctx.inputFocus = true;\n        })(\"blur\", function NbChatFormComponent_Template_input_blur_2_listener() {\n          return ctx.inputFocus = false;\n        })(\"mouseenter\", function NbChatFormComponent_Template_input_mouseenter_2_listener() {\n          return ctx.inputHover = true;\n        })(\"mouseleave\", function NbChatFormComponent_Template_input_mouseleave_2_listener() {\n          return ctx.inputHover = false;\n        })(\"ngModelChange\", function NbChatFormComponent_Template_input_ngModelChange_2_listener($event) {\n          return ctx.message = $event;\n        })(\"ngModelChange\", function NbChatFormComponent_Template_input_ngModelChange_2_listener($event) {\n          return ctx.onModelChange($event);\n        })(\"keyup.enter\", function NbChatFormComponent_Template_input_keyup_enter_2_listener() {\n          return ctx.sendMessage();\n        });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(3, NbChatFormComponent_button_3_Template, 4, 5, \"button\", 3);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.droppedFiles == null ? null : ctx.droppedFiles.length);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"with-button\", ctx.showButton);\n        ɵngcc0.ɵɵpropertyInterpolate(\"placeholder\", ctx.fileOver ? ctx.dropFilePlaceholder : ctx.messagePlaceholder);\n        ɵngcc0.ɵɵproperty(\"status\", ctx.getInputStatus())(\"ngModel\", ctx.message);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showButton);\n      }\n    },\n    directives: function () {\n      return [ɵngcc2.NgIf, NbInputDirective, ɵngcc6.DefaultValueAccessor, ɵngcc6.NgControlStatus, ɵngcc6.NgModel, ɵngcc2.NgForOf, NbIconComponent, NbButtonComponent];\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return NbChatFormComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * `NbCustomMessageService` is used to store instances of `NbChatCustomMessageDirective`s which\n * were provided in the chat component.\n */\n\n\nlet NbCustomMessageService = /*#__PURE__*/(() => {\n  class NbCustomMessageService {\n    constructor() {\n      this.customMessages = new Map();\n    }\n\n    register(type, instance) {\n      this.customMessages.set(type, instance);\n    }\n\n    unregister(type) {\n      return this.customMessages.delete(type);\n    }\n\n    getInstance(type) {\n      return this.customMessages.get(type);\n    }\n\n  }\n\n  NbCustomMessageService.ɵfac = function NbCustomMessageService_Factory(t) {\n    return new (t || NbCustomMessageService)();\n  };\n\n  NbCustomMessageService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: NbCustomMessageService,\n    factory: NbCustomMessageService.ɵfac\n  });\n  return NbCustomMessageService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * Chat message component.\n *\n * Multiple message types are available through a `type` property, such as\n * - text - simple text message\n * - file - could be a file preview or a file icon\n * if multiple files are provided grouped files are shown\n * - quote - quotes a message with specific quote styles\n * - map - shows a google map picture by provided [latitude] and [longitude] properties\n *\n * @stacked-example(Available Types, chat/chat-message-types-showcase.component)\n *\n * Message with attached files:\n * ```html\n * <nb-chat-message\n *   type=\"file\"\n *   [files]=\"[ { url: '...' } ]\"\n *   message=\"Hello world!\">\n * </nb-chat-message>\n * ```\n *\n * Map message:\n * ```html\n * <nb-chat-message\n *   type=\"map\"\n *   [latitude]=\"53.914\"\n *   [longitude]=\"27.59\"\n *   message=\"Here I am\">\n * </nb-chat-message>\n * ```\n *\n * @styles\n *\n * chat-message-background:\n * chat-message-text-color:\n * chat-message-reply-background-color:\n * chat-message-reply-text-color:\n * chat-message-avatar-background-color:\n * chat-message-sender-text-color:\n * chat-message-quote-background-color:\n * chat-message-quote-text-color:\n * chat-message-file-text-color:\n * chat-message-file-background-color:\n */\n\n\nlet NbChatMessageComponent = /*#__PURE__*/(() => {\n  class NbChatMessageComponent {\n    constructor(domSanitizer, customMessageService) {\n      this.domSanitizer = domSanitizer;\n      this.customMessageService = customMessageService;\n      this.builtInMessageTypes = ['text', 'file', 'map', 'quote'];\n      this._reply = false;\n    }\n\n    get _addReplyClass() {\n      return this._areDefaultStylesEnabled() && this.reply;\n    }\n\n    get _addNotReplyClass() {\n      return this._areDefaultStylesEnabled() && this.notReply;\n    }\n\n    get _addNoSpaceClass() {\n      return this._areDefaultStylesEnabled() && !this.message;\n    }\n\n    get flyInOut() {\n      return true;\n    }\n\n    get notReply() {\n      return !this.reply;\n    }\n    /**\n     * Determines if a message is a reply\n     */\n\n\n    get reply() {\n      return this._reply;\n    }\n\n    set reply(value) {\n      this._reply = convertToBoolProperty(value);\n    }\n    /**\n     * Message send avatar\n     * @type {string}\n     */\n\n\n    set avatar(value) {\n      this.avatarStyle = value ? this.domSanitizer.bypassSecurityTrustStyle(`url(${value})`) : null;\n    }\n\n    getInitials() {\n      if (this.sender) {\n        const names = this.sender.split(' ');\n        return names.map(n => n.charAt(0)).splice(0, 2).join('').toUpperCase();\n      }\n\n      return '';\n    }\n\n    _isBuiltInMessageType() {\n      // Unset type defaults to \"text\" type\n      return this.type == null || this.builtInMessageTypes.includes(this.type);\n    }\n\n    _getTemplate() {\n      const customMessage = this.getCustomMessage(this.type);\n      return customMessage.templateRef;\n    }\n\n    _getTemplateContext() {\n      return {\n        $implicit: this.customMessageData,\n        isReply: this.reply\n      };\n    }\n\n    _areDefaultStylesEnabled() {\n      const customMessageDirective = this.getCustomMessage(this.type);\n      return !customMessageDirective.noStyles;\n    }\n\n    getCustomMessage(type) {\n      const customMessageDirective = this.customMessageService.getInstance(type);\n\n      if (!customMessageDirective) {\n        throw new Error(`nb-chat: Can't find template for custom type '${type}'. ` + `Make sure you provide it in the chat component with *nbCustomMessage='${type}'.`);\n      }\n\n      return customMessageDirective;\n    }\n\n  }\n\n  NbChatMessageComponent.ɵfac = function NbChatMessageComponent_Factory(t) {\n    return new (t || NbChatMessageComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.DomSanitizer), ɵngcc0.ɵɵdirectiveInject(NbCustomMessageService));\n  };\n\n  NbChatMessageComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbChatMessageComponent,\n    selectors: [[\"nb-chat-message\"]],\n    hostVars: 5,\n    hostBindings: function NbChatMessageComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵsyntheticHostProperty(\"@flyInOut\", ctx.flyInOut);\n        ɵngcc0.ɵɵclassProp(\"not-reply\", ctx.notReply)(\"reply\", ctx.reply);\n      }\n    },\n    inputs: {\n      reply: \"reply\",\n      avatar: \"avatar\",\n      message: \"message\",\n      sender: \"sender\",\n      date: \"date\",\n      dateFormat: \"dateFormat\",\n      files: \"files\",\n      quote: \"quote\",\n      latitude: \"latitude\",\n      longitude: \"longitude\",\n      type: \"type\",\n      customMessageData: \"customMessageData\"\n    },\n    decls: 5,\n    vars: 3,\n    consts: [[3, \"initials\", \"avatarStyle\", 4, \"ngIf\"], [1, \"message\"], [3, \"ngSwitch\", 4, \"ngIf\", \"ngIfElse\"], [\"customTemplate\", \"\"], [3, \"initials\", \"avatarStyle\"], [3, \"ngSwitch\"], [3, \"sender\", \"date\", \"dateFormat\", \"message\", \"files\", 4, \"ngSwitchCase\"], [3, \"sender\", \"date\", \"dateFormat\", \"message\", \"quote\", 4, \"ngSwitchCase\"], [3, \"sender\", \"date\", \"message\", \"latitude\", \"longitude\", 4, \"ngSwitchCase\"], [3, \"sender\", \"date\", \"dateFormat\", \"message\", 4, \"ngSwitchDefault\"], [3, \"sender\", \"date\", \"dateFormat\", \"message\", \"files\"], [3, \"sender\", \"date\", \"dateFormat\", \"message\", \"quote\"], [3, \"sender\", \"date\", \"message\", \"latitude\", \"longitude\"], [3, \"sender\", \"date\", \"dateFormat\", \"message\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n    template: function NbChatMessageComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, NbChatMessageComponent_nb_chat_avatar_0_Template, 1, 2, \"nb-chat-avatar\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, NbChatMessageComponent_ng_container_2_Template, 5, 4, \"ng-container\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(3, NbChatMessageComponent_ng_template_3_Template, 3, 16, \"ng-template\", null, 3, ɵngcc0.ɵɵtemplateRefExtractor);\n      }\n\n      if (rf & 2) {\n        const _r2 = ɵngcc0.ɵɵreference(4);\n\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.notReply);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._isBuiltInMessageType())(\"ngIfElse\", _r2);\n      }\n    },\n    directives: function () {\n      return [ɵngcc2.NgIf, NbChatAvatarComponent, ɵngcc2.NgSwitch, ɵngcc2.NgSwitchCase, ɵngcc2.NgSwitchDefault, NbChatMessageFileComponent, NbChatMessageQuoteComponent, NbChatMessageMapComponent, NbChatMessageTextComponent, ɵngcc2.NgTemplateOutlet];\n    },\n    encapsulation: 2,\n    data: {\n      animation: [trigger('flyInOut', [state('in', style({\n        transform: 'translateX(0)'\n      })), transition('void => *', [style({\n        transform: 'translateX(-100%)'\n      }), animate(80)]), transition('* => void', [animate(80, style({\n        transform: 'translateX(100%)'\n      }))])])]\n    },\n    changeDetection: 0\n  });\n  return NbChatMessageComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * Conversational UI collection - a set of components for chat-like UI construction.\n *\n * Main features:\n * - different message types support (text, image, file, file group, map, etc)\n * - drag & drop for images and files with preview\n * - different UI styles\n * - custom action buttons (coming soon)\n *\n * Here's a complete example build in a bot-like app. Type `help` to be able to receive different message types.\n * Enjoy the conversation and the beautiful UI.\n * @stacked-example(Showcase, chat/chat-showcase.component)\n *\n * Basic chat configuration and usage:\n * ```ts\n * <nb-chat title=\"Nebular Conversational UI\">\n *       <nb-chat-message *ngFor=\"let msg of messages\"\n *                        [type]=\"msg.type\"\n *                        [message]=\"msg.text\"\n *                        [reply]=\"msg.reply\"\n *                        [sender]=\"msg.user.name\"\n *                        [date]=\"msg.date\"\n *                        [files]=\"msg.files\"\n *                        [quote]=\"msg.quote\"\n *                        [latitude]=\"msg.latitude\"\n *                        [longitude]=\"msg.longitude\"\n *                        [avatar]=\"msg.user.avatar\">\n *   </nb-chat-message>\n *\n *   <nb-chat-form (send)=\"sendMessage($event)\" [dropFiles]=\"true\">\n *   </nb-chat-form>\n * </nb-chat>\n * ```\n * ### Installation\n *\n * Import `NbChatModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbChatModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n *\n * If you need to provide an API key for a `map` message type (which is required by Google Maps)\n * you may use `NbChatModule.forRoot({ ... })` call if this is a global app configuration\n * or `NbChatModule.forChild({ ... })` for a feature module configuration:\n *\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbChatModule.forRoot({ messageGoogleMapKey: 'MAP_KEY' }),\n *   ],\n * })\n * export class AppModule { }\n * ```\n *\n * ### Usage\n *\n * There are three main components:\n * ```ts\n * <nb-chat>\n * </nb-chat> // chat container\n *\n * <nb-chat-form>\n * </nb-chat-form> // chat form with drag&drop files feature\n *\n * <nb-chat-message>\n * </nb-chat-message> // chat message, available multiple types\n * ```\n *\n * Two users conversation showcase:\n * @stacked-example(Conversation, chat/chat-conversation-showcase.component)\n *\n * Chat UI is also available in different colors by specifying a `[status]` input:\n *\n * @stacked-example(Colored Chat, chat/chat-colors.component)\n *\n * Also it is possible to configure sizes through `[size]` input:\n *\n * @stacked-example(Chat Sizes, chat/chat-sizes.component)\n *\n * # Custom message types\n *\n * Besides built-in message types, you could provide custom ones with their own template to render.\n * As an example, let's add the `link` message type.\n * <br>\n * First, you need to provide a template for the `link` message type:\n * ```html\n * <nb-chat>\n *   <a *nbCustomMessage=\"'link'\" href=\"https://example.com\">example.com</a>\n * </nb-chat>\n * ```\n * Then, add the `nb-chat-message` component with the `link` type:\n * ```html\n * <nb-chat>\n *   <a *nbCustomMessage=\"'link'\" href=\"https://example.com\">example.com</a>\n *   <nb-chat-message type=\"link\"></nb-chat-message>\n * </nb-chat>\n * ```\n *\n * <div class=\"note note-warning\">\n *   <div class=\"note-title\">Important!</div>\n *   <div class=\"note-body\">\n *     Custom chat messages must be defined before the `nb-chat-message`.\n *   </div>\n * </div>\n *\n * Custom message templates could have arbitrary data associated with them. Let's extract hardcoded link\n * href and text. To pass some data to the custom message template, use the `customMessageData` input\n * of the `nb-chat-message` component:\n * ```html\n * ...\n * <nb-chat-message type=\"link\" [customMessageData]=\"{ href: 'https://example.com', text: 'example.com' }\">\n * </nb-chat-message>\n * ...\n * ```\n * When `customMessageData` is set, this object would become a template context and you'll be able\n * to reference it via `let varName` syntax:\n * ```html\n * <a *nbCustomMessage=\"'link'; let data\" [href]=\"data.href\">{{ data.text }}</a>\n * ```\n *\n * That's it, full example will look like this:\n * ```html\n * <nb-chat title=\"Nebular Conversational UI\">\n *   <a *nbCustomMessage=\"'link'; let data\" [href]=\"data.href\">{{ data.text }}</a>\n *   <nb-chat-message type=\"link\" [customMessageData]=\"{ href: 'https://example.com', text: 'example.com' }\">\n *   </nb-chat-message>\n * </nb-chat>\n * ```\n *\n * If you want to style your custom template from the ground up you could turn off generic message styling\n * (such as round borders, color, background, etc.) via the `noStyles` input:\n * ```html\n *   <div *nbCustomMessage=\"'my-custom-type'; noStyles: true\">...</div>\n * ```\n * When you decide to use your own styles, the `isReply` property of the custom message template context\n * would come in handy. This property allows you to determine whether the message is a reply or not.\n * For example, to change link text color (as replies have a different background):\n * ```html\n * <a *nbCustomMessage=\"'link'; let data; let isReply=isReply\"\n *    [href]=\"data.href\"\n *    [class.link-control]=\"!isReply\">\n *   {{ data.label }}\n * </a>\n * ```\n *\n * Below, you could find a more complex example with multiple custom message types:\n * @stacked-example(Custom message, chat/chat-custom-message.component)\n *\n * @styles\n *\n * chat-background-color:\n * chat-border:\n * chat-border-radius:\n * chat-shadow:\n * chat-padding:\n * chat-scrollbar-color:\n * chat-scrollbar-background-color:\n * chat-scrollbar-width:\n * chat-text-color:\n * chat-text-font-family:\n * chat-text-font-size:\n * chat-text-font-weight:\n * chat-text-line-height:\n * chat-header-text-font-family:\n * chat-header-text-font-size:\n * chat-header-text-font-weight:\n * chat-header-text-line-height:\n * chat-tiny-height:\n * chat-small-height:\n * chat-medium-height:\n * chat-large-height:\n * chat-giant-height:\n * chat-basic-background-color:\n * chat-basic-text-color:\n * chat-primary-background-color:\n * chat-primary-text-color:\n * chat-success-background-color:\n * chat-success-text-color:\n * chat-info-background-color:\n * chat-info-text-color:\n * chat-warning-background-color:\n * chat-warning-text-color:\n * chat-danger-background-color:\n * chat-danger-text-color:\n * chat-control-background-color:\n * chat-control-text-color:\n * chat-divider-color:\n * chat-divider-style:\n * chat-divider-width:\n * chat-message-background:\n * chat-message-text-color:\n * chat-message-reply-background-color:\n * chat-message-reply-text-color:\n * chat-message-avatar-background-color:\n * chat-message-sender-text-color:\n * chat-message-quote-background-color:\n * chat-message-quote-text-color:\n * chat-message-file-text-color:\n * chat-message-file-background-color:\n */\n\n\nlet NbChatComponent = /*#__PURE__*/(() => {\n  class NbChatComponent {\n    constructor(statusService) {\n      this.statusService = statusService;\n      /**\n       * Chat status color (adds specific styles):\n       * `basic` (default), `primary`, `success`, `info`, `warning`, `danger`, `control`.\n       */\n\n      this.status = 'basic';\n      this.noMessagesPlaceholder = 'No messages yet.';\n      this._scrollBottom = true;\n    }\n    /**\n     * Scroll chat to the bottom of the list when a new message arrives\n     */\n\n\n    get scrollBottom() {\n      return this._scrollBottom;\n    }\n\n    set scrollBottom(value) {\n      this._scrollBottom = convertToBoolProperty(value);\n    }\n\n    ngOnChanges(changes) {\n      if ('status' in changes) {\n        this.updateFormStatus();\n      }\n    }\n\n    ngAfterContentInit() {\n      this.updateFormStatus();\n    }\n\n    ngAfterViewInit() {\n      this.messages.changes.subscribe(messages => {\n        this.messages = messages;\n        this.updateView();\n      });\n      this.updateView();\n    }\n\n    updateView() {\n      if (this.scrollBottom) {\n        this.scrollListBottom();\n      }\n    }\n\n    scrollListBottom() {\n      this.scrollable.nativeElement.scrollTop = this.scrollable.nativeElement.scrollHeight;\n    }\n\n    updateFormStatus() {\n      if (this.chatForm) {\n        this.chatForm.setStatus(this.status);\n      }\n    }\n\n    get tiny() {\n      return this.size === 'tiny';\n    }\n\n    get small() {\n      return this.size === 'small';\n    }\n\n    get medium() {\n      return this.size === 'medium';\n    }\n\n    get large() {\n      return this.size === 'large';\n    }\n\n    get giant() {\n      return this.size === 'giant';\n    }\n\n    get primary() {\n      return this.status === 'primary';\n    }\n\n    get success() {\n      return this.status === 'success';\n    }\n\n    get info() {\n      return this.status === 'info';\n    }\n\n    get warning() {\n      return this.status === 'warning';\n    }\n\n    get danger() {\n      return this.status === 'danger';\n    }\n\n    get basic() {\n      return this.status === 'basic';\n    }\n\n    get control() {\n      return this.status === 'control';\n    }\n\n    get additionalClasses() {\n      if (this.statusService.isCustomStatus(this.status)) {\n        return [this.statusService.getStatusClass(this.status)];\n      }\n\n      return [];\n    }\n\n  }\n\n  NbChatComponent.ɵfac = function NbChatComponent_Factory(t) {\n    return new (t || NbChatComponent)(ɵngcc0.ɵɵdirectiveInject(NbStatusService));\n  };\n\n  NbChatComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbChatComponent,\n    selectors: [[\"nb-chat\"]],\n    contentQueries: function NbChatComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NbChatFormComponent, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NbChatMessageComponent, 4);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chatForm = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.messages = _t);\n      }\n    },\n    viewQuery: function NbChatComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c23, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.scrollable = _t.first);\n      }\n    },\n    hostVars: 26,\n    hostBindings: function NbChatComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassMap(ctx.additionalClasses);\n        ɵngcc0.ɵɵclassProp(\"size-tiny\", ctx.tiny)(\"size-small\", ctx.small)(\"size-medium\", ctx.medium)(\"size-large\", ctx.large)(\"size-giant\", ctx.giant)(\"status-primary\", ctx.primary)(\"status-success\", ctx.success)(\"status-info\", ctx.info)(\"status-warning\", ctx.warning)(\"status-danger\", ctx.danger)(\"status-basic\", ctx.basic)(\"status-control\", ctx.control);\n      }\n    },\n    inputs: {\n      status: \"status\",\n      noMessagesPlaceholder: \"noMessagesPlaceholder\",\n      scrollBottom: \"scrollBottom\",\n      title: \"title\",\n      size: \"size\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([NbCustomMessageService]), ɵngcc0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c25,\n    decls: 9,\n    vars: 2,\n    consts: [[1, \"header\"], [1, \"scrollable\"], [\"scrollable\", \"\"], [1, \"messages\"], [\"class\", \"no-messages\", 4, \"ngIf\"], [1, \"form\"], [1, \"no-messages\"]],\n    template: function NbChatComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c24);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵtext(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(2, \"div\", 1, 2);\n        ɵngcc0.ɵɵelementStart(4, \"div\", 3);\n        ɵngcc0.ɵɵprojection(5);\n        ɵngcc0.ɵɵtemplate(6, NbChatComponent_p_6_Template, 2, 1, \"p\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(7, \"div\", 5);\n        ɵngcc0.ɵɵprojection(8, 1);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate(ctx.title);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !(ctx.messages == null ? null : ctx.messages.length));\n      }\n    },\n    directives: [ɵngcc2.NgIf],\n    styles: [\"[_nghost-%COMP%]{display:flex;flex-direction:column;position:relative;height:100%}\"]\n  });\n  return NbChatComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nclass NbChatOptions {}\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * Chat message component.\n */\n\n\nlet NbChatMessageMapComponent = /*#__PURE__*/(() => {\n  class NbChatMessageMapComponent {\n    constructor(options) {\n      /**\n       * Message send date format, default 'shortTime'\n       * @type {string}\n       */\n      this.dateFormat = 'shortTime';\n      this.mapKey = options.messageGoogleMapKey;\n    }\n\n    get file() {\n      return {\n        // tslint:disable-next-line:max-line-length\n        url: `https://maps.googleapis.com/maps/api/staticmap?center=${this.latitude},${this.longitude}&zoom=12&size=400x400&key=${this.mapKey}`,\n        type: 'image/png',\n        icon: 'location'\n      };\n    }\n\n  }\n\n  NbChatMessageMapComponent.ɵfac = function NbChatMessageMapComponent_Factory(t) {\n    return new (t || NbChatMessageMapComponent)(ɵngcc0.ɵɵdirectiveInject(NbChatOptions));\n  };\n\n  NbChatMessageMapComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbChatMessageMapComponent,\n    selectors: [[\"nb-chat-message-map\"]],\n    inputs: {\n      dateFormat: \"dateFormat\",\n      message: \"message\",\n      sender: \"sender\",\n      date: \"date\",\n      latitude: \"latitude\",\n      longitude: \"longitude\"\n    },\n    decls: 1,\n    vars: 7,\n    consts: [[3, \"files\", \"message\", \"sender\", \"date\", \"dateFormat\"]],\n    template: function NbChatMessageMapComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"nb-chat-message-file\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"files\", ɵngcc0.ɵɵpureFunction1(5, _c26, ctx.file))(\"message\", ctx.message)(\"sender\", ctx.sender)(\"date\", ctx.date)(\"dateFormat\", ctx.dateFormat);\n      }\n    },\n    directives: function () {\n      return [NbChatMessageFileComponent];\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return NbChatMessageMapComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * Chat message component.\n */\n\n\nlet NbChatMessageFileComponent = /*#__PURE__*/(() => {\n  class NbChatMessageFileComponent {\n    constructor(cd, domSanitizer) {\n      this.cd = cd;\n      this.domSanitizer = domSanitizer;\n      /**\n       * Message send date format, default 'shortTime'\n       * @type {string}\n       */\n\n      this.dateFormat = 'shortTime';\n    }\n    /**\n     * Message file path\n     * @type {Date}\n     */\n\n\n    set files(files) {\n      this.readyFiles = (files || []).map(file => {\n        const isImage = this.isImage(file);\n        return Object.assign(Object.assign({}, file), {\n          urlStyle: isImage && this.domSanitizer.bypassSecurityTrustStyle(`url(${file.url})`),\n          isImage: isImage\n        });\n      });\n      this.cd.detectChanges();\n    }\n\n    isImage(file) {\n      const type = file.type;\n\n      if (type) {\n        return ['image/png', 'image/jpeg', 'image/gif'].includes(type);\n      }\n\n      return false;\n    }\n\n  }\n\n  NbChatMessageFileComponent.ɵfac = function NbChatMessageFileComponent_Factory(t) {\n    return new (t || NbChatMessageFileComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.DomSanitizer));\n  };\n\n  NbChatMessageFileComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbChatMessageFileComponent,\n    selectors: [[\"nb-chat-message-file\"]],\n    inputs: {\n      dateFormat: \"dateFormat\",\n      files: \"files\",\n      message: \"message\",\n      sender: \"sender\",\n      date: \"date\"\n    },\n    decls: 4,\n    vars: 7,\n    consts: [[3, \"sender\", \"date\", \"dateFormat\", \"message\"], [4, \"ngIf\"], [1, \"message-content-group\"], [\"target\", \"_blank\", 3, \"href\", 4, \"ngFor\", \"ngForOf\"], [\"target\", \"_blank\", 3, \"href\"], [3, \"icon\", 4, \"ngIf\"], [3, \"background-image\", 4, \"ngIf\"], [3, \"icon\"]],\n    template: function NbChatMessageFileComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"nb-chat-message-text\", 0);\n        ɵngcc0.ɵɵtext(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(2, NbChatMessageFileComponent_ng_container_2_Template, 3, 1, \"ng-container\", 1);\n        ɵngcc0.ɵɵtemplate(3, NbChatMessageFileComponent_ng_container_3_Template, 4, 3, \"ng-container\", 1);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"sender\", ctx.sender)(\"date\", ctx.date)(\"dateFormat\", ctx.dateFormat)(\"message\", ctx.message);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx.message, \" \");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", (ctx.readyFiles == null ? null : ctx.readyFiles.length) > 1);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", (ctx.readyFiles == null ? null : ctx.readyFiles.length) === 1);\n      }\n    },\n    directives: function () {\n      return [NbChatMessageTextComponent, ɵngcc2.NgIf, ɵngcc2.NgForOf, NbIconComponent];\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return NbChatMessageFileComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * Chat message component.\n */\n\n\nlet NbChatMessageQuoteComponent = /*#__PURE__*/(() => {\n  class NbChatMessageQuoteComponent {\n    constructor() {\n      /**\n        * Message send date format, default 'shortTime'\n        * @type {string}\n        */\n      this.dateFormat = 'shortTime';\n    }\n\n  }\n\n  NbChatMessageQuoteComponent.ɵfac = function NbChatMessageQuoteComponent_Factory(t) {\n    return new (t || NbChatMessageQuoteComponent)();\n  };\n\n  NbChatMessageQuoteComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbChatMessageQuoteComponent,\n    selectors: [[\"nb-chat-message-quote\"]],\n    inputs: {\n      dateFormat: \"dateFormat\",\n      message: \"message\",\n      sender: \"sender\",\n      date: \"date\",\n      quote: \"quote\"\n    },\n    decls: 5,\n    vars: 4,\n    consts: [[\"class\", \"sender\", 4, \"ngIf\"], [1, \"quote\"], [3, \"message\"], [1, \"sender\"]],\n    template: function NbChatMessageQuoteComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, NbChatMessageQuoteComponent_p_0_Template, 5, 5, \"p\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"p\", 1);\n        ɵngcc0.ɵɵtext(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"nb-chat-message-text\", 2);\n        ɵngcc0.ɵɵtext(4);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.sender || ctx.date);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx.quote, \" \");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"message\", ctx.message);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx.message, \" \");\n      }\n    },\n    directives: function () {\n      return [ɵngcc2.NgIf, NbChatMessageTextComponent];\n    },\n    pipes: function () {\n      return [ɵngcc2.DatePipe];\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return NbChatMessageQuoteComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * Chat message component.\n */\n\n\nlet NbChatMessageTextComponent = /*#__PURE__*/(() => {\n  class NbChatMessageTextComponent {\n    constructor() {\n      /**\n       * Message send date format, default 'shortTime'\n       * @type {string}\n       */\n      this.dateFormat = 'shortTime';\n    }\n\n  }\n\n  NbChatMessageTextComponent.ɵfac = function NbChatMessageTextComponent_Factory(t) {\n    return new (t || NbChatMessageTextComponent)();\n  };\n\n  NbChatMessageTextComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbChatMessageTextComponent,\n    selectors: [[\"nb-chat-message-text\"]],\n    inputs: {\n      dateFormat: \"dateFormat\",\n      sender: \"sender\",\n      message: \"message\",\n      date: \"date\"\n    },\n    decls: 2,\n    vars: 2,\n    consts: [[\"class\", \"sender\", 4, \"ngIf\"], [\"class\", \"text\", 4, \"ngIf\"], [1, \"sender\"], [1, \"text\"]],\n    template: function NbChatMessageTextComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, NbChatMessageTextComponent_p_0_Template, 5, 5, \"p\", 0);\n        ɵngcc0.ɵɵtemplate(1, NbChatMessageTextComponent_p_1_Template, 2, 1, \"p\", 1);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.sender || ctx.date);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.message);\n      }\n    },\n    directives: [ɵngcc2.NgIf],\n    pipes: [ɵngcc2.DatePipe],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return NbChatMessageTextComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/*\n * Class used as injection token to provide form element.\n **/\n\n\nlet NbFormFieldControl = /*#__PURE__*/(() => {\n  class NbFormFieldControl {}\n\n  NbFormFieldControl.ɵfac = function NbFormFieldControl_Factory(t) {\n    return new (t || NbFormFieldControl)();\n  };\n\n  NbFormFieldControl.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: NbFormFieldControl,\n    factory: NbFormFieldControl.ɵfac\n  });\n  return NbFormFieldControl;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/*\n * Optional config to be provided on NbFormFieldControl to alter default settings.\n **/\n\n\nlet NbFormFieldControlConfig = /*#__PURE__*/(() => {\n  class NbFormFieldControlConfig {\n    constructor() {\n      this.supportsPrefix = true;\n      this.supportsSuffix = true;\n    }\n\n  }\n\n  NbFormFieldControlConfig.ɵfac = function NbFormFieldControlConfig_Factory(t) {\n    return new (t || NbFormFieldControlConfig)();\n  };\n\n  NbFormFieldControlConfig.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: NbFormFieldControlConfig,\n    factory: NbFormFieldControlConfig.ɵfac\n  });\n  return NbFormFieldControlConfig;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * Basic input directive.\n *\n * ```html\n * <input nbInput></input>\n * ```\n *\n * ### Installation\n *\n * Import `NbInputModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbInputModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * Default input size is `medium`:\n * @stacked-example(Showcase, input/input-showcase.component)\n *\n * Inputs are available in multiple colors using `status` property:\n * @stacked-example(Input Colors, input/input-colors.component)\n *\n * There are three input sizes:\n *\n * @stacked-example(Input Sizes, input/input-sizes.component)\n *\n * Inputs available in different shapes, which could be combined with the other properties:\n * @stacked-example(Input Shapes, input/input-shapes.component)\n *\n * `nbInput` could be applied to the following selectors - `input`, `textarea`:\n * @stacked-example(Input Elements, input/input-types.component)\n *\n * You can add `fullWidth` attribute to make element fill container:\n * @stacked-example(Full width inputs, input/input-full-width.component)\n *\n * Or you can bind control with form controls or ngModel:\n * @stacked-example(Input form binding, input/input-form.component)\n *\n * Use `<nb-form-field>` to add custom content to the input field.\n * First import `NbFormFieldModule`. Then put the input field and custom content into\n * `<nb-form-field>` and add `nbPrefix` or `nbSuffix` directive to the custom content.\n * `nbPrefix` puts content before input and `nbSuffix` after.\n *\n * @stacked-example(Input with icon, form-field/form-field-input.component)\n * @stacked-example(Input with button, form-field/form-field-password.component)\n *\n * @styles\n *\n * input-border-style:\n * input-border-width:\n * input-outline-color:\n * input-outline-width:\n * input-placeholder-text-font-family:\n * input-text-font-family:\n * input-basic-text-color:\n * input-basic-placeholder-text-color:\n * input-basic-background-color:\n * input-basic-border-color:\n * input-basic-focus-background-color:\n * input-basic-focus-border-color:\n * input-basic-hover-background-color:\n * input-basic-hover-border-color:\n * input-basic-disabled-background-color:\n * input-basic-disabled-border-color:\n * input-basic-disabled-text-color:\n * input-basic-disabled-placeholder-text-color:\n * input-primary-text-color:\n * input-primary-placeholder-text-color:\n * input-primary-background-color:\n * input-primary-border-color:\n * input-primary-focus-background-color:\n * input-primary-focus-border-color:\n * input-primary-hover-background-color:\n * input-primary-hover-border-color:\n * input-primary-disabled-background-color:\n * input-primary-disabled-border-color:\n * input-primary-disabled-text-color:\n * input-primary-disabled-placeholder-text-color:\n * input-success-text-color:\n * input-success-placeholder-text-color:\n * input-success-background-color:\n * input-success-border-color:\n * input-success-focus-background-color:\n * input-success-focus-border-color:\n * input-success-hover-background-color:\n * input-success-hover-border-color:\n * input-success-disabled-background-color:\n * input-success-disabled-border-color:\n * input-success-disabled-text-color:\n * input-success-disabled-placeholder-text-color:\n * input-info-text-color:\n * input-info-placeholder-text-color:\n * input-info-background-color:\n * input-info-border-color:\n * input-info-focus-background-color:\n * input-info-focus-border-color:\n * input-info-hover-background-color:\n * input-info-hover-border-color:\n * input-info-disabled-background-color:\n * input-info-disabled-border-color:\n * input-info-disabled-text-color:\n * input-info-disabled-placeholder-text-color:\n * input-warning-text-color:\n * input-warning-placeholder-text-color:\n * input-warning-background-color:\n * input-warning-border-color:\n * input-warning-focus-background-color:\n * input-warning-focus-border-color:\n * input-warning-hover-background-color:\n * input-warning-hover-border-color:\n * input-warning-disabled-background-color:\n * input-warning-disabled-border-color:\n * input-warning-disabled-text-color:\n * input-warning-disabled-placeholder-text-color:\n * input-danger-text-color:\n * input-danger-placeholder-text-color:\n * input-danger-background-color:\n * input-danger-border-color:\n * input-danger-focus-background-color:\n * input-danger-focus-border-color:\n * input-danger-hover-background-color:\n * input-danger-hover-border-color:\n * input-danger-disabled-background-color:\n * input-danger-disabled-border-color:\n * input-danger-disabled-text-color:\n * input-danger-disabled-placeholder-text-color:\n * input-control-text-color:\n * input-control-placeholder-text-color:\n * input-control-background-color:\n * input-control-border-color:\n * input-control-focus-background-color:\n * input-control-focus-border-color:\n * input-control-hover-background-color:\n * input-control-hover-border-color:\n * input-control-disabled-background-color:\n * input-control-disabled-border-color:\n * input-control-disabled-text-color:\n * input-control-disabled-placeholder-text-color:\n * input-rectangle-border-radius:\n * input-semi-round-border-radius:\n * input-round-border-radius:\n * input-tiny-text-font-size:\n * input-tiny-text-font-weight:\n * input-tiny-text-line-height:\n * input-tiny-placeholder-text-font-size:\n * input-tiny-placeholder-text-font-weight:\n * input-tiny-placeholder-text-line-height:\n * input-tiny-padding:\n * input-tiny-max-width:\n * input-small-text-font-size:\n * input-small-text-font-weight:\n * input-small-text-line-height:\n * input-small-placeholder-text-font-size:\n * input-small-placeholder-text-font-weight:\n * input-small-placeholder-text-line-height:\n * input-small-padding:\n * input-small-max-width:\n * input-medium-text-font-size:\n * input-medium-text-font-weight:\n * input-medium-text-line-height:\n * input-medium-placeholder-text-font-size:\n * input-medium-placeholder-text-font-weight:\n * input-medium-placeholder-text-line-height:\n * input-medium-padding:\n * input-medium-max-width:\n * input-large-text-font-size:\n * input-large-text-font-weight:\n * input-large-text-line-height:\n * input-large-placeholder-text-font-size:\n * input-large-placeholder-text-font-weight:\n * input-large-placeholder-text-line-height:\n * input-large-padding:\n * input-large-max-width:\n * input-giant-text-font-size:\n * input-giant-text-font-weight:\n * input-giant-text-line-height:\n * input-giant-placeholder-text-font-size:\n * input-giant-placeholder-text-font-weight:\n * input-giant-placeholder-text-line-height:\n * input-giant-padding:\n * input-giant-max-width:\n */\n\n\nlet NbInputDirective = /*#__PURE__*/(() => {\n  class NbInputDirective {\n    constructor(elementRef, focusMonitor, renderer, zone, statusService) {\n      this.elementRef = elementRef;\n      this.focusMonitor = focusMonitor;\n      this.renderer = renderer;\n      this.zone = zone;\n      this.statusService = statusService;\n      this.destroy$ = new Subject();\n      /**\n       * Field size modifications. Possible values: `small`, `medium` (default), `large`.\n       */\n\n      this.fieldSize = 'medium';\n      /**\n       * Field status (adds specific styles):\n       * `basic`, `primary`, `info`, `success`, `warning`, `danger`, `control`\n       */\n\n      this.status = 'basic';\n      /**\n       * Field shapes modifications. Possible values: `rectangle` (default), `round`, `semi-round`.\n       */\n\n      this.shape = 'rectangle';\n      this._fullWidth = false;\n      /*\n       * @docs-private\n       **/\n\n      this.status$ = new BehaviorSubject(this.status);\n      /*\n       * @docs-private\n       **/\n\n      this.size$ = new BehaviorSubject(this.fieldSize);\n      /*\n       * @docs-private\n       **/\n\n      this.focused$ = new BehaviorSubject(false);\n      /*\n       * @docs-private\n       **/\n\n      this.disabled$ = new BehaviorSubject(false);\n      /*\n       * @docs-private\n       **/\n\n      this.fullWidth$ = new BehaviorSubject(this.fullWidth);\n    }\n    /**\n     * If set element will fill container. `false` by default.\n     */\n\n\n    get fullWidth() {\n      return this._fullWidth;\n    }\n\n    set fullWidth(value) {\n      this._fullWidth = convertToBoolProperty(value);\n    }\n\n    get additionalClasses() {\n      if (this.statusService.isCustomStatus(this.status)) {\n        return [this.statusService.getStatusClass(this.status)];\n      }\n\n      return [];\n    }\n\n    ngDoCheck() {\n      const isDisabled = this.elementRef.nativeElement.disabled;\n\n      if (isDisabled !== this.disabled$.value) {\n        this.disabled$.next(isDisabled);\n      }\n    }\n\n    ngOnChanges({\n      status,\n      fieldSize,\n      fullWidth\n    }) {\n      if (status) {\n        this.status$.next(this.status);\n      }\n\n      if (fieldSize) {\n        this.size$.next(this.fieldSize);\n      }\n\n      if (fullWidth) {\n        this.fullWidth$.next(this.fullWidth);\n      }\n    }\n\n    ngOnInit() {\n      this.focusMonitor.monitor(this.elementRef).pipe(map(origin => !!origin), finalize(() => this.focusMonitor.stopMonitoring(this.elementRef)), takeUntil(this.destroy$)).subscribe(this.focused$);\n    }\n\n    ngAfterViewInit() {\n      // TODO: #2254\n      this.zone.runOutsideAngular(() => setTimeout(() => {\n        this.renderer.addClass(this.elementRef.nativeElement, 'nb-transition');\n      }));\n    }\n\n    ngOnDestroy() {\n      this.destroy$.next();\n    }\n\n    get tiny() {\n      return this.fieldSize === 'tiny';\n    }\n\n    get small() {\n      return this.fieldSize === 'small';\n    }\n\n    get medium() {\n      return this.fieldSize === 'medium';\n    }\n\n    get large() {\n      return this.fieldSize === 'large';\n    }\n\n    get giant() {\n      return this.fieldSize === 'giant';\n    }\n\n    get primary() {\n      return this.status === 'primary';\n    }\n\n    get info() {\n      return this.status === 'info';\n    }\n\n    get success() {\n      return this.status === 'success';\n    }\n\n    get warning() {\n      return this.status === 'warning';\n    }\n\n    get danger() {\n      return this.status === 'danger';\n    }\n\n    get basic() {\n      return this.status === 'basic';\n    }\n\n    get control() {\n      return this.status === 'control';\n    }\n\n    get rectangle() {\n      return this.shape === 'rectangle';\n    }\n\n    get semiRound() {\n      return this.shape === 'semi-round';\n    }\n\n    get round() {\n      return this.shape === 'round';\n    }\n\n  }\n\n  NbInputDirective.ɵfac = function NbInputDirective_Factory(t) {\n    return new (t || NbInputDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(NbFocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(NbStatusService));\n  };\n\n  NbInputDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NbInputDirective,\n    selectors: [[\"input\", \"nbInput\", \"\"], [\"textarea\", \"nbInput\", \"\"]],\n    hostVars: 34,\n    hostBindings: function NbInputDirective_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassMap(ctx.additionalClasses);\n        ɵngcc0.ɵɵclassProp(\"input-full-width\", ctx.fullWidth)(\"size-tiny\", ctx.tiny)(\"size-small\", ctx.small)(\"size-medium\", ctx.medium)(\"size-large\", ctx.large)(\"size-giant\", ctx.giant)(\"status-primary\", ctx.primary)(\"status-info\", ctx.info)(\"status-success\", ctx.success)(\"status-warning\", ctx.warning)(\"status-danger\", ctx.danger)(\"status-basic\", ctx.basic)(\"status-control\", ctx.control)(\"shape-rectangle\", ctx.rectangle)(\"shape-semi-round\", ctx.semiRound)(\"shape-round\", ctx.round);\n      }\n    },\n    inputs: {\n      fieldSize: \"fieldSize\",\n      status: \"status\",\n      shape: \"shape\",\n      fullWidth: \"fullWidth\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: NbFormFieldControl,\n      useExisting: NbInputDirective\n    }]), ɵngcc0.ɵɵNgOnChangesFeature]\n  });\n  return NbInputDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nconst NB_INPUT_COMPONENTS = [NbInputDirective];\nlet NbInputModule = /*#__PURE__*/(() => {\n  class NbInputModule {}\n\n  NbInputModule.ɵfac = function NbInputModule_Factory(t) {\n    return new (t || NbInputModule)();\n  };\n\n  NbInputModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NbInputModule\n  });\n  NbInputModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[NbSharedModule]]\n  });\n  return NbInputModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NbInputModule, {\n    declarations: [NbInputDirective],\n    imports: [NbSharedModule],\n    exports: [NbInputDirective]\n  });\n})();\n\nlet NbChatAvatarComponent = /*#__PURE__*/(() => {\n  class NbChatAvatarComponent {\n    constructor() {\n      this.avatarClass = true;\n    }\n\n  }\n\n  NbChatAvatarComponent.ɵfac = function NbChatAvatarComponent_Factory(t) {\n    return new (t || NbChatAvatarComponent)();\n  };\n\n  NbChatAvatarComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbChatAvatarComponent,\n    selectors: [[\"nb-chat-avatar\"]],\n    hostVars: 4,\n    hostBindings: function NbChatAvatarComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"background-image\", ctx.avatarStyle);\n        ɵngcc0.ɵɵclassProp(\"avatar\", ctx.avatarClass);\n      }\n    },\n    inputs: {\n      initials: \"initials\",\n      avatarStyle: \"avatarStyle\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[4, \"ngIf\"]],\n    template: function NbChatAvatarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, NbChatAvatarComponent_ng_container_0_Template, 2, 1, \"ng-container\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.avatarStyle);\n      }\n    },\n    directives: [ɵngcc2.NgIf],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return NbChatAvatarComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nfunction throwCustomMessageTypeIsRequired() {\n  throw new Error('[nbCustomMessage]: custom message type is required.');\n}\n/**\n * `[nbCustomMessage]` directive should be used as a structural directive or should be applied to the `ng-template`:\n *\n * ```html\n * <div *nbCustomMessage=\"'my-custom-type'; let data\">\n *   <!-- custom message -->\n * </div>\n * ```\n * or\n * ```html\n * <ng-template nbCustomMessage='my-custom-type' let-data>\n *   <!-- custom message -->\n * </ng-template>\n * ```\n */\n\n\nlet NbChatCustomMessageDirective = /*#__PURE__*/(() => {\n  class NbChatCustomMessageDirective {\n    constructor(templateRef, customMessageService) {\n      this.templateRef = templateRef;\n      this.customMessageService = customMessageService;\n      this._noStyles = false;\n    }\n    /**\n     * Defines a message type which should rendered with the custom message template.\n     * @type {string}\n     */\n\n\n    get nbCustomMessage() {\n      return this._type;\n    }\n\n    set nbCustomMessage(value) {\n      this._type = value;\n    }\n\n    get type() {\n      return this._type;\n    }\n    /**\n     * Disables generic message styles, such as round corners, text color, background, etc.,\n     * so a custom message could be styled from the ground up.\n     *\n     * @type {boolean}\n     */\n\n\n    set nbCustomMessageNoStyles(value) {\n      this._noStyles = convertToBoolProperty(value);\n    }\n\n    get nbCustomMessageNoStyles() {\n      return this._noStyles;\n    }\n\n    get noStyles() {\n      return this.nbCustomMessageNoStyles;\n    }\n\n    ngOnInit() {\n      if (!this._type) {\n        throwCustomMessageTypeIsRequired();\n      }\n\n      this.customMessageService.register(this.type, this);\n    }\n\n    ngOnDestroy() {\n      this.customMessageService.unregister(this.type);\n    }\n\n  }\n\n  NbChatCustomMessageDirective.ɵfac = function NbChatCustomMessageDirective_Factory(t) {\n    return new (t || NbChatCustomMessageDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(NbCustomMessageService));\n  };\n\n  NbChatCustomMessageDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NbChatCustomMessageDirective,\n    selectors: [[\"\", \"nbCustomMessage\", \"\"]],\n    inputs: {\n      nbCustomMessage: \"nbCustomMessage\",\n      nbCustomMessageNoStyles: \"nbCustomMessageNoStyles\"\n    }\n  });\n  return NbChatCustomMessageDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nconst NB_CHAT_COMPONENTS = [NbChatComponent, NbChatMessageComponent, NbChatFormComponent, NbChatMessageTextComponent, NbChatMessageFileComponent, NbChatMessageQuoteComponent, NbChatMessageMapComponent, NbChatAvatarComponent];\nconst NB_CHAT_DIRECTIVES = [NbChatCustomMessageDirective];\nlet NbChatModule = /*#__PURE__*/(() => {\n  class NbChatModule {\n    static forRoot(options) {\n      return {\n        ngModule: NbChatModule,\n        providers: [{\n          provide: NbChatOptions,\n          useValue: options || {}\n        }]\n      };\n    }\n\n    static forChild(options) {\n      return {\n        ngModule: NbChatModule,\n        providers: [{\n          provide: NbChatOptions,\n          useValue: options || {}\n        }]\n      };\n    }\n\n  }\n\n  NbChatModule.ɵfac = function NbChatModule_Factory(t) {\n    return new (t || NbChatModule)();\n  };\n\n  NbChatModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NbChatModule\n  });\n  NbChatModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[NbSharedModule, NbIconModule, NbInputModule, NbButtonModule]]\n  });\n  return NbChatModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NbChatModule, {\n    declarations: [NbChatComponent, NbChatMessageComponent, NbChatFormComponent, NbChatMessageTextComponent, NbChatMessageFileComponent, NbChatMessageQuoteComponent, NbChatMessageMapComponent, NbChatAvatarComponent, NbChatCustomMessageDirective],\n    imports: [NbSharedModule, NbIconModule, NbInputModule, NbButtonModule],\n    exports: [NbChatComponent, NbChatMessageComponent, NbChatFormComponent, NbChatMessageTextComponent, NbChatMessageFileComponent, NbChatMessageQuoteComponent, NbChatMessageMapComponent, NbChatAvatarComponent, NbChatCustomMessageDirective]\n  });\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * Styled spinner component\n *\n * @styles\n *\n * spinner-text-color:\n * spinner-text-font-family:\n * spinner-text-font-size:\n * spinner-text-font-weight:\n * spinner-text-line-height:\n * spinner-basic-background-color:\n * spinner-basic-circle-filled-color:\n * spinner-basic-circle-empty-color:\n * spinner-primary-background-color:\n * spinner-primary-circle-filled-color:\n * spinner-primary-circle-empty-color:\n * spinner-info-background-color:\n * spinner-info-circle-filled-color:\n * spinner-info-circle-empty-color:\n * spinner-success-background-color:\n * spinner-success-circle-filled-color:\n * spinner-success-circle-empty-color:\n * spinner-warning-background-color:\n * spinner-warning-circle-filled-color:\n * spinner-warning-circle-empty-color:\n * spinner-danger-background-color:\n * spinner-danger-circle-filled-color:\n * spinner-danger-circle-empty-color:\n * spinner-control-background-color:\n * spinner-control-circle-filled-color:\n * spinner-control-circle-empty-color:\n * spinner-height-tiny:\n * spinner-height-small:\n * spinner-height-medium:\n * spinner-height-large:\n * spinner-height-giant:\n */\n\n\nlet NbSpinnerComponent = /*#__PURE__*/(() => {\n  class NbSpinnerComponent {\n    constructor(statusService) {\n      this.statusService = statusService;\n      /**\n       * Loading text that is shown near the icon\n       * @type string\n       */\n\n      this.message = 'Loading...';\n      /**\n       * Spinner size, available sizes:\n       * tiny, small, medium, large, giant\n       * @param {string} value\n       */\n\n      this.size = 'medium';\n      /**\n       * Spinner status (adds specific styles):\n       * `basic`, `primary`, `info`, `success`, `warning`, `danger`, `control`.\n       */\n\n      this.status = 'basic';\n    }\n\n    get tiny() {\n      return this.size === 'tiny';\n    }\n\n    get small() {\n      return this.size === 'small';\n    }\n\n    get medium() {\n      return this.size === 'medium';\n    }\n\n    get large() {\n      return this.size === 'large';\n    }\n\n    get giant() {\n      return this.size === 'giant';\n    }\n\n    get primary() {\n      return this.status === 'primary';\n    }\n\n    get info() {\n      return this.status === 'info';\n    }\n\n    get success() {\n      return this.status === 'success';\n    }\n\n    get warning() {\n      return this.status === 'warning';\n    }\n\n    get danger() {\n      return this.status === 'danger';\n    }\n\n    get basic() {\n      return this.status === 'basic';\n    }\n\n    get control() {\n      return this.status === 'control';\n    }\n\n    get additionalClasses() {\n      if (this.statusService.isCustomStatus(this.status)) {\n        return [this.statusService.getStatusClass(this.status)];\n      }\n\n      return [];\n    }\n\n  }\n\n  NbSpinnerComponent.ɵfac = function NbSpinnerComponent_Factory(t) {\n    return new (t || NbSpinnerComponent)(ɵngcc0.ɵɵdirectiveInject(NbStatusService));\n  };\n\n  NbSpinnerComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbSpinnerComponent,\n    selectors: [[\"nb-spinner\"]],\n    hostVars: 26,\n    hostBindings: function NbSpinnerComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassMap(ctx.additionalClasses);\n        ɵngcc0.ɵɵclassProp(\"size-tiny\", ctx.tiny)(\"size-small\", ctx.small)(\"size-medium\", ctx.medium)(\"size-large\", ctx.large)(\"size-giant\", ctx.giant)(\"status-primary\", ctx.primary)(\"status-info\", ctx.info)(\"status-success\", ctx.success)(\"status-warning\", ctx.warning)(\"status-danger\", ctx.danger)(\"status-basic\", ctx.basic)(\"status-control\", ctx.control);\n      }\n    },\n    inputs: {\n      message: \"message\",\n      size: \"size\",\n      status: \"status\"\n    },\n    decls: 2,\n    vars: 1,\n    consts: [[1, \"spin-circle\"], [\"class\", \"message\", 4, \"ngIf\"], [1, \"message\"]],\n    template: function NbSpinnerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"span\", 0);\n        ɵngcc0.ɵɵtemplate(1, NbSpinnerComponent_span_1_Template, 2, 1, \"span\", 1);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.message);\n      }\n    },\n    directives: [ɵngcc2.NgIf],\n    styles: [\"[_nghost-%COMP%]{opacity:1;position:absolute;border-radius:inherit;top:0;right:0;left:0;bottom:0;overflow:hidden;z-index:9999;display:flex;justify-content:center;align-items:center;visibility:visible}[_nghost-%COMP%]   .spin-circle[_ngcontent-%COMP%]{animation:spin 0.8s infinite linear;border-radius:50%;border-style:solid;border-width:0.125em;width:1em;height:1em}[_nghost-%COMP%]   .message[_ngcontent-%COMP%]{margin-left:0.5rem}\"]\n  });\n  return NbSpinnerComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * Styled spinner directive\n *\n * @stacked-example(Spinner Showcase, spinner/spinner-card.component)\n *\n *\n * ```ts\n * <nb-card [nbSpinner]=\"loading\" nbSpinnerStatus=\"danger\">\n *   <nb-card-body>Card Content</nb-card-body>\n * </nb-card>\n * ```\n *\n * ### Installation\n *\n * Import `NbSpinnerModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbSpinnerModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * Could be colored using `status` property\n *\n * @stacked-example(Spinner Colors, spinner/spinner-colors.component)\n *\n * Available in different sizes with `size` property:\n *\n * @stacked-example(Spinner Sizes, spinner/spinner-sizes.component)\n *\n * It is also possible to place it into the button:\n * @stacked-example(Buttons with spinner, spinner/spinner-button.component)\n *\n * Or tabs:\n * @stacked-example(Spinner in tabs, spinner/spinner-tabs.component)\n */\n\n\nlet NbSpinnerDirective = /*#__PURE__*/(() => {\n  class NbSpinnerDirective {\n    constructor(directiveView, componentFactoryResolver, renderer, directiveElement) {\n      this.directiveView = directiveView;\n      this.componentFactoryResolver = componentFactoryResolver;\n      this.renderer = renderer;\n      this.directiveElement = directiveElement;\n      this.shouldShow = false;\n      /**\n       * Spinner status color\n       * `basic`, `primary`, `info`, `success`, `warning`, `danger`, `control`.\n       */\n\n      this.spinnerStatus = 'basic';\n      /**\n       * Spinner size. Possible values: `tiny`, `small`, `medium` (default), `large`, `giant`\n       */\n\n      this.spinnerSize = 'medium';\n      this.isSpinnerExist = false;\n    }\n    /**\n     * Directive value - show or hide spinner\n     * @param {boolean} val\n     */\n\n\n    set nbSpinner(val) {\n      if (this.componentFactory) {\n        if (val) {\n          this.show();\n        } else {\n          this.hide();\n        }\n      } else {\n        this.shouldShow = val;\n      }\n    }\n\n    ngOnInit() {\n      this.componentFactory = this.componentFactoryResolver.resolveComponentFactory(NbSpinnerComponent);\n\n      if (this.shouldShow) {\n        this.show();\n      }\n    }\n\n    hide() {\n      if (this.isSpinnerExist) {\n        this.directiveView.remove();\n        this.isSpinnerExist = false;\n      }\n    }\n\n    show() {\n      if (!this.isSpinnerExist) {\n        this.spinner = this.directiveView.createComponent(this.componentFactory);\n        this.setInstanceInputs(this.spinner.instance);\n        this.spinner.changeDetectorRef.detectChanges();\n        this.renderer.appendChild(this.directiveElement.nativeElement, this.spinner.location.nativeElement);\n        this.isSpinnerExist = true;\n      }\n    }\n\n    setInstanceInputs(instance) {\n      instance.message = this.spinnerMessage;\n      typeof this.spinnerStatus !== 'undefined' && (instance.status = this.spinnerStatus);\n      typeof this.spinnerSize !== 'undefined' && (instance.size = this.spinnerSize);\n    }\n\n  }\n\n  NbSpinnerDirective.ɵfac = function NbSpinnerDirective_Factory(t) {\n    return new (t || NbSpinnerDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  NbSpinnerDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NbSpinnerDirective,\n    selectors: [[\"\", \"nbSpinner\", \"\"]],\n    hostVars: 2,\n    hostBindings: function NbSpinnerDirective_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"nb-spinner-container\", ctx.isSpinnerExist);\n      }\n    },\n    inputs: {\n      spinnerStatus: [\"nbSpinnerStatus\", \"spinnerStatus\"],\n      spinnerSize: [\"nbSpinnerSize\", \"spinnerSize\"],\n      nbSpinner: \"nbSpinner\",\n      spinnerMessage: [\"nbSpinnerMessage\", \"spinnerMessage\"]\n    }\n  });\n  return NbSpinnerDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nlet NbSpinnerModule = /*#__PURE__*/(() => {\n  class NbSpinnerModule {}\n\n  NbSpinnerModule.ɵfac = function NbSpinnerModule_Factory(t) {\n    return new (t || NbSpinnerModule)();\n  };\n\n  NbSpinnerModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NbSpinnerModule\n  });\n  NbSpinnerModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[NbSharedModule]]\n  });\n  return NbSpinnerModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NbSpinnerModule, {\n    declarations: [NbSpinnerComponent, NbSpinnerDirective],\n    imports: [NbSharedModule],\n    exports: [NbSpinnerComponent, NbSpinnerDirective]\n  });\n})();\n\nconst NB_STEPPER = new InjectionToken('Nebular Stepper Component');\n/**\n * Component intended to be used within  the `<nb-stepper>` component.\n * Container for a step\n */\n\nlet NbStepComponent = /*#__PURE__*/(() => {\n  class NbStepComponent {\n    constructor(stepper) {\n      this._hidden = false;\n      this._completed = false;\n      this.interacted = false;\n      this.stepper = stepper;\n    }\n    /**\n     * Whether step will be displayed in wizard\n     *\n     * @type {boolean}\n     */\n\n\n    get hidden() {\n      return this._hidden;\n    }\n\n    set hidden(value) {\n      this._hidden = convertToBoolProperty(value);\n    }\n    /**\n     * Check that label is a TemplateRef.\n     *\n     * @return boolean\n     * */\n\n\n    get isLabelTemplate() {\n      return this.label instanceof TemplateRef;\n    }\n    /**\n     * Whether step is marked as completed.\n     *\n     * @type {boolean}\n     */\n\n\n    get completed() {\n      return this._completed || this.isCompleted;\n    }\n\n    set completed(value) {\n      this._completed = convertToBoolProperty(value);\n    }\n\n    get isCompleted() {\n      return this.stepControl ? this.stepControl.valid && this.interacted : this.interacted;\n    }\n    /**\n     * Mark step as selected\n     * */\n\n\n    select() {\n      this.stepper.selected = this;\n    }\n    /**\n     * Reset step and stepControl state\n     * */\n\n\n    reset() {\n      this.interacted = false;\n\n      if (this.stepControl) {\n        this.stepControl.reset();\n      }\n    }\n\n  }\n\n  NbStepComponent.ɵfac = function NbStepComponent_Factory(t) {\n    return new (t || NbStepComponent)(ɵngcc0.ɵɵdirectiveInject(NB_STEPPER));\n  };\n\n  NbStepComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbStepComponent,\n    selectors: [[\"nb-step\"]],\n    viewQuery: function NbStepComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(TemplateRef, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.content = _t.first);\n      }\n    },\n    inputs: {\n      hidden: \"hidden\",\n      completed: \"completed\",\n      stepControl: \"stepControl\",\n      label: \"label\"\n    },\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function NbStepComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, NbStepComponent_ng_template_0_Template, 1, 0, \"ng-template\");\n      }\n    },\n    encapsulation: 2\n  });\n  return NbStepComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * Stepper component\n *\n * @stacked-example(Showcase, stepper/stepper-showcase.component)\n *\n * ### Installation\n *\n * Import `NbStepperModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbStepperModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * If step label is string you can pass it as `label` attribute. Otherwise ng-template should be used:\n * ```html\n * // ...\n * <nb-stepper orientation=\"horizontal\">\n *   <nb-step label=\"step number one\">\n *       // ... step content here\n *   </nb-step>\n *   <nb-step label=\"stepLabel\">\n *       <ng-template #stepLabel>\n *           <div>\n *               step number two\n *           </div>\n *       </ng-template>\n *       // ... step content here\n *   </nb-step>\n * </nb-stepper>\n * ```\n *\n * When linear mode enabled user can't move forward unless current step is complete.\n * @stacked-example(Linear, stepper/stepper-linear.component)\n *\n * Specify `[stepControl]=\"form\"` and stepper allow go to the next step only if form is valid.\n * You can disable it via `linear` mode setting.\n * ```html\n * // ...\n * <nb-stepper  orientation=\"horizontal\">\n *   <nb-step label=\"step number one\" [stepControl]=\"form\">\n *     <form [formGroup]=\"form\">\n *       // ...\n *     </form>\n *   </nb-step>\n *    // ...\n * </nb-stepper>\n * ```\n *\n * @stacked-example(Validation, stepper/stepper-validation.component)\n *\n * Stepper component has two layout options - `vertical` & `horizontal`\n * @stacked-example(Vertical, stepper/stepper-vertical.component)\n *\n * `disableStepNavigation` disables navigation by clicking on steps, so user can navigate only using\n * 'nbStepperPrevious' and 'nbStepperNext' buttons.\n * @stacked-example(Disabled steps navigation, stepper/stepper-disabled-step-nav.component)\n *\n * @styles\n *\n * stepper-step-text-color:\n * stepper-step-text-font-family:\n * stepper-step-text-font-size:\n * stepper-step-text-font-weight:\n * stepper-step-text-line-height:\n * stepper-step-active-text-color:\n * stepper-step-completed-text-color:\n * stepper-step-index-border-color:\n * stepper-step-index-border-style:\n * stepper-step-index-border-width:\n * stepper-step-index-border-radius:\n * stepper-step-index-width:\n * stepper-step-index-active-border-color:\n * stepper-step-index-completed-background-color:\n * stepper-step-index-completed-border-color:\n * stepper-step-index-completed-text-color:\n * stepper-connector-background-color:\n * stepper-connector-completed-background-color:\n * stepper-horizontal-connector-margin:\n * stepper-vertical-connector-margin:\n * stepper-step-content-padding:\n */\n\n\nlet NbStepperComponent = /*#__PURE__*/(() => {\n  class NbStepperComponent {\n    constructor() {\n      this._selectedIndex = 0;\n      this._disableStepNavigation = false;\n      /**\n       * Stepper orientation - `horizontal`|`vertical`\n       */\n\n      this.orientation = 'horizontal';\n      this._linear = true;\n    }\n    /**\n     * Selected step index\n     */\n\n\n    get selectedIndex() {\n      return this._selectedIndex;\n    }\n\n    set selectedIndex(index) {\n      if (!this.steps) {\n        this._selectedIndex = index;\n        return;\n      }\n\n      this.markCurrentStepInteracted();\n\n      if (this.canBeSelected(index)) {\n        this._selectedIndex = index;\n      }\n    }\n    /**\n     * Disables navigation by clicking on steps. False by default\n     * @param {boolean} value\n     */\n\n\n    set disableStepNavigation(value) {\n      this._disableStepNavigation = convertToBoolProperty(value);\n    }\n\n    get disableStepNavigation() {\n      return this._disableStepNavigation;\n    }\n    /**\n     * Selected step component\n     */\n\n\n    get selected() {\n      return this.steps ? this.steps.toArray()[this.selectedIndex] : undefined;\n    }\n\n    set selected(step) {\n      if (!this.steps) {\n        return;\n      }\n\n      this.selectedIndex = this.steps.toArray().indexOf(step);\n    }\n    /**\n     * Allow moving forward only if the current step is complete\n     * @default true\n     */\n\n\n    set linear(value) {\n      this._linear = convertToBoolProperty(value);\n    }\n\n    get linear() {\n      return this._linear;\n    }\n\n    get vertical() {\n      return this.orientation === 'vertical';\n    }\n\n    get horizontal() {\n      return this.orientation === 'horizontal';\n    }\n    /**\n     * Navigate to next step\n     * */\n\n\n    next() {\n      this.selectedIndex = Math.min(this.selectedIndex + 1, this.steps.length - 1);\n    }\n    /**\n     * Navigate to previous step\n     * */\n\n\n    previous() {\n      this.selectedIndex = Math.max(this.selectedIndex - 1, 0);\n    }\n    /**\n     * Reset stepper and stepControls to initial state\n     * */\n\n\n    reset() {\n      this._selectedIndex = 0;\n      this.steps.forEach(step => step.reset());\n    }\n\n    isStepSelected(step) {\n      return this.selected === step;\n    }\n    /*\n     * @docs-private\n     **/\n\n\n    getStepTemplate(step) {\n      if (step.isLabelTemplate) {\n        return step.label;\n      }\n\n      return null;\n    }\n\n    isStepValid(index) {\n      return this.steps.toArray()[index].completed;\n    }\n\n    canBeSelected(indexToCheck) {\n      const noSteps = !this.steps || this.steps.length === 0;\n\n      if (noSteps || indexToCheck < 0 || indexToCheck >= this.steps.length) {\n        return false;\n      }\n\n      if (indexToCheck <= this.selectedIndex || !this.linear) {\n        return true;\n      }\n\n      let isAllStepsValid = true;\n\n      for (let i = this.selectedIndex; i < indexToCheck; i++) {\n        if (!this.isStepValid(i)) {\n          isAllStepsValid = false;\n          break;\n        }\n      }\n\n      return isAllStepsValid;\n    }\n\n    markCurrentStepInteracted() {\n      if (this.selected) {\n        this.selected.interacted = true;\n      }\n    }\n\n  }\n\n  NbStepperComponent.ɵfac = function NbStepperComponent_Factory(t) {\n    return new (t || NbStepperComponent)();\n  };\n\n  NbStepperComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbStepperComponent,\n    selectors: [[\"nb-stepper\"]],\n    contentQueries: function NbStepperComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NbStepComponent, 4);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.steps = _t);\n      }\n    },\n    hostVars: 4,\n    hostBindings: function NbStepperComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"vertical\", ctx.vertical)(\"horizontal\", ctx.horizontal);\n      }\n    },\n    inputs: {\n      orientation: \"orientation\",\n      selectedIndex: \"selectedIndex\",\n      disableStepNavigation: \"disableStepNavigation\",\n      selected: \"selected\",\n      linear: \"linear\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: NB_STEPPER,\n      useExisting: NbStepperComponent\n    }])],\n    ngContentSelectors: _c28,\n    decls: 5,\n    vars: 2,\n    consts: [[1, \"header\"], [4, \"ngFor\", \"ngForOf\"], [1, \"step-content\"], [3, \"ngTemplateOutlet\"], [\"class\", \"connector\", 3, \"connector-past\", 4, \"ngIf\"], [\"class\", \"step\", 3, \"selected\", \"completed\", \"noninteractive\", \"click\", 4, \"ngIf\"], [1, \"connector\"], [1, \"step\", 3, \"click\"], [1, \"label-index\"], [4, \"ngIf\"], [\"icon\", \"checkmark-outline\", \"pack\", \"nebular-essentials\", 4, \"ngIf\"], [1, \"label\"], [\"icon\", \"checkmark-outline\", \"pack\", \"nebular-essentials\"], [4, \"ngTemplateOutlet\"]],\n    template: function NbStepperComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c27);\n        ɵngcc0.ɵɵtemplate(0, NbStepperComponent_ng_template_0_Template, 1, 0, \"ng-template\");\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0);\n        ɵngcc0.ɵɵtemplate(2, NbStepperComponent_ng_container_2_Template, 3, 2, \"ng-container\", 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵelementContainer(4, 3);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.steps);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx.selected == null ? null : ctx.selected.content);\n      }\n    },\n    directives: [ɵngcc2.NgForOf, ɵngcc2.NgTemplateOutlet, ɵngcc2.NgIf, NbIconComponent],\n    styles: [\".horizontal[_nghost-%COMP%]   .header[_ngcontent-%COMP%]   .step[_ngcontent-%COMP%]{flex-direction:column}.horizontal[_nghost-%COMP%]   .header[_ngcontent-%COMP%]   .connector[_ngcontent-%COMP%]{height:2px}.horizontal[_nghost-%COMP%]   .label-index[_ngcontent-%COMP%]{margin-bottom:10px}.vertical[_nghost-%COMP%]{display:flex;height:100%}.vertical[_nghost-%COMP%]   .header[_ngcontent-%COMP%]{flex-direction:column}.vertical[_nghost-%COMP%]   .header[_ngcontent-%COMP%]   .label[_ngcontent-%COMP%]{margin:0 10px}.vertical[_nghost-%COMP%]   .header[_ngcontent-%COMP%]   .connector[_ngcontent-%COMP%]{width:2px}.header[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:flex-start;margin-bottom:10px}.header[_ngcontent-%COMP%]   .connector[_ngcontent-%COMP%]{flex:auto}.header[_ngcontent-%COMP%]   .step[_ngcontent-%COMP%]{display:flex;align-items:center;cursor:pointer}.header[_ngcontent-%COMP%]   .step.noninteractive[_ngcontent-%COMP%]{cursor:default}.header[_ngcontent-%COMP%]   .label-index[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center}.header[_ngcontent-%COMP%]   .label[_ngcontent-%COMP%]{width:max-content}\"]\n  });\n  return NbStepperComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet NbStepperNextDirective = /*#__PURE__*/(() => {\n  class NbStepperNextDirective {\n    constructor(stepper) {\n      this.stepper = stepper;\n      this.type = 'submit';\n    }\n\n    onClick() {\n      this.stepper.next();\n    }\n\n  }\n\n  NbStepperNextDirective.ɵfac = function NbStepperNextDirective_Factory(t) {\n    return new (t || NbStepperNextDirective)(ɵngcc0.ɵɵdirectiveInject(NbStepperComponent));\n  };\n\n  NbStepperNextDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NbStepperNextDirective,\n    selectors: [[\"button\", \"nbStepperNext\", \"\"]],\n    hostVars: 1,\n    hostBindings: function NbStepperNextDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function NbStepperNextDirective_click_HostBindingHandler() {\n          return ctx.onClick();\n        });\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"type\", ctx.type);\n      }\n    },\n    inputs: {\n      type: \"type\"\n    }\n  });\n  return NbStepperNextDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet NbStepperPreviousDirective = /*#__PURE__*/(() => {\n  class NbStepperPreviousDirective {\n    constructor(stepper) {\n      this.stepper = stepper;\n      this.type = 'button';\n    }\n\n    onClick() {\n      this.stepper.previous();\n    }\n\n  }\n\n  NbStepperPreviousDirective.ɵfac = function NbStepperPreviousDirective_Factory(t) {\n    return new (t || NbStepperPreviousDirective)(ɵngcc0.ɵɵdirectiveInject(NbStepperComponent));\n  };\n\n  NbStepperPreviousDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NbStepperPreviousDirective,\n    selectors: [[\"button\", \"nbStepperPrevious\", \"\"]],\n    hostVars: 1,\n    hostBindings: function NbStepperPreviousDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function NbStepperPreviousDirective_click_HostBindingHandler() {\n          return ctx.onClick();\n        });\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"type\", ctx.type);\n      }\n    },\n    inputs: {\n      type: \"type\"\n    }\n  });\n  return NbStepperPreviousDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nlet NbStepperModule = /*#__PURE__*/(() => {\n  class NbStepperModule {}\n\n  NbStepperModule.ɵfac = function NbStepperModule_Factory(t) {\n    return new (t || NbStepperModule)();\n  };\n\n  NbStepperModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NbStepperModule\n  });\n  NbStepperModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[NbSharedModule, NbIconModule]]\n  });\n  return NbStepperModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NbStepperModule, {\n    declarations: [NbStepperComponent, NbStepComponent, NbStepperNextDirective, NbStepperPreviousDirective],\n    imports: [NbSharedModule, NbIconModule],\n    exports: [NbStepperComponent, NbStepComponent, NbStepperNextDirective, NbStepperPreviousDirective]\n  });\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * An accordion allows to toggle the display of sections of content\n *\n * Basic example\n * @stacked-example(Showcase, accordion/accordion-showcase.component)\n *\n * ```ts\n * <nb-accordion>\n *  <nb-accordion-item>\n *   <nb-accordion-item-header>Product Details</nb-accordion-item-header>\n *   <nb-accordion-item-body>\n *     Item Content\n *   </nb-accordion-item-body>\n *  </nb-accordion-item>\n * </nb-accordion>\n * ```\n * ### Installation\n *\n * Import `NbAccordionModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbAccordionModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * With `multi` mode accordion can have multiple items expanded:\n * @stacked-example(Multiple expanded items, accordion/accordion-multi.component)\n *\n * `NbAccordionItemComponent` has several methods, for example it is possible to trigger item click/toggle:\n * @stacked-example(Expand API, accordion/accordion-toggle.component)\n *\n * @styles\n *\n * accordion-border-radius:\n * accordion-padding:\n * accordion-shadow:\n * accordion-header-text-color:\n * accordion-header-text-font-family:\n * accordion-header-text-font-size:\n * accordion-header-text-font-weight:\n * accordion-header-text-line-height:\n * accordion-header-disabled-text-color:\n * accordion-header-border-color:\n * accordion-header-border-style:\n * accordion-header-border-width:\n * accordion-item-background-color:\n * accordion-item-text-color:\n * accordion-item-text-font-family:\n * accordion-item-text-font-size:\n * accordion-item-text-font-weight:\n * accordion-item-text-line-height:\n */\n\n\nlet NbAccordionComponent = /*#__PURE__*/(() => {\n  class NbAccordionComponent {\n    constructor() {\n      this.openCloseItems = new Subject();\n      this.multiValue = false;\n    }\n    /**\n     *  Allow multiple items to be expanded at the same time.\n     * @type {boolean}\n     */\n\n\n    get multi() {\n      return this.multiValue;\n    }\n\n    set multi(val) {\n      this.multiValue = convertToBoolProperty(val);\n    }\n    /**\n     * Opens all enabled accordion items.\n     */\n\n\n    openAll() {\n      if (this.multi) {\n        this.openCloseItems.next(false);\n      }\n    }\n    /**\n     * Closes all enabled accordion items.\n     */\n\n\n    closeAll() {\n      this.openCloseItems.next(true);\n    }\n\n  }\n\n  NbAccordionComponent.ɵfac = function NbAccordionComponent_Factory(t) {\n    return new (t || NbAccordionComponent)();\n  };\n\n  NbAccordionComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbAccordionComponent,\n    selectors: [[\"nb-accordion\"]],\n    inputs: {\n      multi: \"multi\"\n    },\n    ngContentSelectors: _c30,\n    decls: 1,\n    vars: 0,\n    template: function NbAccordionComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c29);\n        ɵngcc0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return NbAccordionComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * Component intended to be used within `<nb-accordion>` component\n */\n\n\nlet NbAccordionItemComponent = /*#__PURE__*/(() => {\n  class NbAccordionItemComponent {\n    constructor(accordion, cd) {\n      this.accordion = accordion;\n      this.cd = cd;\n      /**\n       * Emits whenever the expanded state of the accordion changes.\n       * Primarily used to facilitate two-way binding.\n       */\n\n      this.collapsedChange = new EventEmitter();\n      this.accordionItemInvalidate = new Subject();\n      this.collapsedValue = true;\n      this.disabledValue = false;\n      this.destroy$ = new Subject();\n    }\n    /**\n     * Item is collapse (`true` by default)\n     * @type {boolean}\n     */\n\n\n    get collapsed() {\n      return this.collapsedValue;\n    }\n\n    set collapsed(val) {\n      this.collapsedValue = convertToBoolProperty(val);\n      this.collapsedChange.emit(this.collapsedValue);\n      this.invalidate();\n    }\n    /**\n     * Item is expanded (`false` by default)\n     * @type {boolean}\n     */\n\n\n    get expanded() {\n      return !this.collapsed;\n    }\n\n    set expanded(val) {\n      this.collapsedValue = !convertToBoolProperty(val);\n    }\n    /**\n     * Item is disabled and cannot be opened.\n     * @type {boolean}\n     */\n\n\n    get disabled() {\n      return this.disabledValue;\n    }\n\n    set disabled(val) {\n      this.disabledValue = convertToBoolProperty(val);\n      this.invalidate();\n    }\n    /**\n     * Open/close the item\n     */\n\n\n    toggle() {\n      if (!this.disabled) {\n        // we need this temporary variable as `openCloseItems.next` will change current value we need to save\n        const willSet = !this.collapsed;\n\n        if (!this.accordion.multi) {\n          this.accordion.openCloseItems.next(true);\n        }\n\n        this.collapsed = willSet;\n      }\n    }\n    /**\n     * Open the item.\n     */\n\n\n    open() {\n      !this.disabled && (this.collapsed = false);\n    }\n    /**\n     * Collapse the item.\n     */\n\n\n    close() {\n      !this.disabled && (this.collapsed = true);\n    }\n\n    ngOnInit() {\n      this.accordion.openCloseItems.pipe(takeUntil(this.destroy$)).subscribe(collapsed => {\n        !this.disabled && (this.collapsed = collapsed);\n      });\n    }\n\n    ngOnChanges(changes) {\n      this.accordionItemInvalidate.next(true);\n    }\n\n    ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n      this.accordionItemInvalidate.complete();\n    }\n\n    invalidate() {\n      this.accordionItemInvalidate.next(true);\n      this.cd.markForCheck();\n    }\n\n  }\n\n  NbAccordionItemComponent.ɵfac = function NbAccordionItemComponent_Factory(t) {\n    return new (t || NbAccordionItemComponent)(ɵngcc0.ɵɵdirectiveInject(NbAccordionComponent, 1), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n  };\n\n  NbAccordionItemComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbAccordionItemComponent,\n    selectors: [[\"nb-accordion-item\"]],\n    hostVars: 6,\n    hostBindings: function NbAccordionItemComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"collapsed\", ctx.collapsed)(\"expanded\", ctx.expanded)(\"disabled\", ctx.disabled);\n      }\n    },\n    inputs: {\n      collapsed: \"collapsed\",\n      expanded: \"expanded\",\n      disabled: \"disabled\"\n    },\n    outputs: {\n      collapsedChange: \"collapsedChange\"\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c32,\n    decls: 2,\n    vars: 0,\n    template: function NbAccordionItemComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c31);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵprojection(1, 1);\n      }\n    },\n    styles: [_c8],\n    changeDetection: 0\n  });\n  return NbAccordionItemComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nconst accordionItemBodyTrigger = trigger('accordionItemBody', [state('collapsed', style({\n  overflow: 'hidden',\n  visibility: 'hidden',\n  height: 0\n})), state('expanded', style({\n  overflow: 'hidden',\n  visibility: 'visible'\n})), transition('collapsed => expanded', animate('100ms ease-in')), transition('expanded => collapsed', animate('100ms ease-out'))]);\n/**\n * Component intended to be used within `<nb-accordion-item>` component\n */\n\nlet NbAccordionItemBodyComponent = /*#__PURE__*/(() => {\n  class NbAccordionItemBodyComponent {\n    constructor(accordionItem, cd) {\n      this.accordionItem = accordionItem;\n      this.cd = cd;\n      this.destroy$ = new Subject();\n    }\n\n    get state() {\n      return this.accordionItem.collapsed ? 'collapsed' : 'expanded';\n    }\n\n    ngOnInit() {\n      this.accordionItem.accordionItemInvalidate.pipe(takeUntil(this.destroy$)).subscribe(() => this.cd.markForCheck());\n    }\n\n    ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n\n  }\n\n  NbAccordionItemBodyComponent.ɵfac = function NbAccordionItemBodyComponent_Factory(t) {\n    return new (t || NbAccordionItemBodyComponent)(ɵngcc0.ɵɵdirectiveInject(NbAccordionItemComponent, 1), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n  };\n\n  NbAccordionItemBodyComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbAccordionItemBodyComponent,\n    selectors: [[\"nb-accordion-item-body\"]],\n    ngContentSelectors: _c0,\n    decls: 3,\n    vars: 3,\n    consts: [[1, \"item-body\"]],\n    template: function NbAccordionItemBodyComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\");\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"@accordionItemBody\", ɵngcc0.ɵɵpureFunction1(1, _c33, ctx.state));\n      }\n    },\n    encapsulation: 2,\n    data: {\n      animation: [accordionItemBodyTrigger]\n    },\n    changeDetection: 0\n  });\n  return NbAccordionItemBodyComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * Component intended to be used within `<nb-accordion-item>` component\n */\n\n\nlet NbAccordionItemHeaderComponent = /*#__PURE__*/(() => {\n  class NbAccordionItemHeaderComponent {\n    constructor(accordionItem, cd) {\n      this.accordionItem = accordionItem;\n      this.cd = cd;\n      this.destroy$ = new Subject();\n    }\n\n    get isCollapsed() {\n      return this.accordionItem.collapsed;\n    }\n\n    get expanded() {\n      return !this.accordionItem.collapsed;\n    } // issue #794\n\n\n    get tabbable() {\n      return this.accordionItem.disabled ? '-1' : '0';\n    }\n\n    get disabled() {\n      return this.accordionItem.disabled;\n    }\n\n    toggle() {\n      this.accordionItem.toggle();\n    }\n\n    get state() {\n      if (this.isCollapsed) {\n        return 'collapsed';\n      }\n\n      if (this.expanded) {\n        return 'expanded';\n      }\n    }\n\n    ngOnInit() {\n      this.accordionItem.accordionItemInvalidate.pipe(takeUntil(this.destroy$)).subscribe(() => this.cd.markForCheck());\n    }\n\n    ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n\n  }\n\n  NbAccordionItemHeaderComponent.ɵfac = function NbAccordionItemHeaderComponent_Factory(t) {\n    return new (t || NbAccordionItemHeaderComponent)(ɵngcc0.ɵɵdirectiveInject(NbAccordionItemComponent, 1), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n  };\n\n  NbAccordionItemHeaderComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbAccordionItemHeaderComponent,\n    selectors: [[\"nb-accordion-item-header\"]],\n    hostVars: 7,\n    hostBindings: function NbAccordionItemHeaderComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function NbAccordionItemHeaderComponent_click_HostBindingHandler() {\n          return ctx.toggle();\n        })(\"keydown.space\", function NbAccordionItemHeaderComponent_keydown_space_HostBindingHandler() {\n          return ctx.toggle();\n        })(\"keydown.enter\", function NbAccordionItemHeaderComponent_keydown_enter_HostBindingHandler() {\n          return ctx.toggle();\n        });\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.expanded)(\"tabindex\", ctx.tabbable)(\"aria-disabled\", ctx.disabled);\n        ɵngcc0.ɵɵclassProp(\"accordion-item-header-collapsed\", ctx.isCollapsed)(\"accordion-item-header-expanded\", ctx.expanded);\n      }\n    },\n    ngContentSelectors: _c35,\n    decls: 4,\n    vars: 1,\n    consts: [[\"icon\", \"chevron-down-outline\", \"pack\", \"nebular-essentials\", \"class\", \"expansion-indicator\", 4, \"ngIf\"], [\"icon\", \"chevron-down-outline\", \"pack\", \"nebular-essentials\", 1, \"expansion-indicator\"]],\n    template: function NbAccordionItemHeaderComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c34);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵprojection(1, 1);\n        ɵngcc0.ɵɵprojection(2, 2);\n        ɵngcc0.ɵɵtemplate(3, NbAccordionItemHeaderComponent_nb_icon_3_Template, 1, 1, \"nb-icon\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.disabled);\n      }\n    },\n    directives: [ɵngcc2.NgIf, NbIconComponent],\n    styles: [\"[_nghost-%COMP%]{display:flex;align-items:center;cursor:pointer}[_nghost-%COMP%]:focus{outline:0}\"],\n    data: {\n      animation: [trigger('expansionIndicator', [state('expanded', style({\n        transform: 'rotate(180deg)'\n      })), transition('collapsed => expanded', animate('100ms ease-in')), transition('expanded => collapsed', animate('100ms ease-out'))])]\n    },\n    changeDetection: 0\n  });\n  return NbAccordionItemHeaderComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nconst NB_ACCORDION_COMPONENTS = [NbAccordionComponent, NbAccordionItemComponent, NbAccordionItemHeaderComponent, NbAccordionItemBodyComponent];\nlet NbAccordionModule = /*#__PURE__*/(() => {\n  class NbAccordionModule {}\n\n  NbAccordionModule.ɵfac = function NbAccordionModule_Factory(t) {\n    return new (t || NbAccordionModule)();\n  };\n\n  NbAccordionModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NbAccordionModule\n  });\n  NbAccordionModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    providers: [],\n    imports: [[CommonModule, NbIconModule]]\n  });\n  return NbAccordionModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NbAccordionModule, {\n    declarations: function () {\n      return [NbAccordionComponent, NbAccordionItemComponent, NbAccordionItemHeaderComponent, NbAccordionItemBodyComponent];\n    },\n    imports: function () {\n      return [CommonModule, NbIconModule];\n    },\n    exports: function () {\n      return [NbAccordionComponent, NbAccordionItemComponent, NbAccordionItemHeaderComponent, NbAccordionItemBodyComponent];\n    }\n  });\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * `[nbButtonToggle]` is a directive to add a `pressed` state to a button.\n */\n\n\nlet NbButtonToggleDirective = /*#__PURE__*/(() => {\n  class NbButtonToggleDirective extends NbButton {\n    constructor(renderer, hostElement, cd, zone, statusService) {\n      super(renderer, hostElement, cd, zone, statusService);\n      this.renderer = renderer;\n      this.hostElement = hostElement;\n      this.cd = cd;\n      this.zone = zone;\n      this.statusService = statusService;\n      this._pressedChange$ = new Subject();\n      this.appearance = 'filled';\n      this._pressed = false;\n      /**\n       * Emits whenever button pressed state change\n       **/\n\n      this.pressedChange = new EventEmitter();\n    }\n\n    get pressedChange$() {\n      return this._pressedChange$.asObservable();\n    }\n    /**\n     * Controls button pressed state\n     **/\n\n\n    get pressed() {\n      return this._pressed;\n    }\n\n    set pressed(value) {\n      if (this.pressed !== convertToBoolProperty(value)) {\n        this._pressed = !this.pressed;\n        this.pressedChange.emit(this.pressed);\n\n        this._pressedChange$.next({\n          source: this,\n          pressed: this.pressed\n        });\n      }\n    }\n\n    get basic() {\n      // By design, all toggle buttons should have a `basic` status when not pressed.\n      return !this.pressed;\n    }\n\n    get primary() {\n      return this.pressed && (this.status === 'basic' || this.status === 'primary');\n    }\n\n    get success() {\n      return this.pressed && this.status === 'success';\n    }\n\n    get info() {\n      return this.pressed && this.status === 'info';\n    }\n\n    get warning() {\n      return this.pressed && this.status === 'warning';\n    }\n\n    get danger() {\n      return this.pressed && this.status === 'danger';\n    }\n\n    get control() {\n      return this.pressed && this.status === 'control';\n    }\n\n    get additionalClasses() {\n      if (this.statusService.isCustomStatus(this.status)) {\n        return [this.statusService.getStatusClass(this.status)];\n      }\n\n      return [];\n    }\n\n    onClick() {\n      this.pressed = !this.pressed;\n    }\n    /**\n     * @docs-private\n     */\n\n\n    _updatePressed(value) {\n      this.pressed = value;\n      this.cd.markForCheck();\n    }\n\n  }\n\n  NbButtonToggleDirective.ɵfac = function NbButtonToggleDirective_Factory(t) {\n    return new (t || NbButtonToggleDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(NbStatusService));\n  };\n\n  NbButtonToggleDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NbButtonToggleDirective,\n    selectors: [[\"button\", \"nbButtonToggle\", \"\"]],\n    hostVars: 17,\n    hostBindings: function NbButtonToggleDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function NbButtonToggleDirective_click_HostBindingHandler() {\n          return ctx.onClick();\n        });\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-pressed\", ctx.pressed);\n        ɵngcc0.ɵɵclassMap(ctx.additionalClasses);\n        ɵngcc0.ɵɵclassProp(\"status-basic\", ctx.basic)(\"status-primary\", ctx.primary)(\"status-success\", ctx.success)(\"status-info\", ctx.info)(\"status-warning\", ctx.warning)(\"status-danger\", ctx.danger)(\"status-control\", ctx.control);\n      }\n    },\n    inputs: {\n      appearance: \"appearance\",\n      pressed: \"pressed\",\n      value: \"value\"\n    },\n    outputs: {\n      pressedChange: \"pressedChange\"\n    },\n    exportAs: [\"nbButtonToggle\"],\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: NbButton,\n      useExisting: NbButtonToggleDirective\n    }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return NbButtonToggleDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * `<nb-button-group>` visually groups buttons together and allow to control buttons properties and the state as a\n * group.\n * @stacked-example(Button Group Showcase, button-group/button-group-showcase.component)\n *\n * ### Installation\n *\n * Import `NbButtonGroupModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbButtonGroupModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n *\n * ### Usage\n *\n * You can use `<nb-button-group>` to group a series of `[nbButton]` or `[nbButtonToggle]` components.\n * @stacked-example(Button and Button Toggle Groups, button-group/button-and-button-toggle-groups.component)\n *\n * For a group of multiple `[nbButtonToggle]` you also can control multi-selection behavior. By default, the group\n * component allows only one pressed button toggle at a time (similar to the radio group). To be able to keep multiple\n * toggles pressed, you need to add `multiple` attributes to the `<nb-button-toggle>`.\n * @stacked-example(Button Group Multiple, button-group/button-group-multiple.component)\n *\n * To know which buttons are currently pressed listen to `(valueChange)` on the `nb-button-group`. Event\n * contains an array of values of currently pressed button toggles. You can assign a value to the\n * `[nbButtonToggle]` via the `value` input.\n * @stacked-example(Button Group Value Change, button-group/button-group-value-change.component)\n *\n * To disable a group of buttons, add a `disabled` attribute to the `<nb-button-group>`.\n * @stacked-example(Button Group Disabled, button-group/button-group-disabled.component)\n *\n * The group component controls all visual attributes of buttons such as `appearance`, `status`, `size`, `shape`.\n * You can change it via the appropriate attributes.\n *\n * Button group appearances:\n * @stacked-example(Button Group Appearances, button-group/button-group-appearances.component)\n *\n * Button group statuses:\n * @stacked-example(Button Group Statuses, button-group/button-group-statuses.component)\n *\n * Button group sizes:\n * @stacked-example(Button Group Sizes, button-group/button-group-sizes.component)\n *\n * Buttons group shapes:\n * @additional-example(Button Group Shapes, button-group/button-group-shapes.component)\n *\n * @styles\n *\n * button-group-filled-button-basic-text-color:\n * button-group-filled-button-primary-text-color:\n * button-group-filled-button-success-text-color:\n * button-group-filled-button-info-text-color:\n * button-group-filled-button-warning-text-color:\n * button-group-filled-button-danger-text-color:\n * button-group-filled-button-control-text-color:\n * button-group-filled-basic-divider-color:\n * button-group-filled-primary-divider-color:\n * button-group-filled-success-divider-color:\n * button-group-filled-info-divider-color:\n * button-group-filled-warning-divider-color:\n * button-group-filled-danger-divider-color:\n * button-group-filled-control-divider-color:\n * button-group-ghost-divider-color:\n **/\n\n\nlet NbButtonGroupComponent = /*#__PURE__*/(() => {\n  class NbButtonGroupComponent {\n    constructor(cd, statusService) {\n      this.cd = cd;\n      this.statusService = statusService;\n      this.lastEmittedValue = [];\n      this.destroy$ = new Subject();\n      this.buttonsChange$ = new Subject();\n      /**\n       * Button group size, available sizes:\n       * `tiny`, `small`, `medium`, `large`, `giant`\n       */\n\n      this.size = 'medium';\n      /**\n       * Button group status (adds specific styles):\n       * `basic`, `primary`, `info`, `success`, `warning`, `danger`, `control`\n       */\n\n      this.status = 'basic';\n      /**\n       * Button group shapes: `rectangle`, `round`, `semi-round`\n       */\n\n      this.shape = 'rectangle';\n      /**\n       * Button group appearance: `filled`, `outline`, `ghost`\n       */\n\n      this.appearance = 'filled';\n      this._disabled = false;\n      this._multiple = false;\n      /**\n       * Emits when `nbButtonToggle` pressed state change. `$event` contains an array of the currently pressed button\n       * toggles.\n       */\n\n      this.valueChange = new EventEmitter();\n      this.role = 'group';\n    }\n\n    get disabled() {\n      return this._disabled;\n    }\n\n    set disabled(value) {\n      if (this.disabled !== convertToBoolProperty(value)) {\n        this._disabled = !this.disabled;\n      }\n    }\n    /**\n     * Allows to keep multiple button toggles pressed. Off by default.\n     */\n\n\n    get multiple() {\n      return this._multiple;\n    }\n\n    set multiple(value) {\n      this._multiple = convertToBoolProperty(value);\n    }\n    /**\n     * Sets `filled` appearance\n     */\n\n\n    get filled() {\n      return this.appearance === 'filled';\n    }\n\n    set filled(value) {\n      if (convertToBoolProperty(value)) {\n        this.appearance = 'filled';\n      }\n    }\n    /**\n     * Sets `outline` appearance\n     */\n\n\n    get outline() {\n      return this.appearance === 'outline';\n    }\n\n    set outline(value) {\n      if (convertToBoolProperty(value)) {\n        this.appearance = 'outline';\n      }\n    }\n    /**\n     * Sets `ghost` appearance\n     */\n\n\n    get ghost() {\n      return this.appearance === 'ghost';\n    }\n\n    set ghost(value) {\n      if (convertToBoolProperty(value)) {\n        this.appearance = 'ghost';\n      }\n    }\n\n    get additionalClasses() {\n      if (this.statusService.isCustomStatus(this.status)) {\n        return [this.statusService.getStatusClass(this.status)];\n      }\n\n      return [];\n    }\n\n    ngOnChanges({\n      size,\n      status,\n      shape,\n      multiple,\n      filled,\n      outline,\n      ghost,\n      disabled\n    }) {\n      var _a;\n\n      if (size || status || shape || multiple || filled || outline || ghost || disabled) {\n        this.syncButtonsProperties(((_a = this.buttons) === null || _a === void 0 ? void 0 : _a.toArray()) || []);\n      }\n    }\n\n    ngAfterContentInit() {\n      this.buttonsChange$.pipe(takeUntil(this.destroy$)).subscribe(buttons => {\n        this.listenButtonPressedState(buttons);\n        this.syncButtonsProperties(buttons);\n      });\n      this.buttons.changes.pipe( // `buttons.changes` emit during change detection run after projected content already was initialized.\n      // So at this time, it's too late to update projected buttons properties as updating bindings after\n      // initialization doesn't make sense. Changes won't be picked up and should cause an \"expression changed\" error.\n      // Instead, we wrap the new buttons list into a promise to defer update to the following microtask and also to\n      // trigger change detection one more time.\n      switchMap(buttons => from(Promise.resolve(buttons.toArray()))), takeUntil(this.destroy$)).subscribe(this.buttonsChange$);\n      this.buttonsChange$.next(this.buttons.toArray());\n    }\n\n    listenButtonPressedState(buttons) {\n      const toggleButtons = buttons.filter(button => {\n        return button instanceof NbButtonToggleDirective;\n      });\n\n      if (!toggleButtons.length) {\n        return;\n      }\n\n      const buttonsPressedChange$ = toggleButtons.map(button => button.pressedChange$);\n      merge(...buttonsPressedChange$).pipe(filter(({\n        pressed\n      }) => !this.multiple && pressed), takeUntil(merge(this.buttonsChange$, this.destroy$))).subscribe(({\n        source\n      }) => {\n        toggleButtons.filter(button => button !== source).forEach(button => button._updatePressed(false));\n      });\n      merge(...buttonsPressedChange$).pipe( // Use startWith to emit if some buttons are initially pressed.\n      startWith(''), // Use debounce to emit change once when pressed state change in multiple button toggles.\n      debounceTime(0), takeUntil(merge(this.buttonsChange$, this.destroy$))).subscribe(() => this.emitCurrentValue(toggleButtons));\n    }\n\n    syncButtonsProperties(buttons) {\n      buttons.forEach(button => {\n        button.updateProperties({\n          appearance: this.appearance,\n          size: this.size,\n          status: this.status,\n          shape: this.shape,\n          disabled: this.disabled\n        });\n      });\n    }\n\n    emitCurrentValue(toggleButtons) {\n      const pressedToggleValues = toggleButtons.filter(b => b.pressed && typeof b.value !== 'undefined').map(b => b.value); // Prevent multiple emissions of empty value.\n\n      if (pressedToggleValues.length === 0 && this.lastEmittedValue.length === 0) {\n        return;\n      }\n\n      this.valueChange.emit(pressedToggleValues);\n      this.lastEmittedValue = pressedToggleValues;\n    }\n\n  }\n\n  NbButtonGroupComponent.ɵfac = function NbButtonGroupComponent_Factory(t) {\n    return new (t || NbButtonGroupComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(NbStatusService));\n  };\n\n  NbButtonGroupComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbButtonGroupComponent,\n    selectors: [[\"nb-button-group\"]],\n    contentQueries: function NbButtonGroupComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NbButton, 4);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.buttons = _t);\n      }\n    },\n    hostVars: 3,\n    hostBindings: function NbButtonGroupComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"role\", ctx.role);\n        ɵngcc0.ɵɵclassMap(ctx.additionalClasses);\n      }\n    },\n    inputs: {\n      size: \"size\",\n      status: \"status\",\n      shape: \"shape\",\n      appearance: \"appearance\",\n      disabled: \"disabled\",\n      multiple: \"multiple\",\n      filled: \"filled\",\n      outline: \"outline\",\n      ghost: \"ghost\"\n    },\n    outputs: {\n      valueChange: \"valueChange\"\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function NbButtonGroupComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return NbButtonGroupComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nlet NbButtonGroupModule = /*#__PURE__*/(() => {\n  class NbButtonGroupModule {}\n\n  NbButtonGroupModule.ɵfac = function NbButtonGroupModule_Factory(t) {\n    return new (t || NbButtonGroupModule)();\n  };\n\n  NbButtonGroupModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NbButtonGroupModule\n  });\n  NbButtonGroupModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n  return NbButtonGroupModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NbButtonGroupModule, {\n    declarations: [NbButtonGroupComponent, NbButtonToggleDirective],\n    exports: [NbButtonGroupComponent, NbButtonToggleDirective]\n  });\n})();\n/**\n * List is a container component that wraps `nb-list-item` component.\n *\n * Basic example:\n * @stacked-example(Simple list, list/simple-list-showcase.component)\n *\n * `nb-list-item` accepts arbitrary content, so you can create a list of any components.\n *\n * ### Installation\n *\n * Import `NbListModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbListModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * List of users:\n * @stacked-example(Users list, list/users-list-showcase.component)\n *\n * @styles\n *\n * list-item-divider-color:\n * list-item-divider-style:\n * list-item-divider-width:\n * list-item-padding:\n * list-item-text-color:\n * list-item-font-family:\n * list-item-font-size:\n * list-item-font-weight:\n * list-item-line-height:\n */\n\n\nlet NbListComponent = /*#__PURE__*/(() => {\n  class NbListComponent {\n    constructor() {\n      /**\n       * Role attribute value\n       *\n       * @type {string}\n       */\n      this.role = 'list';\n    }\n\n  }\n\n  NbListComponent.ɵfac = function NbListComponent_Factory(t) {\n    return new (t || NbListComponent)();\n  };\n\n  NbListComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbListComponent,\n    selectors: [[\"nb-list\"]],\n    hostVars: 1,\n    hostBindings: function NbListComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"role\", ctx.role);\n      }\n    },\n    inputs: {\n      role: \"role\"\n    },\n    ngContentSelectors: _c37,\n    decls: 1,\n    vars: 0,\n    template: function NbListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c36);\n        ɵngcc0.ɵɵprojection(0);\n      }\n    },\n    styles: [\"[_nghost-%COMP%]{display:flex;flex-direction:column;flex:1 1 auto;overflow:auto}\"]\n  });\n  return NbListComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * List item component is a grouping component that accepts arbitrary content.\n * It should be direct child of `nb-list` componet.\n */\n\n\nlet NbListItemComponent = /*#__PURE__*/(() => {\n  class NbListItemComponent {\n    constructor() {\n      /**\n       * Role attribute value\n       *\n       * @type {string}\n       */\n      this.role = 'listitem';\n    }\n\n  }\n\n  NbListItemComponent.ɵfac = function NbListItemComponent_Factory(t) {\n    return new (t || NbListItemComponent)();\n  };\n\n  NbListItemComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbListItemComponent,\n    selectors: [[\"nb-list-item\"]],\n    hostVars: 1,\n    hostBindings: function NbListItemComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"role\", ctx.role);\n      }\n    },\n    inputs: {\n      role: \"role\"\n    },\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function NbListItemComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n      }\n    },\n    styles: [\"[_nghost-%COMP%]{display:flex;align-items:center;flex-shrink:0}\"]\n  });\n  return NbListItemComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * List pager directive\n *\n * Directive allows you to determine page of currently viewing items.\n *\n */\n\n\nlet NbListPageTrackerDirective = /*#__PURE__*/(() => {\n  class NbListPageTrackerDirective {\n    constructor() {\n      this.destroy$ = new Subject();\n      /**\n       * Page to start counting with.\n       */\n\n      this.startPage = 1;\n      /**\n       * Emits when another page become visible.\n       */\n\n      this.pageChange = new EventEmitter();\n      this.observer = new IntersectionObserver(entries => this.checkForPageChange(entries), {\n        threshold: 0.5\n      });\n    }\n\n    ngAfterViewInit() {\n      if (this.listItems && this.listItems.length) {\n        this.observeItems();\n      }\n\n      this.listItems.changes.pipe(takeUntil(this.destroy$)).subscribe(() => this.observeItems());\n    }\n\n    ngOnDestroy() {\n      this.observer.disconnect && this.observer.disconnect();\n    }\n\n    observeItems() {\n      this.listItems.forEach(i => this.observer.observe(i.nativeElement));\n    }\n\n    checkForPageChange(entries) {\n      const mostVisiblePage = this.findMostVisiblePage(entries);\n\n      if (mostVisiblePage && this.currentPage !== mostVisiblePage) {\n        this.currentPage = mostVisiblePage;\n        this.pageChange.emit(this.currentPage);\n      }\n    }\n\n    findMostVisiblePage(entries) {\n      const intersectionRatioByPage = new Map();\n\n      for (const entry of entries) {\n        if (entry.intersectionRatio < 0.5) {\n          continue;\n        }\n\n        const elementIndex = this.elementIndex(entry.target);\n\n        if (elementIndex === -1) {\n          continue;\n        }\n\n        const page = this.startPage + Math.floor(elementIndex / this.pageSize);\n        let ratio = entry.intersectionRatio;\n\n        if (intersectionRatioByPage.has(page)) {\n          ratio += intersectionRatioByPage.get(page);\n        }\n\n        intersectionRatioByPage.set(page, ratio);\n      }\n\n      let maxRatio = 0;\n      let mostVisiblePage;\n      intersectionRatioByPage.forEach((ratio, page) => {\n        if (ratio > maxRatio) {\n          maxRatio = ratio;\n          mostVisiblePage = page;\n        }\n      });\n      return mostVisiblePage;\n    }\n\n    elementIndex(element) {\n      return element.parentElement && element.parentElement.children ? Array.from(element.parentElement.children).indexOf(element) : -1;\n    }\n\n  }\n\n  NbListPageTrackerDirective.ɵfac = function NbListPageTrackerDirective_Factory(t) {\n    return new (t || NbListPageTrackerDirective)();\n  };\n\n  NbListPageTrackerDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NbListPageTrackerDirective,\n    selectors: [[\"\", \"nbListPageTracker\", \"\"]],\n    contentQueries: function NbListPageTrackerDirective_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NbListItemComponent, 4, ElementRef);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.listItems = _t);\n      }\n    },\n    inputs: {\n      startPage: \"startPage\",\n      pageSize: \"pageSize\"\n    },\n    outputs: {\n      pageChange: \"pageChange\"\n    }\n  });\n  return NbListPageTrackerDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nclass NbScrollableContainerDimentions {}\n/**\n * Infinite List Directive\n *\n * ```html\n *  <nb-list nbInfiniteList [threshold]=\"500\" (bottomThreshold)=\"loadNext()\">\n *    <nb-list-item *ngFor=\"let item of items\"></nb-list-item>\n *  </nb-list>\n * ```\n *\n * @stacked-example(Simple infinite list, infinite-list/infinite-list-showcase.component)\n *\n * Directive will notify when list scrolled up or down to a given threshold.\n * By default it listen to scroll of list on which applied, but also can be set to listen to window scroll.\n *\n * @stacked-example(Scroll modes, infinite-list/infinite-list-scroll-modes.component)\n *\n * To improve UX of infinite lists, it's better to keep current page in url,\n * so user able to return to the last viewed page or to share a link to this page.\n * `nbListPageTracker` directive will help you to know, what page user currently viewing.\n * Just put it on a list, set page size and it will calculate page that currently in viewport.\n * You can [open the example](example/infinite-list/infinite-news-list.component)\n * in a new tab to check out this feature.\n *\n * @stacked-example(Infinite list with pager, infinite-list/infinite-news-list.component)\n *\n * @stacked-example(Infinite list with placeholders at the top, infinite-list/infinite-list-placeholders.component)\n *\n */\n\n\nlet NbInfiniteListDirective = /*#__PURE__*/(() => {\n  class NbInfiniteListDirective {\n    constructor(elementRef, scrollService, dimensionsService) {\n      this.elementRef = elementRef;\n      this.scrollService = scrollService;\n      this.dimensionsService = dimensionsService;\n      this.destroy$ = new Subject();\n      this.windowScroll = false;\n      /**\n       * Emits when distance between list bottom and current scroll position is less than threshold.\n       */\n\n      this.bottomThreshold = new EventEmitter(true);\n      /**\n       * Emits when distance between list top and current scroll position is less than threshold.\n       */\n\n      this.topThreshold = new EventEmitter(true);\n    }\n\n    get elementScroll() {\n      return !this.windowScroll;\n    }\n    /**\n     * By default component observes list scroll position.\n     * If set to `true`, component will observe position of page scroll instead.\n     */\n\n\n    set listenWindowScroll(value) {\n      this.windowScroll = convertToBoolProperty(value);\n    }\n\n    onElementScroll() {\n      if (this.elementScroll) {\n        this.checkPosition(this.elementRef.nativeElement);\n      }\n    }\n\n    ngAfterViewInit() {\n      this.scrollService.onScroll().pipe(filter(() => this.windowScroll), switchMap(() => this.getContainerDimensions()), takeUntil(this.destroy$)).subscribe(dimentions => this.checkPosition(dimentions));\n      this.listItems.changes.pipe( // For some reason, changes are emitted before list item removed from dom,\n      // so dimensions will be incorrect.\n      // Check every 50ms for a second if dom and query are in sync.\n      // Once they synchronized, we can get proper dimensions.\n      switchMap(() => interval(50).pipe(filter(() => this.inSyncWithDom()), take(1), takeUntil(timer(1000)))), switchMap(() => this.getContainerDimensions()), takeUntil(this.destroy$)).subscribe(dimentions => this.checkPosition(dimentions));\n      this.getContainerDimensions().subscribe(dimentions => this.checkPosition(dimentions));\n    }\n\n    ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n\n    checkPosition({\n      scrollHeight,\n      scrollTop,\n      clientHeight\n    }) {\n      const initialCheck = this.lastScrollPosition == null;\n      const manualCheck = this.lastScrollPosition === scrollTop;\n      const scrollUp = scrollTop < this.lastScrollPosition;\n      const scrollDown = scrollTop > this.lastScrollPosition;\n      const distanceToBottom = scrollHeight - scrollTop - clientHeight;\n\n      if ((initialCheck || manualCheck || scrollDown) && distanceToBottom <= this.threshold) {\n        this.bottomThreshold.emit();\n      }\n\n      if ((initialCheck || scrollUp) && scrollTop <= this.threshold) {\n        this.topThreshold.emit();\n      }\n\n      this.lastScrollPosition = scrollTop;\n    }\n\n    getContainerDimensions() {\n      if (this.elementScroll) {\n        const {\n          scrollTop,\n          scrollHeight,\n          clientHeight\n        } = this.elementRef.nativeElement;\n        return of({\n          scrollTop,\n          scrollHeight,\n          clientHeight\n        });\n      }\n\n      return forkJoin([this.scrollService.getPosition(), this.dimensionsService.getDimensions()]).pipe(map(([scrollPosition, dimensions]) => ({\n        scrollTop: scrollPosition.y,\n        scrollHeight: dimensions.scrollHeight,\n        clientHeight: dimensions.clientHeight\n      })));\n    }\n\n    inSyncWithDom() {\n      return this.elementRef.nativeElement.children.length === this.listItems.length;\n    }\n\n  }\n\n  NbInfiniteListDirective.ɵfac = function NbInfiniteListDirective_Factory(t) {\n    return new (t || NbInfiniteListDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(NbLayoutScrollService), ɵngcc0.ɵɵdirectiveInject(NbLayoutRulerService));\n  };\n\n  NbInfiniteListDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NbInfiniteListDirective,\n    selectors: [[\"\", \"nbInfiniteList\", \"\"]],\n    contentQueries: function NbInfiniteListDirective_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NbListItemComponent, 4);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.listItems = _t);\n      }\n    },\n    hostBindings: function NbInfiniteListDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"scroll\", function NbInfiniteListDirective_scroll_HostBindingHandler() {\n          return ctx.onElementScroll();\n        });\n      }\n    },\n    inputs: {\n      listenWindowScroll: \"listenWindowScroll\",\n      threshold: \"threshold\"\n    },\n    outputs: {\n      bottomThreshold: \"bottomThreshold\",\n      topThreshold: \"topThreshold\"\n    }\n  });\n  return NbInfiniteListDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nconst components = [NbListComponent, NbListItemComponent, NbListPageTrackerDirective, NbInfiniteListDirective];\nlet NbListModule = /*#__PURE__*/(() => {\n  class NbListModule {}\n\n  NbListModule.ɵfac = function NbListModule_Factory(t) {\n    return new (t || NbListModule)();\n  };\n\n  NbListModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NbListModule\n  });\n  NbListModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n  return NbListModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NbListModule, {\n    declarations: [NbListComponent, NbListItemComponent, NbListPageTrackerDirective, NbInfiniteListDirective],\n    exports: [NbListComponent, NbListItemComponent, NbListPageTrackerDirective, NbInfiniteListDirective]\n  });\n})();\n\nlet NbDirectionality = /*#__PURE__*/(() => {\n  class NbDirectionality extends Directionality {}\n\n  NbDirectionality.ɵfac = /*@__PURE__*/function () {\n    let ɵNbDirectionality_BaseFactory;\n    return function NbDirectionality_Factory(t) {\n      return (ɵNbDirectionality_BaseFactory || (ɵNbDirectionality_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(NbDirectionality)))(t || NbDirectionality);\n    };\n  }();\n\n  NbDirectionality.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: NbDirectionality,\n    factory: NbDirectionality.ɵfac\n  });\n  return NbDirectionality;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet NbBidiModule = /*#__PURE__*/(() => {\n  class NbBidiModule extends BidiModule {}\n\n  NbBidiModule.ɵfac = /*@__PURE__*/function () {\n    let ɵNbBidiModule_BaseFactory;\n    return function NbBidiModule_Factory(t) {\n      return (ɵNbBidiModule_BaseFactory || (ɵNbBidiModule_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(NbBidiModule)))(t || NbBidiModule);\n    };\n  }();\n\n  NbBidiModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NbBidiModule\n  });\n  NbBidiModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    providers: [{\n      provide: NbDirectionality,\n      useExisting: Directionality\n    }]\n  });\n  return NbBidiModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/*\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license infornbion.\n */\n\n/**\n * Cell definition for the nb-table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\n\n\nlet NbCellDefDirective = /*#__PURE__*/(() => {\n  class NbCellDefDirective extends CdkCellDef {}\n\n  NbCellDefDirective.ɵfac = /*@__PURE__*/function () {\n    let ɵNbCellDefDirective_BaseFactory;\n    return function NbCellDefDirective_Factory(t) {\n      return (ɵNbCellDefDirective_BaseFactory || (ɵNbCellDefDirective_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(NbCellDefDirective)))(t || NbCellDefDirective);\n    };\n  }();\n\n  NbCellDefDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NbCellDefDirective,\n    selectors: [[\"\", \"nbCellDef\", \"\"]],\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: CdkCellDef,\n      useExisting: NbCellDefDirective\n    }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return NbCellDefDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Header cell definition for the nb-table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\n\n\nlet NbHeaderCellDefDirective = /*#__PURE__*/(() => {\n  class NbHeaderCellDefDirective extends CdkHeaderCellDef {}\n\n  NbHeaderCellDefDirective.ɵfac = /*@__PURE__*/function () {\n    let ɵNbHeaderCellDefDirective_BaseFactory;\n    return function NbHeaderCellDefDirective_Factory(t) {\n      return (ɵNbHeaderCellDefDirective_BaseFactory || (ɵNbHeaderCellDefDirective_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(NbHeaderCellDefDirective)))(t || NbHeaderCellDefDirective);\n    };\n  }();\n\n  NbHeaderCellDefDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NbHeaderCellDefDirective,\n    selectors: [[\"\", \"nbHeaderCellDef\", \"\"]],\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: CdkHeaderCellDef,\n      useExisting: NbHeaderCellDefDirective\n    }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return NbHeaderCellDefDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Footer cell definition for the nb-table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\n\n\nlet NbFooterCellDefDirective = /*#__PURE__*/(() => {\n  class NbFooterCellDefDirective extends CdkFooterCellDef {}\n\n  NbFooterCellDefDirective.ɵfac = /*@__PURE__*/function () {\n    let ɵNbFooterCellDefDirective_BaseFactory;\n    return function NbFooterCellDefDirective_Factory(t) {\n      return (ɵNbFooterCellDefDirective_BaseFactory || (ɵNbFooterCellDefDirective_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(NbFooterCellDefDirective)))(t || NbFooterCellDefDirective);\n    };\n  }();\n\n  NbFooterCellDefDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NbFooterCellDefDirective,\n    selectors: [[\"\", \"nbFooterCellDef\", \"\"]],\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: CdkFooterCellDef,\n      useExisting: NbFooterCellDefDirective\n    }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return NbFooterCellDefDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nconst NB_SORT_HEADER_COLUMN_DEF = new InjectionToken('NB_SORT_HEADER_COLUMN_DEF');\n/**\n * Column definition for the nb-table.\n * Defines a set of cells available for a table column.\n */\n\nlet NbColumnDefDirective = /*#__PURE__*/(() => {\n  class NbColumnDefDirective extends CdkColumnDef {\n    /** Unique name for this column. */\n    get name() {\n      return this._name;\n    }\n\n    set name(value) {\n      this._setNameInput(value);\n    }\n    /** Whether this column should be sticky positioned on the end of the row */\n\n\n    get stickyEnd() {\n      return this._stickyEnd;\n    }\n\n    set stickyEnd(value) {\n      const prevValue = this._stickyEnd;\n      this._stickyEnd = coerceBooleanProperty(value);\n      this._hasStickyChanged = prevValue !== this._stickyEnd;\n    }\n\n  }\n\n  NbColumnDefDirective.ɵfac = /*@__PURE__*/function () {\n    let ɵNbColumnDefDirective_BaseFactory;\n    return function NbColumnDefDirective_Factory(t) {\n      return (ɵNbColumnDefDirective_BaseFactory || (ɵNbColumnDefDirective_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(NbColumnDefDirective)))(t || NbColumnDefDirective);\n    };\n  }();\n\n  NbColumnDefDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NbColumnDefDirective,\n    selectors: [[\"\", \"nbColumnDef\", \"\"]],\n    inputs: {\n      name: [\"nbColumnDef\", \"name\"],\n      stickyEnd: \"stickyEnd\",\n      sticky: \"sticky\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: CdkColumnDef,\n      useExisting: NbColumnDefDirective\n    }, {\n      provide: NB_SORT_HEADER_COLUMN_DEF,\n      useExisting: NbColumnDefDirective\n    }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return NbColumnDefDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Header cell template container that adds the right classes and role. */\n\n\nlet NbHeaderCellDirective = /*#__PURE__*/(() => {\n  class NbHeaderCellDirective extends CdkHeaderCell {\n    constructor(columnDef, elementRef) {\n      super(columnDef, elementRef);\n      elementRef.nativeElement.classList.add(`nb-column-${columnDef.cssClassFriendlyName}`);\n    }\n\n  }\n\n  NbHeaderCellDirective.ɵfac = function NbHeaderCellDirective_Factory(t) {\n    return new (t || NbHeaderCellDirective)(ɵngcc0.ɵɵdirectiveInject(NbColumnDefDirective), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  NbHeaderCellDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NbHeaderCellDirective,\n    selectors: [[\"nb-header-cell\"], [\"th\", \"nbHeaderCell\", \"\"]],\n    hostAttrs: [\"role\", \"columnheader\", 1, \"nb-header-cell\"],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return NbHeaderCellDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Footer cell template container that adds the right classes and role. */\n\n\nlet NbFooterCellDirective = /*#__PURE__*/(() => {\n  class NbFooterCellDirective extends CdkFooterCell {\n    constructor(columnDef, elementRef) {\n      super(columnDef, elementRef);\n      elementRef.nativeElement.classList.add(`nb-column-${columnDef.cssClassFriendlyName}`);\n    }\n\n  }\n\n  NbFooterCellDirective.ɵfac = function NbFooterCellDirective_Factory(t) {\n    return new (t || NbFooterCellDirective)(ɵngcc0.ɵɵdirectiveInject(NbColumnDefDirective), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  NbFooterCellDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NbFooterCellDirective,\n    selectors: [[\"nb-footer-cell\"], [\"td\", \"nbFooterCell\", \"\"]],\n    hostAttrs: [\"role\", \"gridcell\", 1, \"nb-footer-cell\"],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return NbFooterCellDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Cell template container that adds the right classes and role. */\n\n\nlet NbCellDirective = /*#__PURE__*/(() => {\n  class NbCellDirective extends CdkCell {\n    constructor(columnDef, elementRef) {\n      super(columnDef, elementRef);\n      elementRef.nativeElement.classList.add(`nb-column-${columnDef.cssClassFriendlyName}`);\n    }\n\n  }\n\n  NbCellDirective.ɵfac = function NbCellDirective_Factory(t) {\n    return new (t || NbCellDirective)(ɵngcc0.ɵɵdirectiveInject(NbColumnDefDirective), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  NbCellDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NbCellDirective,\n    selectors: [[\"nb-cell\"], [\"td\", \"nbCell\", \"\"]],\n    hostAttrs: [\"role\", \"gridcell\", 1, \"nb-cell\"],\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return NbCellDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nclass NbDataSource extends DataSource {}\n\nlet NbDataRowOutletDirective = /*#__PURE__*/(() => {\n  class NbDataRowOutletDirective extends DataRowOutlet {}\n\n  NbDataRowOutletDirective.ɵfac = /*@__PURE__*/function () {\n    let ɵNbDataRowOutletDirective_BaseFactory;\n    return function NbDataRowOutletDirective_Factory(t) {\n      return (ɵNbDataRowOutletDirective_BaseFactory || (ɵNbDataRowOutletDirective_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(NbDataRowOutletDirective)))(t || NbDataRowOutletDirective);\n    };\n  }();\n\n  NbDataRowOutletDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NbDataRowOutletDirective,\n    selectors: [[\"\", \"nbRowOutlet\", \"\"]],\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: DataRowOutlet,\n      useExisting: NbDataRowOutletDirective\n    }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return NbDataRowOutletDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet NbHeaderRowOutletDirective = /*#__PURE__*/(() => {\n  class NbHeaderRowOutletDirective extends HeaderRowOutlet {}\n\n  NbHeaderRowOutletDirective.ɵfac = /*@__PURE__*/function () {\n    let ɵNbHeaderRowOutletDirective_BaseFactory;\n    return function NbHeaderRowOutletDirective_Factory(t) {\n      return (ɵNbHeaderRowOutletDirective_BaseFactory || (ɵNbHeaderRowOutletDirective_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(NbHeaderRowOutletDirective)))(t || NbHeaderRowOutletDirective);\n    };\n  }();\n\n  NbHeaderRowOutletDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NbHeaderRowOutletDirective,\n    selectors: [[\"\", \"nbHeaderRowOutlet\", \"\"]],\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: HeaderRowOutlet,\n      useExisting: NbHeaderRowOutletDirective\n    }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return NbHeaderRowOutletDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet NbFooterRowOutletDirective = /*#__PURE__*/(() => {\n  class NbFooterRowOutletDirective extends FooterRowOutlet {}\n\n  NbFooterRowOutletDirective.ɵfac = /*@__PURE__*/function () {\n    let ɵNbFooterRowOutletDirective_BaseFactory;\n    return function NbFooterRowOutletDirective_Factory(t) {\n      return (ɵNbFooterRowOutletDirective_BaseFactory || (ɵNbFooterRowOutletDirective_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(NbFooterRowOutletDirective)))(t || NbFooterRowOutletDirective);\n    };\n  }();\n\n  NbFooterRowOutletDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NbFooterRowOutletDirective,\n    selectors: [[\"\", \"nbFooterRowOutlet\", \"\"]],\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: FooterRowOutlet,\n      useExisting: NbFooterRowOutletDirective\n    }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return NbFooterRowOutletDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet NbNoDataRowOutletDirective = /*#__PURE__*/(() => {\n  class NbNoDataRowOutletDirective extends NoDataRowOutlet {}\n\n  NbNoDataRowOutletDirective.ɵfac = /*@__PURE__*/function () {\n    let ɵNbNoDataRowOutletDirective_BaseFactory;\n    return function NbNoDataRowOutletDirective_Factory(t) {\n      return (ɵNbNoDataRowOutletDirective_BaseFactory || (ɵNbNoDataRowOutletDirective_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(NbNoDataRowOutletDirective)))(t || NbNoDataRowOutletDirective);\n    };\n  }();\n\n  NbNoDataRowOutletDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NbNoDataRowOutletDirective,\n    selectors: [[\"\", \"nbNoDataRowOutlet\", \"\"]],\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: NoDataRowOutlet,\n      useExisting: NbNoDataRowOutletDirective\n    }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return NbNoDataRowOutletDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet NbCellOutletDirective = /*#__PURE__*/(() => {\n  class NbCellOutletDirective extends CdkCellOutlet {}\n\n  NbCellOutletDirective.ɵfac = /*@__PURE__*/function () {\n    let ɵNbCellOutletDirective_BaseFactory;\n    return function NbCellOutletDirective_Factory(t) {\n      return (ɵNbCellOutletDirective_BaseFactory || (ɵNbCellOutletDirective_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(NbCellOutletDirective)))(t || NbCellOutletDirective);\n    };\n  }();\n\n  NbCellOutletDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NbCellOutletDirective,\n    selectors: [[\"\", \"nbCellOutlet\", \"\"]],\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: CdkCellOutlet,\n      useExisting: NbCellOutletDirective\n    }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return NbCellOutletDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Header row definition for the nb-table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\n\n\nlet NbHeaderRowDefDirective = /*#__PURE__*/(() => {\n  class NbHeaderRowDefDirective extends CdkHeaderRowDef {}\n\n  NbHeaderRowDefDirective.ɵfac = /*@__PURE__*/function () {\n    let ɵNbHeaderRowDefDirective_BaseFactory;\n    return function NbHeaderRowDefDirective_Factory(t) {\n      return (ɵNbHeaderRowDefDirective_BaseFactory || (ɵNbHeaderRowDefDirective_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(NbHeaderRowDefDirective)))(t || NbHeaderRowDefDirective);\n    };\n  }();\n\n  NbHeaderRowDefDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NbHeaderRowDefDirective,\n    selectors: [[\"\", \"nbHeaderRowDef\", \"\"]],\n    inputs: {\n      columns: [\"nbHeaderRowDef\", \"columns\"],\n      sticky: [\"nbHeaderRowDefSticky\", \"sticky\"]\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: CdkHeaderRowDef,\n      useExisting: NbHeaderRowDefDirective\n    }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return NbHeaderRowDefDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Footer row definition for the nb-table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\n\n\nlet NbFooterRowDefDirective = /*#__PURE__*/(() => {\n  class NbFooterRowDefDirective extends CdkFooterRowDef {}\n\n  NbFooterRowDefDirective.ɵfac = /*@__PURE__*/function () {\n    let ɵNbFooterRowDefDirective_BaseFactory;\n    return function NbFooterRowDefDirective_Factory(t) {\n      return (ɵNbFooterRowDefDirective_BaseFactory || (ɵNbFooterRowDefDirective_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(NbFooterRowDefDirective)))(t || NbFooterRowDefDirective);\n    };\n  }();\n\n  NbFooterRowDefDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NbFooterRowDefDirective,\n    selectors: [[\"\", \"nbFooterRowDef\", \"\"]],\n    inputs: {\n      columns: [\"nbFooterRowDef\", \"columns\"],\n      sticky: [\"nbFooterRowDefSticky\", \"sticky\"]\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: CdkFooterRowDef,\n      useExisting: NbFooterRowDefDirective\n    }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return NbFooterRowDefDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Data row definition for the nb-table.\n * Captures the data row's template and other properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\n\n\nlet NbRowDefDirective = /*#__PURE__*/(() => {\n  class NbRowDefDirective extends CdkRowDef {}\n\n  NbRowDefDirective.ɵfac = /*@__PURE__*/function () {\n    let ɵNbRowDefDirective_BaseFactory;\n    return function NbRowDefDirective_Factory(t) {\n      return (ɵNbRowDefDirective_BaseFactory || (ɵNbRowDefDirective_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(NbRowDefDirective)))(t || NbRowDefDirective);\n    };\n  }();\n\n  NbRowDefDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NbRowDefDirective,\n    selectors: [[\"\", \"nbRowDef\", \"\"]],\n    inputs: {\n      columns: [\"nbRowDefColumns\", \"columns\"],\n      when: [\"nbRowDefWhen\", \"when\"]\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: CdkRowDef,\n      useExisting: NbRowDefDirective\n    }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return NbRowDefDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\n\n\nlet NbHeaderRowComponent = /*#__PURE__*/(() => {\n  class NbHeaderRowComponent extends CdkHeaderRow {}\n\n  NbHeaderRowComponent.ɵfac = /*@__PURE__*/function () {\n    let ɵNbHeaderRowComponent_BaseFactory;\n    return function NbHeaderRowComponent_Factory(t) {\n      return (ɵNbHeaderRowComponent_BaseFactory || (ɵNbHeaderRowComponent_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(NbHeaderRowComponent)))(t || NbHeaderRowComponent);\n    };\n  }();\n\n  NbHeaderRowComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbHeaderRowComponent,\n    selectors: [[\"nb-header-row\"], [\"tr\", \"nbHeaderRow\", \"\"]],\n    hostAttrs: [\"role\", \"row\", 1, \"nb-header-row\"],\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: CdkHeaderRow,\n      useExisting: NbHeaderRowComponent\n    }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 1,\n    vars: 0,\n    consts: [[\"nbCellOutlet\", \"\"]],\n    template: function NbHeaderRowComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n      }\n    },\n    directives: [NbCellOutletDirective],\n    encapsulation: 2\n  });\n  return NbHeaderRowComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\n\n\nlet NbFooterRowComponent = /*#__PURE__*/(() => {\n  class NbFooterRowComponent extends CdkFooterRow {}\n\n  NbFooterRowComponent.ɵfac = /*@__PURE__*/function () {\n    let ɵNbFooterRowComponent_BaseFactory;\n    return function NbFooterRowComponent_Factory(t) {\n      return (ɵNbFooterRowComponent_BaseFactory || (ɵNbFooterRowComponent_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(NbFooterRowComponent)))(t || NbFooterRowComponent);\n    };\n  }();\n\n  NbFooterRowComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbFooterRowComponent,\n    selectors: [[\"nb-footer-row\"], [\"tr\", \"nbFooterRow\", \"\"]],\n    hostAttrs: [\"role\", \"row\", 1, \"nb-footer-row\"],\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: CdkFooterRow,\n      useExisting: NbFooterRowComponent\n    }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 1,\n    vars: 0,\n    consts: [[\"nbCellOutlet\", \"\"]],\n    template: function NbFooterRowComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n      }\n    },\n    directives: [NbCellOutletDirective],\n    encapsulation: 2\n  });\n  return NbFooterRowComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\n\n\nlet NbRowComponent = /*#__PURE__*/(() => {\n  class NbRowComponent extends CdkRow {}\n\n  NbRowComponent.ɵfac = /*@__PURE__*/function () {\n    let ɵNbRowComponent_BaseFactory;\n    return function NbRowComponent_Factory(t) {\n      return (ɵNbRowComponent_BaseFactory || (ɵNbRowComponent_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(NbRowComponent)))(t || NbRowComponent);\n    };\n  }();\n\n  NbRowComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbRowComponent,\n    selectors: [[\"nb-row\"], [\"tr\", \"nbRow\", \"\"]],\n    hostAttrs: [\"role\", \"row\", 1, \"nb-row\"],\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: CdkRow,\n      useExisting: NbRowComponent\n    }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 1,\n    vars: 0,\n    consts: [[\"nbCellOutlet\", \"\"]],\n    template: function NbRowComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n      }\n    },\n    directives: [NbCellOutletDirective],\n    encapsulation: 2\n  });\n  return NbRowComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nconst NbCdkRowDef = CdkRowDef;\nconst NbCdkRow = CdkRow;\nconst NbCdkCellDef = CdkCellDef;\nconst NbCdkHeaderRowDef = CdkHeaderRowDef;\nconst NbCdkHeaderRow = CdkHeaderRow;\nconst NbCdkHeaderCellDef = CdkHeaderCellDef;\nconst NbCdkFooterRowDef = CdkFooterRowDef;\nconst NbCdkFooterRow = CdkFooterRow;\nconst NbCdkFooterCellDef = CdkFooterCellDef;\nconst NbCdkColumnDef = CdkColumnDef;\nconst NbCdkCell = CdkCell;\nconst NbCdkHeaderCell = CdkHeaderCell;\nconst NbCdkFooterCell = CdkFooterCell;\nconst NB_STICKY_POSITIONING_LISTENER = STICKY_POSITIONING_LISTENER;\nconst NB_TABLE_TEMPLATE = `\n  <ng-container nbHeaderRowOutlet></ng-container>\n  <ng-container nbRowOutlet></ng-container>\n  <ng-container nbNoDataRowOutlet></ng-container>\n  <ng-container nbFooterRowOutlet></ng-container>\n`;\nconst NB_VIEW_REPEATER_STRATEGY = _VIEW_REPEATER_STRATEGY;\nconst NB_COALESCED_STYLE_SCHEDULER = _COALESCED_STYLE_SCHEDULER;\nconst NB_TABLE_PROVIDERS = [{\n  provide: NB_VIEW_REPEATER_STRATEGY,\n  useClass: _DisposeViewRepeaterStrategy\n}, {\n  provide: NB_COALESCED_STYLE_SCHEDULER,\n  useClass: _CoalescedStyleScheduler\n}]; // tslint:disable-next-line:component-class-suffix\n\nlet NbTable = /*#__PURE__*/(() => {\n  class NbTable extends CdkTable {\n    constructor(differs, changeDetectorRef, elementRef, role, dir, document, platform, _viewRepeater, _coalescedStyleScheduler, _viewportRuler, _stickyPositioningListener) {\n      super(differs, changeDetectorRef, elementRef, role, dir, document, platform, _viewRepeater, _coalescedStyleScheduler, _viewportRuler, _stickyPositioningListener);\n      this._viewRepeater = _viewRepeater;\n      this._coalescedStyleScheduler = _coalescedStyleScheduler;\n      this._stickyPositioningListener = _stickyPositioningListener;\n    }\n\n  }\n\n  NbTable.ɵfac = function NbTable_Factory(t) {\n    return new (t || NbTable)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵinjectAttribute('role'), ɵngcc0.ɵɵdirectiveInject(NbDirectionality), ɵngcc0.ɵɵdirectiveInject(NB_DOCUMENT), ɵngcc0.ɵɵdirectiveInject(NbPlatform), ɵngcc0.ɵɵdirectiveInject(_VIEW_REPEATER_STRATEGY), ɵngcc0.ɵɵdirectiveInject(_COALESCED_STYLE_SCHEDULER), ɵngcc0.ɵɵdirectiveInject(NbViewportRulerAdapter), ɵngcc0.ɵɵdirectiveInject(NB_STICKY_POSITIONING_LISTENER, 12));\n  };\n\n  NbTable.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbTable,\n    selectors: [[\"nb-table-not-implemented\"]],\n    features: [ɵngcc0.ɵɵProvidersFeature(NB_TABLE_PROVIDERS), ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 0,\n    vars: 0,\n    template: function NbTable_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n  return NbTable;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nconst COMPONENTS$1 = [NbTable, // Template defs\nNbHeaderCellDefDirective, NbHeaderRowDefDirective, NbColumnDefDirective, NbCellDefDirective, NbRowDefDirective, NbFooterCellDefDirective, NbFooterRowDefDirective, // Outlets\nNbDataRowOutletDirective, NbHeaderRowOutletDirective, NbFooterRowOutletDirective, NbNoDataRowOutletDirective, NbCellOutletDirective, // Cell directives\nNbHeaderCellDirective, NbCellDirective, NbFooterCellDirective, // Row directives\nNbHeaderRowComponent, NbRowComponent, NbFooterRowComponent];\nlet NbTableModule = /*#__PURE__*/(() => {\n  class NbTableModule extends CdkTableModule {}\n\n  NbTableModule.ɵfac = /*@__PURE__*/function () {\n    let ɵNbTableModule_BaseFactory;\n    return function NbTableModule_Factory(t) {\n      return (ɵNbTableModule_BaseFactory || (ɵNbTableModule_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(NbTableModule)))(t || NbTableModule);\n    };\n  }();\n\n  NbTableModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NbTableModule\n  });\n  NbTableModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[NbBidiModule]]\n  });\n  return NbTableModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NbTableModule, {\n    declarations: [NbTable, NbHeaderCellDefDirective, NbHeaderRowDefDirective, NbColumnDefDirective, NbCellDefDirective, NbRowDefDirective, NbFooterCellDefDirective, NbFooterRowDefDirective, NbDataRowOutletDirective, NbHeaderRowOutletDirective, NbFooterRowOutletDirective, NbNoDataRowOutletDirective, NbCellOutletDirective, NbHeaderCellDirective, NbCellDirective, NbFooterCellDirective, NbHeaderRowComponent, NbRowComponent, NbFooterRowComponent],\n    imports: [NbBidiModule],\n    exports: [NbTable, NbHeaderCellDefDirective, NbHeaderRowDefDirective, NbColumnDefDirective, NbCellDefDirective, NbRowDefDirective, NbFooterCellDefDirective, NbFooterRowDefDirective, NbDataRowOutletDirective, NbHeaderRowOutletDirective, NbFooterRowOutletDirective, NbNoDataRowOutletDirective, NbCellOutletDirective, NbHeaderCellDirective, NbCellDirective, NbFooterCellDirective, NbHeaderRowComponent, NbRowComponent, NbFooterRowComponent]\n  });\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nconst NB_DIALOG_CONFIG = new InjectionToken('Default dialog options');\n/**\n * Describes all available options that may be passed to the NbDialogService.\n * */\n\nclass NbDialogConfig {\n  constructor(config) {\n    /**\n     * If true than overlay will render backdrop under a dialog.\n     * */\n    this.hasBackdrop = true;\n    /**\n     * Class that'll be assigned to the backdrop element.\n     * */\n\n    this.backdropClass = 'overlay-backdrop';\n    /**\n     * Class that'll be assigned to the dialog overlay.\n     * */\n\n    this.dialogClass = '';\n    /**\n     * If true then mouse clicks by backdrop will close a dialog.\n     * */\n\n    this.closeOnBackdropClick = true;\n    /**\n     * If true then escape press will close a dialog.\n     * */\n\n    this.closeOnEsc = true;\n    /**\n     * Disables scroll on content under dialog if true and does nothing otherwise.\n     * */\n\n    this.hasScroll = false;\n    /**\n     * Focuses dialog automatically after open if true.\n     * */\n\n    this.autoFocus = true;\n    Object.assign(this, config);\n  }\n\n}\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * The `NbDialogRef` helps to manipulate dialog after it was created.\n * The dialog can be dismissed by using `close` method of the dialogRef.\n * You can access rendered component as `content` property of the dialogRef.\n * `onBackdropClick` streams click events on the backdrop of the dialog.\n * */\n\n\nclass NbDialogRef {\n  constructor(overlayRef) {\n    this.overlayRef = overlayRef;\n    this.onClose$ = new Subject();\n    this.onClose = this.onClose$.asObservable();\n    this.onBackdropClick = this.overlayRef.backdropClick();\n  }\n  /**\n   * Hides dialog.\n   * */\n\n\n  close(res) {\n    this.overlayRef.detach();\n    this.overlayRef.dispose();\n    this.onClose$.next(res);\n    this.onClose$.complete();\n  }\n\n}\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * Container component for each dialog.\n * All the dialogs will be attached to it.\n * // TODO add animations\n * */\n\n\nlet NbDialogContainerComponent = /*#__PURE__*/(() => {\n  class NbDialogContainerComponent {\n    constructor(config, elementRef, focusTrapFactory) {\n      this.config = config;\n      this.elementRef = elementRef;\n      this.focusTrapFactory = focusTrapFactory;\n    }\n\n    ngOnInit() {\n      if (this.config.autoFocus) {\n        this.focusTrap = this.focusTrapFactory.create(this.elementRef.nativeElement);\n        this.focusTrap.blurPreviouslyFocusedElement();\n        this.focusTrap.focusInitialElement();\n      }\n    }\n\n    ngOnDestroy() {\n      if (this.config.autoFocus && this.focusTrap) {\n        this.focusTrap.restoreFocus();\n      }\n    }\n\n    attachComponentPortal(portal) {\n      return this.portalOutlet.attachComponentPortal(portal);\n    }\n\n    attachTemplatePortal(portal) {\n      return this.portalOutlet.attachTemplatePortal(portal);\n    }\n\n  }\n\n  NbDialogContainerComponent.ɵfac = function NbDialogContainerComponent_Factory(t) {\n    return new (t || NbDialogContainerComponent)(ɵngcc0.ɵɵdirectiveInject(NbDialogConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(NbFocusTrapFactoryService));\n  };\n\n  NbDialogContainerComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbDialogContainerComponent,\n    selectors: [[\"nb-dialog-container\"]],\n    viewQuery: function NbDialogContainerComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(NbPortalOutletDirective, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.portalOutlet = _t.first);\n      }\n    },\n    decls: 1,\n    vars: 0,\n    consts: [[\"nbPortalOutlet\", \"\"]],\n    template: function NbDialogContainerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, NbDialogContainerComponent_ng_template_0_Template, 0, 0, \"ng-template\", 0);\n      }\n    },\n    directives: [NbPortalOutletDirective],\n    encapsulation: 2\n  });\n  return NbDialogContainerComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * The `NbDialogService` helps to open dialogs.\n *\n * @stacked-example(Showcase, dialog/dialog-showcase.component)\n *\n * A new dialog is opened by calling the `open` method with a component to be loaded and an optional configuration.\n * `open` method will return `NbDialogRef` that can be used for the further manipulations.\n *\n * ### Installation\n *\n * Import `NbDialogModule.forRoot()` to your app module.\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbDialogModule.forRoot(config),\n *   ],\n * })\n * export class AppModule { }\n * ```\n *\n * If you are using it in a lazy loaded module than you have to install it with `NbDialogModule.forChild()`:\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbDialogModule.forChild(config),\n *   ],\n * })\n * export class LazyLoadedModule { }\n * ```\n *\n * ### Usage\n *\n * ```ts\n * const dialogRef = this.dialogService.open(MyDialogComponent, { ... });\n * ```\n *\n * `NbDialogRef` gives capability access reference to the rendered dialog component,\n * destroy dialog and some other options described below.\n *\n * Also, you can inject `NbDialogRef` in dialog component.\n *\n * ```ts\n * this.dialogService.open(MyDialogComponent, { ... });\n *\n * // my-dialog.component.ts\n * constructor(protected dialogRef: NbDialogRef) {\n * }\n *\n * close() {\n *   this.dialogRef.close();\n * }\n * ```\n *\n * Instead of component you can create dialog from TemplateRef:\n *\n * @stacked-example(Template ref, dialog/dialog-template.component)\n *\n * The dialog may return result through `NbDialogRef`. Calling component can receive this result with `onClose`\n * stream of `NbDialogRef`.\n *\n * @stacked-example(Result, dialog/dialog-result.component)\n *\n * ### Configuration\n *\n * As we mentioned above, `open` method of the `NbDialogService` may receive optional configuration options.\n * Also, you can provide global dialogs configuration through `NbDialogModule.forRoot({ ... })`.\n *\n * This config may contain the following:\n *\n * `context` - both, template and component may receive data through `config.context` property.\n * For components, this data will be assigned through inputs.\n * For templates, you can access it inside template as $implicit.\n *\n * ```ts\n * this.dialogService.open(template, { context: 'pass data in template' });\n * ```\n *\n * ```html\n * <ng-template let-some-additional-data>\n *   {{ some-additional-data }}\n * <ng-template/>\n * ```\n *\n * `hasBackdrop` - determines is service have to render backdrop under the dialog.\n * Default is true.\n * @stacked-example(Backdrop, dialog/dialog-has-backdrop.component)\n *\n * `closeOnBackdropClick` - close dialog on backdrop click if true.\n * Default is true.\n * @stacked-example(Backdrop click, dialog/dialog-backdrop-click.component)\n *\n * `closeOnEsc` - close dialog on escape button on the keyboard.\n * Default is true.\n * @stacked-example(Escape hit, dialog/dialog-esc.component)\n *\n * `hasScroll` - Disables scroll on content under dialog if true and does nothing otherwise.\n * Default is false.\n * Please, open dialogs in the separate window and try to scroll.\n * @stacked-example(Scroll, dialog/dialog-scroll.component)\n *\n * `autoFocus` - Focuses dialog automatically after open if true. It's useful to prevent misclicks on\n * trigger elements and opening multiple dialogs.\n * Default is true.\n *\n * As you can see, if you open dialog with auto focus dialog will focus first focusable element\n * or just blur previously focused automatically.\n * Otherwise, without auto focus, the focus will stay on the previously focused element.\n * Please, open dialogs in the separate window and try to click on the button without focus\n * and then hit space any times. Multiple same dialogs will be opened.\n * @stacked-example(Auto focus, dialog/dialog-auto-focus.component)\n * */\n\n\nlet NbDialogService = /*#__PURE__*/(() => {\n  class NbDialogService {\n    constructor(document, globalConfig, positionBuilder, overlay, injector, cfr) {\n      this.document = document;\n      this.globalConfig = globalConfig;\n      this.positionBuilder = positionBuilder;\n      this.overlay = overlay;\n      this.injector = injector;\n      this.cfr = cfr;\n    }\n    /**\n     * Opens new instance of the dialog, may receive optional config.\n     * */\n\n\n    open(content, userConfig = {}) {\n      const config = new NbDialogConfig(Object.assign(Object.assign({}, this.globalConfig), userConfig));\n      const overlayRef = this.createOverlay(config);\n      const dialogRef = new NbDialogRef(overlayRef);\n      const container = this.createContainer(config, overlayRef);\n      this.createContent(config, content, container, dialogRef);\n      this.registerCloseListeners(config, overlayRef, dialogRef);\n      return dialogRef;\n    }\n\n    createOverlay(config) {\n      const positionStrategy = this.createPositionStrategy();\n      const scrollStrategy = this.createScrollStrategy(config.hasScroll);\n      return this.overlay.create({\n        positionStrategy,\n        scrollStrategy,\n        hasBackdrop: config.hasBackdrop,\n        backdropClass: config.backdropClass,\n        panelClass: config.dialogClass\n      });\n    }\n\n    createPositionStrategy() {\n      return this.positionBuilder.global().centerVertically().centerHorizontally();\n    }\n\n    createScrollStrategy(hasScroll) {\n      if (hasScroll) {\n        return this.overlay.scrollStrategies.noop();\n      } else {\n        return this.overlay.scrollStrategies.block();\n      }\n    }\n\n    createContainer(config, overlayRef) {\n      const injector = new NbPortalInjector(this.createInjector(config), new WeakMap([[NbDialogConfig, config]]));\n      const containerPortal = new NbComponentPortal(NbDialogContainerComponent, null, injector, this.cfr);\n      const containerRef = overlayRef.attach(containerPortal);\n      return containerRef.instance;\n    }\n\n    createContent(config, content, container, dialogRef) {\n      if (content instanceof TemplateRef) {\n        const portal = this.createTemplatePortal(config, content, dialogRef);\n        container.attachTemplatePortal(portal);\n      } else {\n        const portal = this.createComponentPortal(config, content, dialogRef);\n        dialogRef.componentRef = container.attachComponentPortal(portal);\n\n        if (config.context) {\n          Object.assign(dialogRef.componentRef.instance, Object.assign({}, config.context));\n        }\n      }\n    }\n\n    createTemplatePortal(config, content, dialogRef) {\n      return new NbTemplatePortal(content, null, {\n        $implicit: config.context,\n        dialogRef\n      });\n    }\n    /**\n     * We're creating portal with custom injector provided through config or using global injector.\n     * This approach provides us capability inject `NbDialogRef` in dialog component.\n     * */\n\n\n    createComponentPortal(config, content, dialogRef) {\n      const injector = this.createInjector(config);\n      const portalInjector = new NbPortalInjector(injector, new WeakMap([[NbDialogRef, dialogRef]]));\n      return new NbComponentPortal(content, config.viewContainerRef, portalInjector);\n    }\n\n    createInjector(config) {\n      return config.viewContainerRef && config.viewContainerRef.injector || this.injector;\n    }\n\n    registerCloseListeners(config, overlayRef, dialogRef) {\n      if (config.closeOnBackdropClick) {\n        overlayRef.backdropClick().subscribe(() => dialogRef.close());\n      }\n\n      if (config.closeOnEsc) {\n        fromEvent(this.document, 'keyup').pipe(filter(event => event.keyCode === 27), takeUntil(dialogRef.onClose)).subscribe(() => dialogRef.close());\n      }\n    }\n\n  }\n\n  NbDialogService.ɵfac = function NbDialogService_Factory(t) {\n    return new (t || NbDialogService)(ɵngcc0.ɵɵinject(NB_DOCUMENT), ɵngcc0.ɵɵinject(NB_DIALOG_CONFIG), ɵngcc0.ɵɵinject(NbPositionBuilderService), ɵngcc0.ɵɵinject(NbOverlayService), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(ɵngcc0.ComponentFactoryResolver));\n  };\n\n  NbDialogService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: NbDialogService,\n    factory: NbDialogService.ɵfac\n  });\n  return NbDialogService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nlet NbDialogModule = /*#__PURE__*/(() => {\n  class NbDialogModule {\n    static forRoot(dialogConfig = {}) {\n      return {\n        ngModule: NbDialogModule,\n        providers: [NbDialogService, {\n          provide: NB_DIALOG_CONFIG,\n          useValue: dialogConfig\n        }]\n      };\n    }\n\n    static forChild(dialogConfig = {}) {\n      return {\n        ngModule: NbDialogModule,\n        providers: [NbDialogService, {\n          provide: NB_DIALOG_CONFIG,\n          useValue: dialogConfig\n        }]\n      };\n    }\n\n  }\n\n  NbDialogModule.ɵfac = function NbDialogModule_Factory(t) {\n    return new (t || NbDialogModule)();\n  };\n\n  NbDialogModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NbDialogModule\n  });\n  NbDialogModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[NbSharedModule, NbOverlayModule]]\n  });\n  return NbDialogModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NbDialogModule, {\n    declarations: [NbDialogContainerComponent],\n    imports: [NbSharedModule, NbOverlayModule]\n  });\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * The `NbToastComponent` is responsible for rendering each toast with appropriate styles.\n *\n * @styles\n *\n * toastr-border-style:\n * toastr-border-width:\n * toastr-border-radius:\n * toastr-padding:\n * toastr-shadow:\n * toastr-text-font-family:\n * toastr-text-font-size:\n * toastr-text-font-weight:\n * toastr-text-line-height:\n * toastr-title-text-font-family:\n * toastr-title-text-font-size:\n * toastr-title-text-font-weight:\n * toastr-title-text-line-height:\n * toastr-basic-background-color:\n * toastr-basic-border-color:\n * toastr-basic-text-color:\n * toastr-icon-basic-background-color:\n * toastr-icon-basic-color:\n * toastr-destroyable-basic-hover-background-color:\n * toastr-destroyable-basic-hover-border-color:\n * toastr-primary-background-color:\n * toastr-primary-border-color:\n * toastr-primary-text-color:\n * toastr-icon-primary-background-color:\n * toastr-icon-primary-color:\n * toastr-destroyable-primary-hover-background-color:\n * toastr-destroyable-primary-hover-border-color:\n * toastr-success-background-color:\n * toastr-success-border-color:\n * toastr-success-text-color:\n * toastr-icon-success-background-color:\n * toastr-icon-success-color:\n * toastr-destroyable-success-hover-background-color:\n * toastr-destroyable-success-hover-border-color:\n * toastr-info-background-color:\n * toastr-info-border-color:\n * toastr-info-text-color:\n * toastr-icon-info-background-color:\n * toastr-icon-info-color:\n * toastr-destroyable-info-hover-background-color:\n * toastr-destroyable-info-hover-border-color:\n * toastr-warning-background-color:\n * toastr-warning-border-color:\n * toastr-warning-text-color:\n * toastr-icon-warning-background-color:\n * toastr-icon-warning-color:\n * toastr-destroyable-warning-hover-background-color:\n * toastr-destroyable-warning-hover-border-color:\n * toastr-danger-background-color:\n * toastr-danger-border-color:\n * toastr-danger-text-color:\n * toastr-icon-danger-background-color:\n * toastr-icon-danger-color:\n * toastr-destroyable-danger-hover-background-color:\n * toastr-destroyable-danger-hover-border-color:\n * toastr-control-background-color:\n * toastr-control-border-color:\n * toastr-control-text-color:\n * toastr-icon-control-background-color:\n * toastr-icon-control-color:\n * toastr-destroyable-control-hover-background-color:\n * toastr-destroyable-control-hover-border-color:\n * */\n\n\nlet NbToastComponent = /*#__PURE__*/(() => {\n  class NbToastComponent {\n    constructor(renderer, elementRef, statusService) {\n      this.renderer = renderer;\n      this.elementRef = elementRef;\n      this.statusService = statusService;\n      this.destroy = new EventEmitter();\n    }\n\n    get success() {\n      return this.toast.config.status === 'success';\n    }\n\n    get info() {\n      return this.toast.config.status === 'info';\n    }\n\n    get warning() {\n      return this.toast.config.status === 'warning';\n    }\n\n    get primary() {\n      return this.toast.config.status === 'primary';\n    }\n\n    get danger() {\n      return this.toast.config.status === 'danger';\n    }\n\n    get basic() {\n      return this.toast.config.status === 'basic';\n    }\n\n    get control() {\n      return this.toast.config.status === 'control';\n    }\n\n    get destroyByClick() {\n      return this.toast.config.destroyByClick;\n    }\n\n    get hasIcon() {\n      const {\n        icon\n      } = this.toast.config;\n\n      if (typeof icon === 'string') {\n        return true;\n      }\n\n      return !!(icon && icon.icon);\n    }\n\n    get customIcon() {\n      return !!this.icon;\n    }\n\n    get icon() {\n      return this.toast.config.icon;\n    }\n\n    get additionalClasses() {\n      if (this.statusService.isCustomStatus(this.toast.config.status)) {\n        return [this.statusService.getStatusClass(this.toast.config.status)];\n      }\n\n      return [];\n    }\n\n    onClick() {\n      this.destroy.emit();\n    }\n\n    ngOnInit() {\n      if (this.toast.config.toastClass) {\n        this.renderer.addClass(this.elementRef.nativeElement, this.toast.config.toastClass);\n      }\n    }\n\n  }\n\n  NbToastComponent.ɵfac = function NbToastComponent_Factory(t) {\n    return new (t || NbToastComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(NbStatusService));\n  };\n\n  NbToastComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbToastComponent,\n    selectors: [[\"nb-toast\"]],\n    hostVars: 22,\n    hostBindings: function NbToastComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function NbToastComponent_click_HostBindingHandler() {\n          return ctx.onClick();\n        });\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassMap(ctx.additionalClasses);\n        ɵngcc0.ɵɵclassProp(\"status-success\", ctx.success)(\"status-info\", ctx.info)(\"status-warning\", ctx.warning)(\"status-primary\", ctx.primary)(\"status-danger\", ctx.danger)(\"status-basic\", ctx.basic)(\"status-control\", ctx.control)(\"destroy-by-click\", ctx.destroyByClick)(\"has-icon\", ctx.hasIcon)(\"custom-icon\", ctx.customIcon);\n      }\n    },\n    inputs: {\n      toast: \"toast\"\n    },\n    outputs: {\n      destroy: \"destroy\"\n    },\n    decls: 6,\n    vars: 3,\n    consts: [[\"class\", \"icon-container\", 4, \"ngIf\"], [1, \"content-container\"], [1, \"title\", \"subtitle\"], [1, \"message\"], [1, \"icon-container\"], [3, \"config\"]],\n    template: function NbToastComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, NbToastComponent_div_0_Template, 2, 1, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"span\", 2);\n        ɵngcc0.ɵɵtext(3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(4, \"div\", 3);\n        ɵngcc0.ɵɵtext(5);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasIcon && ctx.icon);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵtextInterpolate(ctx.toast.title);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵtextInterpolate(ctx.toast.message);\n      }\n    },\n    directives: [ɵngcc2.NgIf, NbIconComponent],\n    styles: [\"[_nghost-%COMP%]{display:flex;align-items:center;width:25rem;margin:0.5rem}[_nghost-%COMP%]   .title[_ngcontent-%COMP%]{margin-right:0.25rem}.default[_nghost-%COMP%]   .content-container[_ngcontent-%COMP%], [_nghost-%COMP%]:not(.has-icon)   .content-container[_ngcontent-%COMP%]{display:flex;flex-direction:row}.destroy-by-click[_nghost-%COMP%]{cursor:pointer}[_nghost-%COMP%]   nb-icon[_ngcontent-%COMP%]{font-size:2.5rem}[_nghost-%COMP%]   svg[_ngcontent-%COMP%]{width:2.5rem;height:2.5rem}\"]\n  });\n  return NbToastComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nconst voidState = style({\n  transform: 'translateX({{ direction }}110%)',\n  height: 0,\n  marginLeft: '0',\n  marginRight: '0',\n  marginTop: '0',\n  marginBottom: '0'\n});\nconst defaultOptions = {\n  params: {\n    direction: ''\n  }\n};\nlet NbToastrContainerComponent = /*#__PURE__*/(() => {\n  class NbToastrContainerComponent {\n    constructor(layoutDirection, positionHelper) {\n      this.layoutDirection = layoutDirection;\n      this.positionHelper = positionHelper;\n      this.destroy$ = new Subject();\n      this.content = [];\n    }\n\n    ngOnInit() {\n      this.layoutDirection.onDirectionChange().pipe(takeUntil(this.destroy$)).subscribe(() => this.onDirectionChange());\n    }\n\n    ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n\n    onDirectionChange() {\n      const direction = this.positionHelper.isRightPosition(this.position) ? '' : '-';\n      this.fadeIn = {\n        value: '',\n        params: {\n          direction\n        }\n      };\n    }\n\n  }\n\n  NbToastrContainerComponent.ɵfac = function NbToastrContainerComponent_Factory(t) {\n    return new (t || NbToastrContainerComponent)(ɵngcc0.ɵɵdirectiveInject(NbLayoutDirectionService), ɵngcc0.ɵɵdirectiveInject(NbPositionHelper));\n  };\n\n  NbToastrContainerComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbToastrContainerComponent,\n    selectors: [[\"nb-toastr-container\"]],\n    viewQuery: function NbToastrContainerComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(NbToastComponent, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.toasts = _t);\n      }\n    },\n    inputs: {\n      content: \"content\",\n      context: \"context\",\n      position: \"position\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[3, \"toast\", 4, \"ngFor\", \"ngForOf\"], [3, \"toast\"]],\n    template: function NbToastrContainerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, NbToastrContainerComponent_nb_toast_0_Template, 1, 2, \"nb-toast\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.content);\n      }\n    },\n    directives: [ɵngcc2.NgForOf, NbToastComponent],\n    encapsulation: 2,\n    data: {\n      animation: [trigger('fadeIn', [transition(':enter', [voidState, animate(100)], defaultOptions), transition(':leave', [animate(100, voidState)], defaultOptions)])]\n    }\n  });\n  return NbToastrContainerComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nconst NB_TOASTR_CONFIG = new InjectionToken('Default toastr options');\n/**\n * The `NbToastrConfig` class describes configuration of the `NbToastrService.show` and global toastr configuration.\n * */\n\nclass NbToastrConfig {\n  constructor(config) {\n    /**\n     * Determines where on the screen toast have to be rendered.\n     * */\n    this.position = NbGlobalLogicalPosition.TOP_END;\n    /**\n     * Status chooses color scheme for the toast.\n     * */\n\n    this.status = 'basic';\n    /**\n     * Duration is timeout between toast appears and disappears.\n     * */\n\n    this.duration = 3000;\n    /**\n     * Destroy by click means you can hide the toast by clicking it.\n     * */\n\n    this.destroyByClick = true;\n    /**\n     * If preventDuplicates is true then the toast with the same title, message and status will not be rendered.\n     * Find duplicates behaviour determined by `preventDuplicates`.\n     * The default `previous` duplicate behaviour is used.\n     * */\n\n    this.preventDuplicates = false;\n    /**\n     * Determines the how to treat duplicates.\n     * */\n\n    this.duplicatesBehaviour = 'previous';\n    /*\n    * The number of visible toasts. If the limit exceeded the oldest toast will be removed.\n    * */\n\n    this.limit = null;\n    /**\n     * Class to be applied to the toast.\n     */\n\n    this.toastClass = '';\n    /**\n     * Determines render icon or not.\n     * */\n\n    this.hasIcon = true;\n    /**\n     * Icon name or icon config object that can be provided to render custom icon.\n     * */\n\n    this.icon = 'email';\n    /**\n     * Toast status icon-class mapping.\n     * */\n\n    this.icons = {\n      danger: 'flash-outline',\n      success: 'checkmark-outline',\n      info: 'question-mark-outline',\n      warning: 'alert-triangle-outline',\n      primary: 'email-outline',\n      control: 'email-outline',\n      basic: 'email-outline'\n    };\n    this.patchIcon(config);\n    Object.assign(this, config);\n  }\n\n  patchIcon(config) {\n    if (!('icon' in config)) {\n      config.icon = {\n        icon: this.icons[config.status] || this.icons.basic,\n        pack: 'nebular-essentials'\n      };\n    }\n  }\n\n}\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nclass NbToastRef {\n  constructor(toastContainer, toast) {\n    this.toastContainer = toastContainer;\n    this.toast = toast;\n  }\n\n  close() {\n    this.toastContainer.destroy(this.toast);\n  }\n\n}\n\nclass NbToastContainer {\n  constructor(position, containerRef, positionHelper) {\n    this.position = position;\n    this.containerRef = containerRef;\n    this.positionHelper = positionHelper;\n    this.toasts = [];\n\n    this.toastDuplicateCompareFunc = (t1, t2) => {\n      return t1.message === t2.message && t1.title === t2.title && t1.config.status === t2.config.status;\n    };\n  }\n\n  get nativeElement() {\n    return this.containerRef.location.nativeElement;\n  }\n\n  attach(toast) {\n    if (toast.config.preventDuplicates && this.isDuplicate(toast)) {\n      return;\n    }\n\n    this.removeToastIfLimitReached(toast);\n    const toastComponent = this.attachToast(toast);\n\n    if (toast.config.destroyByClick) {\n      this.subscribeOnClick(toastComponent, toast);\n    }\n\n    if (toast.config.duration) {\n      this.setDestroyTimeout(toast);\n    }\n\n    this.prevToast = toast;\n    return new NbToastRef(this, toast);\n  }\n\n  destroy(toast) {\n    if (this.prevToast === toast) {\n      this.prevToast = null;\n    }\n\n    this.toasts = this.toasts.filter(t => t !== toast);\n    this.updateContainer();\n  }\n\n  isDuplicate(toast) {\n    return toast.config.duplicatesBehaviour === 'previous' ? this.isDuplicatePrevious(toast) : this.isDuplicateAmongAll(toast);\n  }\n\n  isDuplicatePrevious(toast) {\n    return this.prevToast && this.toastDuplicateCompareFunc(this.prevToast, toast);\n  }\n\n  isDuplicateAmongAll(toast) {\n    return this.toasts.some(t => this.toastDuplicateCompareFunc(t, toast));\n  }\n\n  removeToastIfLimitReached(toast) {\n    if (!toast.config.limit || this.toasts.length < toast.config.limit) {\n      return;\n    }\n\n    if (this.positionHelper.isTopPosition(toast.config.position)) {\n      this.toasts.pop();\n    } else {\n      this.toasts.shift();\n    }\n  }\n\n  attachToast(toast) {\n    if (this.positionHelper.isTopPosition(toast.config.position)) {\n      return this.attachToTop(toast);\n    } else {\n      return this.attachToBottom(toast);\n    }\n  }\n\n  attachToTop(toast) {\n    this.toasts.unshift(toast);\n    this.updateContainer();\n    return this.containerRef.instance.toasts.first;\n  }\n\n  attachToBottom(toast) {\n    this.toasts.push(toast);\n    this.updateContainer();\n    return this.containerRef.instance.toasts.last;\n  }\n\n  setDestroyTimeout(toast) {\n    setTimeout(() => this.destroy(toast), toast.config.duration);\n  }\n\n  subscribeOnClick(toastComponent, toast) {\n    toastComponent.destroy.subscribe(() => this.destroy(toast));\n  }\n\n  updateContainer() {\n    patch(this.containerRef, {\n      content: this.toasts,\n      position: this.position\n    });\n  }\n\n}\n\nlet NbToastrContainerRegistry = /*#__PURE__*/(() => {\n  class NbToastrContainerRegistry {\n    constructor(overlay, positionBuilder, positionHelper, cfr, document) {\n      this.overlay = overlay;\n      this.positionBuilder = positionBuilder;\n      this.positionHelper = positionHelper;\n      this.cfr = cfr;\n      this.document = document;\n      this.overlays = new Map();\n    }\n\n    get(position) {\n      const logicalPosition = this.positionHelper.toLogicalPosition(position);\n      const overlayWithContainer = this.overlays.get(logicalPosition);\n\n      if (!overlayWithContainer || !this.existsInDom(overlayWithContainer.toastrContainer)) {\n        if (overlayWithContainer) {\n          overlayWithContainer.overlayRef.dispose();\n        }\n\n        this.instantiateContainer(logicalPosition);\n      }\n\n      return this.overlays.get(logicalPosition).toastrContainer;\n    }\n\n    instantiateContainer(position) {\n      const toastrOverlayWithContainer = this.createContainer(position);\n      this.overlays.set(position, toastrOverlayWithContainer);\n    }\n\n    createContainer(position) {\n      const positionStrategy = this.positionBuilder.global().position(position);\n      const ref = this.overlay.create({\n        positionStrategy\n      });\n      this.addClassToOverlayHost(ref);\n      const containerRef = ref.attach(new NbComponentPortal(NbToastrContainerComponent, null, null, this.cfr));\n      return {\n        overlayRef: ref,\n        toastrContainer: new NbToastContainer(position, containerRef, this.positionHelper)\n      };\n    }\n\n    addClassToOverlayHost(overlayRef) {\n      overlayRef.hostElement.classList.add('toastr-overlay-container');\n    }\n\n    existsInDom(toastContainer) {\n      return this.document.body.contains(toastContainer.nativeElement);\n    }\n\n  }\n\n  NbToastrContainerRegistry.ɵfac = function NbToastrContainerRegistry_Factory(t) {\n    return new (t || NbToastrContainerRegistry)(ɵngcc0.ɵɵinject(NbOverlayService), ɵngcc0.ɵɵinject(NbPositionBuilderService), ɵngcc0.ɵɵinject(NbPositionHelper), ɵngcc0.ɵɵinject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵinject(NB_DOCUMENT));\n  };\n\n  NbToastrContainerRegistry.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: NbToastrContainerRegistry,\n    factory: NbToastrContainerRegistry.ɵfac\n  });\n  return NbToastrContainerRegistry;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * The `NbToastrService` provides a capability to build toast notifications.\n *\n * @stacked-example(Showcase, toastr/toastr-showcase.component)\n *\n * `NbToastrService.show(message, title, config)` accepts three params, title and config are optional.\n *\n * ### Installation\n *\n * Import `NbToastrModule.forRoot()` to your app module.\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbToastrModule.forRoot(config),\n *   ],\n * })\n * export class AppModule { }\n * ```\n *\n * ### Usage\n *\n * Calling `NbToastrService.show(...)` will render new toast and return `NbToastrRef` with\n * help of which you may close newly created toast by calling `close` method.\n *\n * ```ts\n * const toastRef: NbToastRef = this.toastrService.show(...);\n * toastRef.close();\n * ```\n *\n * Config accepts following options:\n *\n * `position` - determines where on the screen toast will be rendered.\n * Default is `top-end`.\n *\n * @stacked-example(Position, toastr/toastr-positions.component)\n *\n * `status` - coloring and icon of the toast.\n * Default is `basic`.\n *\n * @stacked-example(Status, toastr/toastr-statuses.component)\n *\n * `duration` - the time after which the toast will be destroyed.\n * `0` means endless toast, that may be destroyed by click only.\n * Default is 3000 ms.\n *\n * @stacked-example(Duration, toastr/toastr-duration.component)\n *\n * `destroyByClick` - provides a capability to destroy toast by click.\n * Default is true.\n *\n * @stacked-example(Destroy by click, toastr/toastr-destroy-by-click.component)\n *\n * `preventDuplicates` - don't create new toast if it has the same title, message and status.\n * Default is false.\n *\n * @stacked-example(Prevent duplicates, toastr/toastr-prevent-duplicates.component)\n *\n * `duplicatesBehaviour` - determines how to treat the toasts duplication.\n * Compare with the previous message `previous`\n * or with all visible messages `all`.\n *\n * @stacked-example(Prevent duplicates behaviour , toastr/toastr-prevent-duplicates-behaviour.component)\n *\n * `limit` - the number of visible toasts in the toast container. The number of toasts is unlimited by default.\n *\n * @stacked-example(Prevent duplicates behaviour , toastr/toastr-limit.component)\n *\n * `hasIcon` - if true then render toast icon.\n * `icon` - you can pass icon class that will be applied into the toast.\n *\n * @stacked-example(Has icon, toastr/toastr-icon.component)\n * */\n\n\nlet NbToastrService = /*#__PURE__*/(() => {\n  class NbToastrService {\n    constructor(globalConfig, containerRegistry) {\n      this.globalConfig = globalConfig;\n      this.containerRegistry = containerRegistry;\n    }\n    /**\n     * Shows toast with message, title and user config.\n     * */\n\n\n    show(message, title, userConfig) {\n      const config = new NbToastrConfig(Object.assign(Object.assign({}, this.globalConfig), userConfig));\n      const container = this.containerRegistry.get(config.position);\n      const toast = {\n        message,\n        title,\n        config\n      };\n      return container.attach(toast);\n    }\n    /**\n     * Shows success toast with message, title and user config.\n     * */\n\n\n    success(message, title, config) {\n      return this.show(message, title, Object.assign(Object.assign({}, config), {\n        status: 'success'\n      }));\n    }\n    /**\n     * Shows info toast with message, title and user config.\n     * */\n\n\n    info(message, title, config) {\n      return this.show(message, title, Object.assign(Object.assign({}, config), {\n        status: 'info'\n      }));\n    }\n    /**\n     * Shows warning toast with message, title and user config.\n     * */\n\n\n    warning(message, title, config) {\n      return this.show(message, title, Object.assign(Object.assign({}, config), {\n        status: 'warning'\n      }));\n    }\n    /**\n     * Shows primary toast with message, title and user config.\n     * */\n\n\n    primary(message, title, config) {\n      return this.show(message, title, Object.assign(Object.assign({}, config), {\n        status: 'primary'\n      }));\n    }\n    /**\n     * Shows danger toast with message, title and user config.\n     * */\n\n\n    danger(message, title, config) {\n      return this.show(message, title, Object.assign(Object.assign({}, config), {\n        status: 'danger'\n      }));\n    }\n    /**\n     * Shows default toast with message, title and user config.\n     * */\n\n\n    default(message, title, config) {\n      return this.show(message, title, Object.assign(Object.assign({}, config), {\n        status: 'basic'\n      }));\n    }\n    /**\n     * Shows control toast with message, title and user config.\n     * */\n\n\n    control(message, title, config) {\n      return this.default(message, title, Object.assign(Object.assign({}, config), {\n        status: 'control'\n      }));\n    }\n\n  }\n\n  NbToastrService.ɵfac = function NbToastrService_Factory(t) {\n    return new (t || NbToastrService)(ɵngcc0.ɵɵinject(NB_TOASTR_CONFIG), ɵngcc0.ɵɵinject(NbToastrContainerRegistry));\n  };\n\n  NbToastrService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: NbToastrService,\n    factory: NbToastrService.ɵfac\n  });\n  return NbToastrService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nlet NbToastrModule = /*#__PURE__*/(() => {\n  class NbToastrModule {\n    static forRoot(toastrConfig = {}) {\n      return {\n        ngModule: NbToastrModule,\n        providers: [NbToastrService, NbToastrContainerRegistry, {\n          provide: NB_TOASTR_CONFIG,\n          useValue: toastrConfig\n        }]\n      };\n    }\n\n  }\n\n  NbToastrModule.ɵfac = function NbToastrModule_Factory(t) {\n    return new (t || NbToastrModule)();\n  };\n\n  NbToastrModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NbToastrModule\n  });\n  NbToastrModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[NbSharedModule, NbOverlayModule, NbIconModule]]\n  });\n  return NbToastrModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NbToastrModule, {\n    declarations: [NbToastrContainerComponent, NbToastComponent],\n    imports: [NbSharedModule, NbOverlayModule, NbIconModule]\n  });\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nclass NbToast {}\n/*\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * Tooltip container.\n * Renders provided tooltip inside.\n *\n * @styles\n *\n * tooltip-background-color:\n * tooltip-border-color:\n * tooltip-border-style:\n * tooltip-border-width:\n * tooltip-border-radius:\n * tooltip-padding:\n * tooltip-text-color:\n * tooltip-text-font-family:\n * tooltip-text-font-size:\n * tooltip-text-font-weight:\n * tooltip-text-line-height:\n * tooltip-icon-height:\n * tooltip-icon-width:\n * tooltip-max-width:\n * tooltip-basic-background-color:\n * tooltip-basic-border-color:\n * tooltip-basic-text-color:\n * tooltip-primary-background-color:\n * tooltip-primary-border-color:\n * tooltip-primary-text-color:\n * tooltip-info-background-color:\n * tooltip-info-border-color:\n * tooltip-info-text-color:\n * tooltip-success-background-color:\n * tooltip-success-border-color:\n * tooltip-success-text-color:\n * tooltip-warning-background-color:\n * tooltip-warning-border-color:\n * tooltip-warning-text-color:\n * tooltip-danger-background-color:\n * tooltip-danger-border-color:\n * tooltip-danger-text-color:\n * tooltip-control-background-color:\n * tooltip-control-border-color:\n * tooltip-control-text-color:\n * tooltip-shadow:\n */\n\n\nlet NbTooltipComponent = /*#__PURE__*/(() => {\n  class NbTooltipComponent {\n    constructor(statusService) {\n      this.statusService = statusService;\n      /**\n       * Popover position relatively host element.\n       * */\n\n      this.position = NbPosition.TOP;\n      this.context = {};\n    }\n\n    get binding() {\n      return `${this.position} ${this.statusClass}`;\n    }\n\n    get show() {\n      return true;\n    }\n\n    get statusClass() {\n      if (this.context.status) {\n        return this.statusService.getStatusClass(this.context.status);\n      }\n\n      return '';\n    }\n    /**\n     * The method is empty since we don't need to do anything additionally\n     * render is handled by change detection\n     */\n\n\n    renderContent() {}\n\n  }\n\n  NbTooltipComponent.ɵfac = function NbTooltipComponent_Factory(t) {\n    return new (t || NbTooltipComponent)(ɵngcc0.ɵɵdirectiveInject(NbStatusService));\n  };\n\n  NbTooltipComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbTooltipComponent,\n    selectors: [[\"nb-tooltip\"]],\n    hostVars: 3,\n    hostBindings: function NbTooltipComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵsyntheticHostProperty(\"@showTooltip\", ctx.show);\n        ɵngcc0.ɵɵclassMap(ctx.binding);\n      }\n    },\n    inputs: {\n      position: \"position\",\n      context: \"context\",\n      content: \"content\"\n    },\n    decls: 4,\n    vars: 2,\n    consts: [[1, \"arrow\"], [1, \"content\"], [3, \"config\", 4, \"ngIf\"], [4, \"ngIf\"], [3, \"config\"]],\n    template: function NbTooltipComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"span\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, NbTooltipComponent_nb_icon_2_Template, 1, 1, \"nb-icon\", 2);\n        ɵngcc0.ɵɵtemplate(3, NbTooltipComponent_span_3_Template, 2, 1, \"span\", 3);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.context == null ? null : ctx.context.icon);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.content);\n      }\n    },\n    directives: [ɵngcc2.NgIf, NbIconComponent],\n    styles: [\"[_nghost-%COMP%]{z-index:10000}[_nghost-%COMP%]   .content[_ngcontent-%COMP%]{display:flex;align-items:center}.right[_nghost-%COMP%]   .content[_ngcontent-%COMP%]{flex-direction:row-reverse}[_nghost-%COMP%]   .arrow[_ngcontent-%COMP%]{position:absolute;width:0;height:0}[_nghost-%COMP%]   nb-icon[_ngcontent-%COMP%] + span[_ngcontent-%COMP%]{margin-left:0.5rem}.right[_nghost-%COMP%]   nb-icon[_ngcontent-%COMP%] + span[_ngcontent-%COMP%]{margin-right:0.5rem}[_nghost-%COMP%]   .arrow[_ngcontent-%COMP%]{border-left:6px solid transparent;border-right:6px solid transparent}.bottom[_nghost-%COMP%]   .arrow[_ngcontent-%COMP%]{top:-6px;left:calc(50% - 6px)}.bottom-start[_nghost-%COMP%]   .arrow[_ngcontent-%COMP%]{top:-6px}[dir=ltr]   .bottom-start[_nghost-%COMP%]   .arrow[_ngcontent-%COMP%]{right:6px}[dir=rtl]   .bottom-start[_nghost-%COMP%]   .arrow[_ngcontent-%COMP%]{left:6px}.bottom-end[_nghost-%COMP%]   .arrow[_ngcontent-%COMP%]{top:-6px}[dir=ltr]   .bottom-end[_nghost-%COMP%]   .arrow[_ngcontent-%COMP%]{left:6px}[dir=rtl]   .bottom-end[_nghost-%COMP%]   .arrow[_ngcontent-%COMP%]{right:6px}.left[_nghost-%COMP%]   .arrow[_ngcontent-%COMP%], .start[_nghost-%COMP%]   .arrow[_ngcontent-%COMP%]{top:calc(50% - 2.4px)}[dir=ltr]   .left[_nghost-%COMP%]   .arrow[_ngcontent-%COMP%], [dir=ltr]   .start[_nghost-%COMP%]   .arrow[_ngcontent-%COMP%]{right:-8px;transform:rotate(90deg)}[dir=rtl]   .left[_nghost-%COMP%]   .arrow[_ngcontent-%COMP%], [dir=rtl]   .start[_nghost-%COMP%]   .arrow[_ngcontent-%COMP%]{left:-8px;transform:rotate(270deg)}.start-top[_nghost-%COMP%]   .arrow[_ngcontent-%COMP%]{right:-8px;bottom:6px;transform:rotate(90deg)}.start-bottom[_nghost-%COMP%]   .arrow[_ngcontent-%COMP%]{right:-8px;top:6px;transform:rotate(90deg)}.top[_nghost-%COMP%]   .arrow[_ngcontent-%COMP%]{bottom:-6px;left:calc(50% - 6px);transform:rotate(180deg)}.top-start[_nghost-%COMP%]   .arrow[_ngcontent-%COMP%]{bottom:calc(-1 * 6px + 1px);transform:rotate(180deg)}[dir=ltr]   .top-start[_nghost-%COMP%]   .arrow[_ngcontent-%COMP%]{right:6px}[dir=rtl]   .top-start[_nghost-%COMP%]   .arrow[_ngcontent-%COMP%]{left:6px}.top-end[_nghost-%COMP%]   .arrow[_ngcontent-%COMP%]{bottom:calc(-6px + 1px);transform:rotate(180deg)}[dir=ltr]   .top-end[_nghost-%COMP%]   .arrow[_ngcontent-%COMP%]{left:6px}[dir=rtl]   .top-end[_nghost-%COMP%]   .arrow[_ngcontent-%COMP%]{right:6px}.right[_nghost-%COMP%]   .arrow[_ngcontent-%COMP%], .end[_nghost-%COMP%]   .arrow[_ngcontent-%COMP%]{top:calc(50% - 2.4px)}[dir=ltr]   .right[_nghost-%COMP%]   .arrow[_ngcontent-%COMP%], [dir=ltr]   .end[_nghost-%COMP%]   .arrow[_ngcontent-%COMP%]{left:-8px;transform:rotate(270deg)}[dir=rtl]   .right[_nghost-%COMP%]   .arrow[_ngcontent-%COMP%], [dir=rtl]   .end[_nghost-%COMP%]   .arrow[_ngcontent-%COMP%]{right:-8px;transform:rotate(90deg)}.end-top[_nghost-%COMP%]   .arrow[_ngcontent-%COMP%]{left:calc(-6px - 6px / 2.5);bottom:6px;transform:rotate(270deg)}.end-bottom[_nghost-%COMP%]   .arrow[_ngcontent-%COMP%]{left:calc(-6px - 6px / 2.5);top:6px;transform:rotate(270deg)}\"],\n    data: {\n      animation: [trigger('showTooltip', [state('in', style({\n        opacity: 1\n      })), transition('void => *', [style({\n        opacity: 0\n      }), animate(100)]), transition('* => void', [animate(100, style({\n        opacity: 0\n      }))])])]\n    }\n  });\n  return NbTooltipComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/*\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n *\n * Tooltip directive for small text/icon hints.\n *\n * ### Installation\n *\n * Import `NbTooltipModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbTooltipModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * @stacked-example(Showcase, tooltip/tooltip-showcase.component)\n *\n * Tooltip can accept a hint text and/or an icon:\n * @stacked-example(With Icon, tooltip/tooltip-with-icon.component)\n *\n * Same way as Popover, tooltip can accept placement position with `nbTooltipPlacement` property:\n * @stacked-example(Placements, tooltip/tooltip-placements.component)\n *\n * It is also possible to specify tooltip color using `nbTooltipStatus` property:\n * @stacked-example(Colored Tooltips, tooltip/tooltip-colors.component)\n *\n * Tooltip has a number of triggers which provides an ability to show and hide the component in different ways:\n *\n * - Click mode shows the component when a user clicks on the host element and hides when the user clicks\n * somewhere on the document outside the component.\n * - Hint provides capability to show the component when the user hovers over the host element\n * and hide when the user hovers out of the host.\n * - Hover works like hint mode with one exception - when the user moves mouse from host element to\n * the container element the component remains open, so that it is possible to interact with it content.\n * - Focus mode is applied when user focuses the element.\n * - Noop mode - the component won't react to the user interaction.\n */\n\n\nlet NbTooltipDirective = /*#__PURE__*/(() => {\n  class NbTooltipDirective {\n    constructor(hostRef, dynamicOverlayHandler) {\n      this.hostRef = hostRef;\n      this.dynamicOverlayHandler = dynamicOverlayHandler;\n      this.destroy$ = new Subject();\n      this.tooltipComponent = NbTooltipComponent;\n      this.context = {};\n      /**\n       * Position will be calculated relatively host element based on the position.\n       * Can be top, right, bottom, left, start or end.\n       */\n\n      this.position = NbPosition.TOP;\n      this._adjustment = NbAdjustment.CLOCKWISE;\n      this._tooltipClass = '';\n      /**\n       * Describes when the container will be shown.\n       * Available options: `click`, `hover`, `hint`, `focus` and `noop`\n       * */\n\n      this.trigger = NbTrigger.HINT;\n      /**\n       * Determines tooltip overlay offset (in pixels).\n       **/\n\n      this.offset = 8;\n      this.nbTooltipShowStateChange = new EventEmitter();\n      this.overlayConfig = {\n        panelClass: this.tooltipClass\n      };\n    }\n    /**\n     * Container position will change automatically based on this strategy if container can't fit view port.\n     * Set this property to `noop` value if you want to disable automatic adjustment.\n     * Available values: `clockwise` (default), `counterclockwise`, `vertical`, `horizontal`, `noop`.\n     */\n\n\n    get adjustment() {\n      return this._adjustment;\n    }\n\n    set adjustment(value) {\n      this._adjustment = value;\n    }\n\n    get tooltipClass() {\n      return this._tooltipClass;\n    }\n\n    set tooltipClass(value) {\n      if (value !== this.tooltipClass) {\n        this._tooltipClass = value;\n        this.overlayConfig = {\n          panelClass: this.tooltipClass\n        };\n      }\n    }\n    /**\n     * Accepts icon name or icon config object\n     * @param {string | NbIconConfig} icon name or config object\n     */\n\n\n    set icon(icon) {\n      this.context = Object.assign(this.context, {\n        icon\n      });\n    }\n    /**\n     *\n     * @param {string} status\n     */\n\n\n    set status(status) {\n      this.context = Object.assign(this.context, {\n        status\n      });\n    }\n\n    get isShown() {\n      return !!(this.dynamicOverlay && this.dynamicOverlay.isAttached);\n    }\n\n    ngOnInit() {\n      this.dynamicOverlayHandler.host(this.hostRef).componentType(this.tooltipComponent).offset(this.offset);\n    }\n\n    ngOnChanges() {\n      this.rebuild();\n    }\n\n    ngAfterViewInit() {\n      this.dynamicOverlay = this.configureDynamicOverlay().build();\n      this.dynamicOverlay.isShown.pipe(skip(1), takeUntil(this.destroy$)).subscribe(isShown => this.nbTooltipShowStateChange.emit({\n        isShown\n      }));\n    }\n\n    rebuild() {\n      this.dynamicOverlay = this.configureDynamicOverlay().rebuild();\n    }\n\n    show() {\n      this.dynamicOverlay.show();\n    }\n\n    hide() {\n      this.dynamicOverlay.hide();\n    }\n\n    toggle() {\n      this.dynamicOverlay.toggle();\n    }\n\n    ngOnDestroy() {\n      this.dynamicOverlayHandler.destroy();\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n\n    configureDynamicOverlay() {\n      return this.dynamicOverlayHandler.position(this.position).trigger(this.trigger).adjustment(this.adjustment).content(this.content).context(this.context).overlayConfig(this.overlayConfig);\n    }\n\n  }\n\n  NbTooltipDirective.ɵfac = function NbTooltipDirective_Factory(t) {\n    return new (t || NbTooltipDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(NbDynamicOverlayHandler));\n  };\n\n  NbTooltipDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NbTooltipDirective,\n    selectors: [[\"\", \"nbTooltip\", \"\"]],\n    inputs: {\n      position: [\"nbTooltipPlacement\", \"position\"],\n      trigger: [\"nbTooltipTrigger\", \"trigger\"],\n      offset: [\"nbTooltipOffset\", \"offset\"],\n      adjustment: [\"nbTooltipAdjustment\", \"adjustment\"],\n      tooltipClass: [\"nbTooltipClass\", \"tooltipClass\"],\n      icon: [\"nbTooltipIcon\", \"icon\"],\n      status: [\"nbTooltipStatus\", \"status\"],\n      content: [\"nbTooltip\", \"content\"]\n    },\n    outputs: {\n      nbTooltipShowStateChange: \"nbTooltipShowStateChange\"\n    },\n    exportAs: [\"nbTooltip\"],\n    features: [ɵngcc0.ɵɵProvidersFeature([NbDynamicOverlayHandler, NbDynamicOverlay]), ɵngcc0.ɵɵNgOnChangesFeature]\n  });\n  return NbTooltipDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/*\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nlet NbTooltipModule = /*#__PURE__*/(() => {\n  class NbTooltipModule {}\n\n  NbTooltipModule.ɵfac = function NbTooltipModule_Factory(t) {\n    return new (t || NbTooltipModule)();\n  };\n\n  NbTooltipModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NbTooltipModule\n  });\n  NbTooltipModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[NbSharedModule, NbOverlayModule, NbIconModule]]\n  });\n  return NbTooltipModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NbTooltipModule, {\n    declarations: [NbTooltipComponent, NbTooltipDirective],\n    imports: [NbSharedModule, NbOverlayModule, NbIconModule],\n    exports: [NbTooltipDirective]\n  });\n})();\n\nconst NB_SELECT_INJECTION_TOKEN = new InjectionToken('NB_SELECT_INJECTION_TOKEN');\n/*\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n// Component class scoped counter for aria attributes.\n\nlet lastOptionId = 0;\n/**\n * NbOptionComponent\n *\n * @styles\n *\n * option-background-color:\n * option-text-color:\n * option-text-font-family:\n * option-hover-background-color:\n * option-hover-text-color:\n * option-active-background-color:\n * option-active-text-color:\n * option-focus-background-color:\n * option-focus-text-color:\n * option-selected-background-color:\n * option-selected-text-color:\n * option-selected-hover-background-color:\n * option-selected-hover-text-color:\n * option-selected-active-background-color:\n * option-selected-active-text-color:\n * option-selected-focus-background-color:\n * option-selected-focus-text-color:\n * option-disabled-background-color:\n * option-disabled-text-color:\n * option-tiny-text-font-size:\n * option-tiny-text-font-weight:\n * option-tiny-text-line-height:\n * option-tiny-padding:\n * option-small-text-font-size:\n * option-small-text-font-weight:\n * option-small-text-line-height:\n * option-small-padding:\n * option-medium-text-font-size:\n * option-medium-text-font-weight:\n * option-medium-text-line-height:\n * option-medium-padding:\n * option-large-text-font-size:\n * option-large-text-font-weight:\n * option-large-text-line-height:\n * option-large-padding:\n * option-giant-text-font-size:\n * option-giant-text-font-weight:\n * option-giant-text-line-height:\n * option-giant-padding:\n **/\n\nlet NbOptionComponent = /*#__PURE__*/(() => {\n  class NbOptionComponent {\n    constructor(parent, elementRef, cd, zone, renderer) {\n      this.elementRef = elementRef;\n      this.cd = cd;\n      this.zone = zone;\n      this.renderer = renderer;\n      this.disabledByGroup = false;\n      this._disabled = false;\n      /**\n       * Fires value when option selection change.\n       * */\n\n      this.selectionChange = new EventEmitter();\n      /**\n       * Fires when option clicked\n       */\n\n      this.click$ = new Subject();\n      this.selected = false;\n      this.alive = true;\n      /**\n       * Component scoped id for aria attributes.\n       * */\n\n      this.id = `nb-option-${lastOptionId++}`;\n      this._active = false;\n      this.parent = parent;\n    }\n\n    get disabled() {\n      return this._disabled || this.disabledByGroup;\n    }\n\n    set disabled(value) {\n      this._disabled = convertToBoolProperty(value);\n    }\n\n    get click() {\n      return this.click$.asObservable();\n    }\n\n    ngOnDestroy() {\n      this.alive = false;\n    }\n\n    ngAfterViewInit() {\n      // TODO: #2254\n      this.zone.runOutsideAngular(() => setTimeout(() => {\n        this.renderer.addClass(this.elementRef.nativeElement, 'nb-transition');\n      }));\n    }\n    /**\n     * Determines should we render checkbox.\n     * */\n\n\n    get withCheckbox() {\n      return this.multiple && this.value != null;\n    }\n\n    get content() {\n      return this.elementRef.nativeElement.textContent;\n    } // TODO: replace with isShowCheckbox property to control this behaviour outside, issues/1965\n\n\n    get multiple() {\n      // We check parent existing because parent can be NbSelectComponent or\n      // NbAutocomplete and `miltiple` property exists only in NbSelectComponent\n      return this.parent ? this.parent.multiple : false;\n    }\n\n    get selectedClass() {\n      return this.selected;\n    }\n\n    get disabledAttribute() {\n      return this.disabled ? '' : null;\n    }\n\n    get tabindex() {\n      return '-1';\n    }\n\n    get activeClass() {\n      return this._active;\n    }\n\n    onClick(event) {\n      this.click$.next(this); // Prevent scroll on space click, etc.\n\n      event.preventDefault();\n    }\n\n    select() {\n      this.setSelection(true);\n    }\n\n    deselect() {\n      this.setSelection(false);\n    }\n    /**\n     * Sets disabled by group state and marks component for check.\n     */\n\n\n    setDisabledByGroupState(disabled) {\n      // Check if the component still alive as the option group defer method call so the component may become destroyed.\n      if (this.disabledByGroup !== disabled && this.alive) {\n        this.disabledByGroup = disabled;\n        this.cd.markForCheck();\n      }\n    }\n\n    setSelection(selected) {\n      /**\n       * In case of changing options in runtime the reference to the selected option will be kept in select component.\n       * This may lead to exceptions with detecting changes in destroyed component.\n       *\n       * Also Angular can call writeValue on destroyed view (select implements ControlValueAccessor).\n       * angular/angular#27803\n       * */\n      if (this.alive && this.selected !== selected) {\n        this.selected = selected;\n        this.selectionChange.emit(this);\n        this.cd.markForCheck();\n      }\n    }\n\n    focus() {\n      this.elementRef.nativeElement.focus();\n    }\n\n    getLabel() {\n      return this.content;\n    }\n\n    setActiveStyles() {\n      this._active = true;\n      this.cd.markForCheck();\n    }\n\n    setInactiveStyles() {\n      this._active = false;\n      this.cd.markForCheck();\n    }\n\n  }\n\n  NbOptionComponent.ɵfac = function NbOptionComponent_Factory(t) {\n    return new (t || NbOptionComponent)(ɵngcc0.ɵɵdirectiveInject(NB_SELECT_INJECTION_TOKEN, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n  };\n\n  NbOptionComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbOptionComponent,\n    selectors: [[\"nb-option\"]],\n    hostVars: 9,\n    hostBindings: function NbOptionComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function NbOptionComponent_click_HostBindingHandler($event) {\n          return ctx.onClick($event);\n        })(\"keydown.space\", function NbOptionComponent_keydown_space_HostBindingHandler($event) {\n          return ctx.onClick($event);\n        })(\"keydown.enter\", function NbOptionComponent_keydown_enter_HostBindingHandler($event) {\n          return ctx.onClick($event);\n        });\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"tabIndex\", ctx.tabindex);\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"disabled\", ctx.disabledAttribute);\n        ɵngcc0.ɵɵclassProp(\"multiple\", ctx.multiple)(\"selected\", ctx.selectedClass)(\"active\", ctx.activeClass);\n      }\n    },\n    inputs: {\n      disabled: \"disabled\",\n      value: \"value\"\n    },\n    outputs: {\n      selectionChange: \"selectionChange\"\n    },\n    ngContentSelectors: _c0,\n    decls: 2,\n    vars: 1,\n    consts: [[\"aria-hidden\", \"true\", 3, \"checked\", \"disabled\", 4, \"ngIf\"], [\"aria-hidden\", \"true\", 3, \"checked\", \"disabled\"]],\n    template: function NbOptionComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, NbOptionComponent_nb_checkbox_0_Template, 1, 2, \"nb-checkbox\", 0);\n        ɵngcc0.ɵɵprojection(1);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.withCheckbox);\n      }\n    },\n    directives: [ɵngcc2.NgIf, NbCheckboxComponent],\n    styles: [\"[_nghost-%COMP%]{display:flex}[_nghost-%COMP%]:hover{cursor:pointer}[_nghost-%COMP%]   nb-checkbox[_ngcontent-%COMP%]{display:flex;pointer-events:none}[dir=ltr]   [_nghost-%COMP%]   nb-checkbox[_ngcontent-%COMP%]{margin-right:.5rem}[dir=rtl]   [_nghost-%COMP%]   nb-checkbox[_ngcontent-%COMP%]{margin-left:.5rem}[_nghost-%COMP%]   nb-checkbox[_ngcontent-%COMP%]     .label{padding:0}[disabled][_nghost-%COMP%]{pointer-events:none}.nb-transition[_nghost-%COMP%]{transition-duration:0.15s;transition-property:background-color,color;transition-timing-function:ease-in}\"],\n    changeDetection: 0\n  });\n  return NbOptionComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/*\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nlet NbSelectLabelComponent = /*#__PURE__*/(() => {\n  class NbSelectLabelComponent {}\n\n  NbSelectLabelComponent.ɵfac = function NbSelectLabelComponent_Factory(t) {\n    return new (t || NbSelectLabelComponent)();\n  };\n\n  NbSelectLabelComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbSelectLabelComponent,\n    selectors: [[\"nb-select-label\"]],\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function NbSelectLabelComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2\n  });\n  return NbSelectLabelComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nfunction nbSelectFormFieldControlConfigFactory() {\n  const config = new NbFormFieldControlConfig();\n  config.supportsSuffix = false;\n  return config;\n}\n/**\n * The `NbSelectComponent` provides a capability to select one of the passed items.\n *\n * @stacked-example(Showcase, select/select-showcase.component)\n *\n * ### Installation\n *\n * Import `NbSelectModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbSelectModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * If you want to use it as the multi-select control you have to mark it as `multiple`.\n * In this case, `nb-select` will work only with arrays - accept arrays and propagate arrays.\n *\n * @stacked-example(Multiple, select/select-multiple.component)\n *\n * Items without values will clean the selection. Both `null` and `undefined` values will also clean the selection.\n *\n * @stacked-example(Clean selection, select/select-clean.component)\n *\n * Select may be bounded using `selected` input:\n *\n * ```html\n * <nb-select [(selected)]=\"selected\"></nb-selected>\n * ```\n *\n * Or you can bind control with form controls or ngModel:\n *\n * @stacked-example(Select form binding, select/select-form.component)\n *\n * Options in the select may be grouped using `nb-option-group` component.\n *\n * @stacked-example(Grouping, select/select-groups.component)\n *\n * Select may have a placeholder that will be shown when nothing selected:\n *\n * @stacked-example(Placeholder, select/select-placeholder.component)\n *\n * You can disable select, options and whole groups.\n *\n * @stacked-example(Disabled select, select/select-disabled.component)\n *\n * Also, the custom label may be provided in select.\n * This custom label will be used for instead placeholder when something selected.\n *\n * @stacked-example(Custom label, select/select-label.component)\n *\n * Default `nb-select` size is `medium` and status is `basic`.\n * Select is available in multiple colors using `status` property:\n *\n * @stacked-example(Select statuses, select/select-status.component)\n *\n * There are five select sizes:\n *\n * @stacked-example(Select sizes, select/select-sizes.component)\n *\n * And two additional style types - `filled`:\n *\n * @stacked-example(Filled select, select/select-filled.component)\n *\n * and `hero`:\n *\n * @stacked-example(Select colors, select/select-hero.component)\n *\n * Select is available in different shapes, that could be combined with the other properties:\n *\n * @stacked-example(Select shapes, select/select-shapes.component)\n *\n * By default, the component selects options whose values are strictly equal (`===`) with the select value.\n * To change such behavior, pass a custom comparator function to the `compareWith` attribute.\n *\n * @stacked-example(Select custom comparator, select/select-compare-with.component)\n *\n * You can add an additional icon to the select via the `nb-form-field` component:\n * @stacked-example(Select with icon, select/select-icon.component)\n *\n * @additional-example(Interactive, select/select-interactive.component)\n *\n * @styles\n *\n * select-cursor:\n * select-disabled-cursor:\n * select-min-width:\n * select-outline-width:\n * select-outline-color:\n * select-icon-offset:\n * select-text-font-family:\n * select-placeholder-text-font-family:\n * select-tiny-text-font-size:\n * select-tiny-text-font-weight:\n * select-tiny-text-line-height:\n * select-tiny-placeholder-text-font-size:\n * select-tiny-placeholder-text-font-weight:\n * select-tiny-max-width:\n * select-small-text-font-size:\n * select-small-text-font-weight:\n * select-small-text-line-height:\n * select-small-placeholder-text-font-size:\n * select-small-placeholder-text-font-weight:\n * select-small-max-width:\n * select-medium-text-font-size:\n * select-medium-text-font-weight:\n * select-medium-text-line-height:\n * select-medium-placeholder-text-font-size:\n * select-medium-placeholder-text-font-weight:\n * select-medium-max-width:\n * select-large-text-font-size:\n * select-large-text-font-weight:\n * select-large-text-line-height:\n * select-large-placeholder-text-font-size:\n * select-large-placeholder-text-font-weight:\n * select-large-max-width:\n * select-giant-text-font-size:\n * select-giant-text-font-weight:\n * select-giant-text-line-height:\n * select-giant-placeholder-text-font-size:\n * select-giant-placeholder-text-font-weight:\n * select-giant-max-width:\n * select-rectangle-border-radius:\n * select-semi-round-border-radius:\n * select-round-border-radius:\n * select-outline-border-style:\n * select-outline-border-width:\n * select-outline-tiny-padding:\n * select-outline-small-padding:\n * select-outline-medium-padding:\n * select-outline-large-padding:\n * select-outline-giant-padding:\n * select-outline-basic-icon-color:\n * select-outline-basic-text-color:\n * select-outline-basic-placeholder-text-color:\n * select-outline-basic-background-color:\n * select-outline-basic-border-color:\n * select-outline-basic-focus-background-color:\n * select-outline-basic-focus-border-color:\n * select-outline-basic-hover-background-color:\n * select-outline-basic-hover-border-color:\n * select-outline-basic-disabled-background-color:\n * select-outline-basic-disabled-border-color:\n * select-outline-basic-disabled-icon-color:\n * select-outline-basic-disabled-text-color:\n * select-outline-primary-icon-color:\n * select-outline-primary-text-color:\n * select-outline-primary-placeholder-text-color:\n * select-outline-primary-background-color:\n * select-outline-primary-border-color:\n * select-outline-primary-focus-background-color:\n * select-outline-primary-focus-border-color:\n * select-outline-primary-hover-background-color:\n * select-outline-primary-hover-border-color:\n * select-outline-primary-disabled-background-color:\n * select-outline-primary-disabled-border-color:\n * select-outline-primary-disabled-icon-color:\n * select-outline-primary-disabled-text-color:\n * select-outline-success-icon-color:\n * select-outline-success-text-color:\n * select-outline-success-placeholder-text-color:\n * select-outline-success-background-color:\n * select-outline-success-border-color:\n * select-outline-success-focus-background-color:\n * select-outline-success-focus-border-color:\n * select-outline-success-hover-background-color:\n * select-outline-success-hover-border-color:\n * select-outline-success-disabled-background-color:\n * select-outline-success-disabled-border-color:\n * select-outline-success-disabled-icon-color:\n * select-outline-success-disabled-text-color:\n * select-outline-info-icon-color:\n * select-outline-info-text-color:\n * select-outline-info-placeholder-text-color:\n * select-outline-info-background-color:\n * select-outline-info-border-color:\n * select-outline-info-focus-background-color:\n * select-outline-info-focus-border-color:\n * select-outline-info-hover-background-color:\n * select-outline-info-hover-border-color:\n * select-outline-info-disabled-background-color:\n * select-outline-info-disabled-border-color:\n * select-outline-info-disabled-icon-color:\n * select-outline-info-disabled-text-color:\n * select-outline-warning-icon-color:\n * select-outline-warning-text-color:\n * select-outline-warning-placeholder-text-color:\n * select-outline-warning-background-color:\n * select-outline-warning-border-color:\n * select-outline-warning-focus-background-color:\n * select-outline-warning-focus-border-color:\n * select-outline-warning-hover-background-color:\n * select-outline-warning-hover-border-color:\n * select-outline-warning-disabled-background-color:\n * select-outline-warning-disabled-border-color:\n * select-outline-warning-disabled-icon-color:\n * select-outline-warning-disabled-text-color:\n * select-outline-danger-icon-color:\n * select-outline-danger-text-color:\n * select-outline-danger-placeholder-text-color:\n * select-outline-danger-background-color:\n * select-outline-danger-border-color:\n * select-outline-danger-focus-background-color:\n * select-outline-danger-focus-border-color:\n * select-outline-danger-hover-background-color:\n * select-outline-danger-hover-border-color:\n * select-outline-danger-disabled-background-color:\n * select-outline-danger-disabled-border-color:\n * select-outline-danger-disabled-icon-color:\n * select-outline-danger-disabled-text-color:\n * select-outline-control-icon-color:\n * select-outline-control-text-color:\n * select-outline-control-placeholder-text-color:\n * select-outline-control-background-color:\n * select-outline-control-border-color:\n * select-outline-control-focus-background-color:\n * select-outline-control-focus-border-color:\n * select-outline-control-hover-background-color:\n * select-outline-control-hover-border-color:\n * select-outline-control-disabled-background-color:\n * select-outline-control-disabled-border-color:\n * select-outline-control-disabled-icon-color:\n * select-outline-control-disabled-text-color:\n * select-outline-adjacent-border-style:\n * select-outline-adjacent-border-width:\n * select-outline-basic-open-border-color:\n * select-outline-basic-adjacent-border-color:\n * select-outline-primary-open-border-color:\n * select-outline-primary-adjacent-border-color:\n * select-outline-success-open-border-color:\n * select-outline-success-adjacent-border-color:\n * select-outline-info-open-border-color:\n * select-outline-info-adjacent-border-color:\n * select-outline-warning-open-border-color:\n * select-outline-warning-adjacent-border-color:\n * select-outline-danger-open-border-color:\n * select-outline-danger-adjacent-border-color:\n * select-outline-control-open-border-color:\n * select-outline-control-adjacent-border-color:\n * select-filled-border-style:\n * select-filled-border-width:\n * select-filled-tiny-padding:\n * select-filled-small-padding:\n * select-filled-medium-padding:\n * select-filled-large-padding:\n * select-filled-giant-padding:\n * select-filled-basic-background-color:\n * select-filled-basic-border-color:\n * select-filled-basic-icon-color:\n * select-filled-basic-text-color:\n * select-filled-basic-placeholder-text-color:\n * select-filled-basic-focus-background-color:\n * select-filled-basic-focus-border-color:\n * select-filled-basic-hover-background-color:\n * select-filled-basic-hover-border-color:\n * select-filled-basic-disabled-background-color:\n * select-filled-basic-disabled-border-color:\n * select-filled-basic-disabled-icon-color:\n * select-filled-basic-disabled-text-color:\n * select-filled-primary-background-color:\n * select-filled-primary-border-color:\n * select-filled-primary-icon-color:\n * select-filled-primary-text-color:\n * select-filled-primary-placeholder-text-color:\n * select-filled-primary-focus-background-color:\n * select-filled-primary-focus-border-color:\n * select-filled-primary-hover-background-color:\n * select-filled-primary-hover-border-color:\n * select-filled-primary-disabled-background-color:\n * select-filled-primary-disabled-border-color:\n * select-filled-primary-disabled-icon-color:\n * select-filled-primary-disabled-text-color:\n * select-filled-success-background-color:\n * select-filled-success-border-color:\n * select-filled-success-icon-color:\n * select-filled-success-text-color:\n * select-filled-success-placeholder-text-color:\n * select-filled-success-focus-background-color:\n * select-filled-success-focus-border-color:\n * select-filled-success-hover-background-color:\n * select-filled-success-hover-border-color:\n * select-filled-success-disabled-background-color:\n * select-filled-success-disabled-border-color:\n * select-filled-success-disabled-icon-color:\n * select-filled-success-disabled-text-color:\n * select-filled-info-background-color:\n * select-filled-info-border-color:\n * select-filled-info-icon-color:\n * select-filled-info-text-color:\n * select-filled-info-placeholder-text-color:\n * select-filled-info-focus-background-color:\n * select-filled-info-focus-border-color:\n * select-filled-info-hover-background-color:\n * select-filled-info-hover-border-color:\n * select-filled-info-disabled-background-color:\n * select-filled-info-disabled-border-color:\n * select-filled-info-disabled-icon-color:\n * select-filled-info-disabled-text-color:\n * select-filled-warning-background-color:\n * select-filled-warning-border-color:\n * select-filled-warning-icon-color:\n * select-filled-warning-text-color:\n * select-filled-warning-placeholder-text-color:\n * select-filled-warning-focus-background-color:\n * select-filled-warning-focus-border-color:\n * select-filled-warning-hover-background-color:\n * select-filled-warning-hover-border-color:\n * select-filled-warning-disabled-background-color:\n * select-filled-warning-disabled-border-color:\n * select-filled-warning-disabled-icon-color:\n * select-filled-warning-disabled-text-color:\n * select-filled-danger-background-color:\n * select-filled-danger-border-color:\n * select-filled-danger-icon-color:\n * select-filled-danger-text-color:\n * select-filled-danger-placeholder-text-color:\n * select-filled-danger-focus-background-color:\n * select-filled-danger-focus-border-color:\n * select-filled-danger-hover-background-color:\n * select-filled-danger-hover-border-color:\n * select-filled-danger-disabled-background-color:\n * select-filled-danger-disabled-border-color:\n * select-filled-danger-disabled-icon-color:\n * select-filled-danger-disabled-text-color:\n * select-filled-control-background-color:\n * select-filled-control-border-color:\n * select-filled-control-icon-color:\n * select-filled-control-text-color:\n * select-filled-control-placeholder-text-color:\n * select-filled-control-focus-background-color:\n * select-filled-control-focus-border-color:\n * select-filled-control-hover-background-color:\n * select-filled-control-hover-border-color:\n * select-filled-control-disabled-background-color:\n * select-filled-control-disabled-border-color:\n * select-filled-control-disabled-icon-color:\n * select-filled-control-disabled-text-color:\n * select-hero-tiny-padding:\n * select-hero-small-padding:\n * select-hero-medium-padding:\n * select-hero-large-padding:\n * select-hero-giant-padding:\n * select-hero-basic-left-background-color:\n * select-hero-basic-right-background-color:\n * select-hero-basic-icon-color:\n * select-hero-basic-text-color:\n * select-hero-basic-placeholder-text-color:\n * select-hero-basic-focus-left-background-color:\n * select-hero-basic-focus-right-background-color:\n * select-hero-basic-hover-left-background-color:\n * select-hero-basic-hover-right-background-color:\n * select-hero-basic-disabled-background-color:\n * select-hero-basic-disabled-icon-color:\n * select-hero-basic-disabled-text-color:\n * select-hero-primary-left-background-color:\n * select-hero-primary-right-background-color:\n * select-hero-primary-icon-color:\n * select-hero-primary-text-color:\n * select-hero-primary-placeholder-text-color:\n * select-hero-primary-focus-left-background-color:\n * select-hero-primary-focus-right-background-color:\n * select-hero-primary-hover-left-background-color:\n * select-hero-primary-hover-right-background-color:\n * select-hero-primary-disabled-background-color:\n * select-hero-primary-disabled-icon-color:\n * select-hero-primary-disabled-text-color:\n * select-hero-success-left-background-color:\n * select-hero-success-right-background-color:\n * select-hero-success-icon-color:\n * select-hero-success-text-color:\n * select-hero-success-placeholder-text-color:\n * select-hero-success-focus-left-background-color:\n * select-hero-success-focus-right-background-color:\n * select-hero-success-hover-left-background-color:\n * select-hero-success-hover-right-background-color:\n * select-hero-success-disabled-background-color:\n * select-hero-success-disabled-icon-color:\n * select-hero-success-disabled-text-color:\n * select-hero-info-left-background-color:\n * select-hero-info-right-background-color:\n * select-hero-info-icon-color:\n * select-hero-info-text-color:\n * select-hero-info-placeholder-text-color:\n * select-hero-info-focus-left-background-color:\n * select-hero-info-focus-right-background-color:\n * select-hero-info-hover-left-background-color:\n * select-hero-info-hover-right-background-color:\n * select-hero-info-disabled-background-color:\n * select-hero-info-disabled-icon-color:\n * select-hero-info-disabled-text-color:\n * select-hero-warning-left-background-color:\n * select-hero-warning-right-background-color:\n * select-hero-warning-icon-color:\n * select-hero-warning-text-color:\n * select-hero-warning-placeholder-text-color:\n * select-hero-warning-focus-left-background-color:\n * select-hero-warning-focus-right-background-color:\n * select-hero-warning-hover-left-background-color:\n * select-hero-warning-hover-right-background-color:\n * select-hero-warning-disabled-background-color:\n * select-hero-warning-disabled-icon-color:\n * select-hero-warning-disabled-text-color:\n * select-hero-danger-left-background-color:\n * select-hero-danger-right-background-color:\n * select-hero-danger-icon-color:\n * select-hero-danger-text-color:\n * select-hero-danger-placeholder-text-color:\n * select-hero-danger-focus-left-background-color:\n * select-hero-danger-focus-right-background-color:\n * select-hero-danger-hover-left-background-color:\n * select-hero-danger-hover-right-background-color:\n * select-hero-danger-disabled-background-color:\n * select-hero-danger-disabled-icon-color:\n * select-hero-danger-disabled-text-color:\n * select-hero-control-left-background-color:\n * select-hero-control-right-background-color:\n * select-hero-control-icon-color:\n * select-hero-control-text-color:\n * select-hero-control-placeholder-text-color:\n * select-hero-control-focus-left-background-color:\n * select-hero-control-focus-right-background-color:\n * select-hero-control-hover-left-background-color:\n * select-hero-control-hover-right-background-color:\n * select-hero-control-disabled-background-color:\n * select-hero-control-disabled-icon-color:\n * select-hero-control-disabled-text-color:\n * */\n\n\nlet NbSelectComponent = /*#__PURE__*/(() => {\n  class NbSelectComponent {\n    constructor(document, overlay, hostRef, positionBuilder, triggerStrategyBuilder, cd, focusKeyManagerFactoryService, focusMonitor, renderer, zone, statusService) {\n      this.document = document;\n      this.overlay = overlay;\n      this.hostRef = hostRef;\n      this.positionBuilder = positionBuilder;\n      this.triggerStrategyBuilder = triggerStrategyBuilder;\n      this.cd = cd;\n      this.focusKeyManagerFactoryService = focusKeyManagerFactoryService;\n      this.focusMonitor = focusMonitor;\n      this.renderer = renderer;\n      this.zone = zone;\n      this.statusService = statusService;\n      /**\n       * Select size, available sizes:\n       * `tiny`, `small`, `medium` (default), `large`, `giant`\n       */\n\n      this.size = 'medium';\n      /**\n       * Select status (adds specific styles):\n       * `basic`, `primary`, `info`, `success`, `warning`, `danger`, `control`\n       */\n\n      this.status = 'basic';\n      /**\n       * Select shapes: `rectangle` (default), `round`, `semi-round`\n       */\n\n      this.shape = 'rectangle';\n      /**\n       * Select appearances: `outline` (default), `filled`, `hero`\n       */\n\n      this.appearance = 'outline';\n      this._fullWidth = false;\n      /**\n       * Renders select placeholder if nothing selected.\n       * */\n\n      this.placeholder = '';\n\n      this._compareWith = (v1, v2) => v1 === v2;\n\n      this._multiple = false;\n      /**\n       * Determines options overlay offset (in pixels).\n       **/\n\n      this.optionsOverlayOffset = 8;\n      /**\n       * Determines options overlay scroll strategy.\n       **/\n\n      this.scrollStrategy = 'block';\n      /**\n       * Will be emitted when selected value changes.\n       * */\n\n      this.selectedChange = new EventEmitter();\n      /**\n       * List of selected options.\n       * */\n\n      this.selectionModel = [];\n      /**\n       * Current overlay position because of we have to toggle overlayPosition\n       * in [ngClass] direction and this directive can use only string.\n       */\n\n      this.overlayPosition = '';\n      this.alive = true;\n      this.destroy$ = new Subject();\n      /**\n       * Function passed through control value accessor to propagate changes.\n       * */\n\n      this.onChange = () => {};\n\n      this.onTouched = () => {};\n      /*\n       * @docs-private\n       **/\n\n\n      this.status$ = new BehaviorSubject(this.status);\n      /*\n       * @docs-private\n       **/\n\n      this.size$ = new BehaviorSubject(this.size);\n      /*\n       * @docs-private\n       **/\n\n      this.focused$ = new BehaviorSubject(false);\n      /*\n       * @docs-private\n       **/\n\n      this.disabled$ = new BehaviorSubject(this.disabled);\n      /*\n       * @docs-private\n       **/\n\n      this.fullWidth$ = new BehaviorSubject(this.fullWidth);\n    }\n    /**\n     * Adds `outline` styles\n     */\n\n\n    get outline() {\n      return this.appearance === 'outline';\n    }\n\n    set outline(value) {\n      if (convertToBoolProperty(value)) {\n        this.appearance = 'outline';\n      }\n    }\n    /**\n     * Adds `filled` styles\n     */\n\n\n    get filled() {\n      return this.appearance === 'filled';\n    }\n\n    set filled(value) {\n      if (convertToBoolProperty(value)) {\n        this.appearance = 'filled';\n      }\n    }\n    /**\n     * Adds `hero` styles\n     */\n\n\n    get hero() {\n      return this.appearance === 'hero';\n    }\n\n    set hero(value) {\n      if (convertToBoolProperty(value)) {\n        this.appearance = 'hero';\n      }\n    }\n    /**\n     * Disables the select\n     */\n\n\n    get disabled() {\n      return !!this._disabled;\n    }\n\n    set disabled(value) {\n      this._disabled = convertToBoolProperty(value);\n    }\n    /**\n     * If set element will fill its container\n     */\n\n\n    get fullWidth() {\n      return this._fullWidth;\n    }\n\n    set fullWidth(value) {\n      this._fullWidth = convertToBoolProperty(value);\n    }\n    /**\n     * A function to compare option value with selected value.\n     * By default, values are compared with strict equality (`===`).\n     */\n\n\n    get compareWith() {\n      return this._compareWith;\n    }\n\n    set compareWith(fn) {\n      if (typeof fn !== 'function') {\n        return;\n      }\n\n      this._compareWith = fn;\n\n      if (this.selectionModel.length && this.canSelectValue()) {\n        this.setSelection(this.selected);\n      }\n    }\n    /**\n     * Accepts selected item or array of selected items.\n     * */\n\n\n    set selected(value) {\n      this.writeValue(value);\n    }\n\n    get selected() {\n      return this.multiple ? this.selectionModel.map(o => o.value) : this.selectionModel[0].value;\n    }\n    /**\n     * Gives capability just write `multiple` over the element.\n     * */\n\n\n    get multiple() {\n      return this._multiple;\n    }\n\n    set multiple(value) {\n      this._multiple = convertToBoolProperty(value);\n    }\n\n    get additionalClasses() {\n      if (this.statusService.isCustomStatus(this.status)) {\n        return [this.statusService.getStatusClass(this.status)];\n      }\n\n      return [];\n    }\n    /**\n     * Determines is select opened.\n     * */\n\n\n    get isOpen() {\n      return this.ref && this.ref.hasAttached();\n    }\n    /**\n     * Determines is select hidden.\n     * */\n\n\n    get isHidden() {\n      return !this.isOpen;\n    }\n    /**\n     * Returns width of the select button.\n     * */\n\n\n    get hostWidth() {\n      return this.button.nativeElement.getBoundingClientRect().width;\n    }\n\n    get selectButtonClasses() {\n      const classes = [];\n\n      if (!this.selectionModel.length) {\n        classes.push('placeholder');\n      }\n\n      if (!this.selectionModel.length && !this.placeholder) {\n        classes.push('empty');\n      }\n\n      if (this.isOpen) {\n        classes.push(this.overlayPosition);\n      }\n\n      return classes;\n    }\n    /**\n     * Content rendered in the label.\n     * */\n\n\n    get selectionView() {\n      if (this.selectionModel.length > 1) {\n        return this.selectionModel.map(option => option.content).join(', ');\n      }\n\n      return this.selectionModel[0].content;\n    }\n\n    ngOnChanges({\n      disabled,\n      status,\n      size,\n      fullWidth\n    }) {\n      if (disabled) {\n        this.disabled$.next(disabled.currentValue);\n      }\n\n      if (status) {\n        this.status$.next(status.currentValue);\n      }\n\n      if (size) {\n        this.size$.next(size.currentValue);\n      }\n\n      if (fullWidth) {\n        this.fullWidth$.next(this.fullWidth);\n      }\n    }\n\n    ngAfterContentInit() {\n      this.options.changes.pipe(startWith(this.options), filter(() => this.queue != null && this.canSelectValue()), // Call 'writeValue' when current change detection run is finished.\n      // When writing is finished, change detection starts again, since\n      // microtasks queue is empty.\n      // Prevents ExpressionChangedAfterItHasBeenCheckedError.\n      switchMap(options => from(Promise.resolve(options))), takeUntil(this.destroy$)).subscribe(() => this.writeValue(this.queue));\n    }\n\n    ngAfterViewInit() {\n      this.triggerStrategy = this.createTriggerStrategy();\n      this.subscribeOnButtonFocus();\n      this.subscribeOnTriggers();\n      this.subscribeOnOptionClick(); // TODO: #2254\n\n      this.zone.runOutsideAngular(() => setTimeout(() => {\n        this.renderer.addClass(this.hostRef.nativeElement, 'nb-transition');\n      }));\n    }\n\n    ngOnDestroy() {\n      this.alive = false;\n      this.destroy$.next();\n      this.destroy$.complete();\n\n      if (this.ref) {\n        this.ref.dispose();\n      }\n\n      if (this.triggerStrategy) {\n        this.triggerStrategy.destroy();\n      }\n    }\n\n    show() {\n      if (this.isHidden) {\n        this.attachToOverlay();\n        this.setActiveOption();\n        this.cd.markForCheck();\n      }\n    }\n\n    hide() {\n      if (this.isOpen) {\n        this.ref.detach();\n        this.cd.markForCheck();\n      }\n    }\n\n    registerOnChange(fn) {\n      this.onChange = fn;\n    }\n\n    registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n\n    setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n      this.cd.markForCheck();\n    }\n\n    writeValue(value) {\n      if (!this.alive) {\n        return;\n      }\n\n      if (this.canSelectValue()) {\n        this.setSelection(value);\n\n        if (this.selectionModel.length) {\n          this.queue = null;\n        }\n      } else {\n        this.queue = value;\n      }\n    }\n    /**\n     * Selects option or clear all selected options if value is null.\n     * */\n\n\n    handleOptionClick(option) {\n      this.queue = null;\n\n      if (option.value == null) {\n        this.reset();\n      } else {\n        this.selectOption(option);\n      }\n\n      this.cd.markForCheck();\n    }\n    /**\n     * Deselect all selected options.\n     * */\n\n\n    reset() {\n      this.selectionModel.forEach(option => option.deselect());\n      this.selectionModel = [];\n      this.hide();\n      this.button.nativeElement.focus();\n      this.emitSelected(this.multiple ? [] : null);\n    }\n    /**\n     * Determines how to select option as multiple or single.\n     * */\n\n\n    selectOption(option) {\n      if (this.multiple) {\n        this.handleMultipleSelect(option);\n      } else {\n        this.handleSingleSelect(option);\n      }\n    }\n    /**\n     * Select single option.\n     * */\n\n\n    handleSingleSelect(option) {\n      const selected = this.selectionModel.pop();\n\n      if (selected && !this._compareWith(selected.value, option.value)) {\n        selected.deselect();\n      }\n\n      this.selectionModel = [option];\n      option.select();\n      this.hide();\n      this.button.nativeElement.focus();\n      this.emitSelected(option.value);\n    }\n    /**\n     * Select for multiple options.\n     * */\n\n\n    handleMultipleSelect(option) {\n      if (option.selected) {\n        this.selectionModel = this.selectionModel.filter(s => !this._compareWith(s.value, option.value));\n        option.deselect();\n      } else {\n        this.selectionModel.push(option);\n        option.select();\n      }\n\n      this.emitSelected(this.selectionModel.map(opt => opt.value));\n    }\n\n    attachToOverlay() {\n      if (!this.ref) {\n        this.createOverlay();\n        this.subscribeOnPositionChange();\n        this.createKeyManager();\n        this.subscribeOnOverlayKeys();\n      }\n\n      this.ref.attach(this.portal);\n    }\n\n    setActiveOption() {\n      if (this.selectionModel.length) {\n        this.keyManager.setActiveItem(this.selectionModel[0]);\n      } else {\n        this.keyManager.setFirstItemActive();\n      }\n    }\n\n    createOverlay() {\n      const scrollStrategy = this.createScrollStrategy();\n      this.positionStrategy = this.createPositionStrategy();\n      this.ref = this.overlay.create({\n        positionStrategy: this.positionStrategy,\n        scrollStrategy,\n        panelClass: this.optionsPanelClass\n      });\n    }\n\n    createKeyManager() {\n      this.keyManager = this.focusKeyManagerFactoryService.create(this.options).withTypeAhead(200);\n    }\n\n    createPositionStrategy() {\n      return this.positionBuilder.connectedTo(this.button).position(NbPosition.BOTTOM).offset(this.optionsOverlayOffset).adjustment(NbAdjustment.VERTICAL);\n    }\n\n    createScrollStrategy() {\n      return this.overlay.scrollStrategies[this.scrollStrategy]();\n    }\n\n    createTriggerStrategy() {\n      return this.triggerStrategyBuilder.trigger(NbTrigger.CLICK).host(this.hostRef.nativeElement).container(() => this.getContainer()).build();\n    }\n\n    subscribeOnTriggers() {\n      this.triggerStrategy.show$.subscribe(() => this.show());\n      this.triggerStrategy.hide$.pipe(filter(() => this.isOpen)).subscribe($event => {\n        this.hide();\n\n        if (!this.isClickedWithinComponent($event)) {\n          this.onTouched();\n        }\n      });\n    }\n\n    subscribeOnPositionChange() {\n      this.positionStrategy.positionChange.pipe(takeUntil(this.destroy$)).subscribe(position => {\n        this.overlayPosition = position;\n        this.cd.detectChanges();\n      });\n    }\n\n    subscribeOnOptionClick() {\n      /**\n       * If the user changes provided options list in the runtime we have to handle this\n       * and resubscribe on options selection changes event.\n       * Otherwise, the user will not be able to select new options.\n       * */\n      this.options.changes.pipe(startWith(this.options), switchMap(options => {\n        return merge(...options.map(option => option.click));\n      }), takeUntil(this.destroy$)).subscribe(clickedOption => this.handleOptionClick(clickedOption));\n    }\n\n    subscribeOnOverlayKeys() {\n      this.ref.keydownEvents().pipe(filter(() => this.isOpen), takeUntil(this.destroy$)).subscribe(event => {\n        if (event.keyCode === ESCAPE) {\n          this.button.nativeElement.focus();\n          this.hide();\n        } else {\n          this.keyManager.onKeydown(event);\n        }\n      });\n      this.keyManager.tabOut.pipe(takeUntil(this.destroy$)).subscribe(() => {\n        this.hide();\n        this.onTouched();\n      });\n    }\n\n    subscribeOnButtonFocus() {\n      this.focusMonitor.monitor(this.button).pipe(map(origin => !!origin), finalize(() => this.focusMonitor.stopMonitoring(this.button)), takeUntil(this.destroy$)).subscribe(this.focused$);\n    }\n\n    getContainer() {\n      return this.ref && this.ref.hasAttached() && {\n        location: {\n          nativeElement: this.ref.overlayElement\n        }\n      };\n    }\n    /**\n     * Propagate selected value.\n     * */\n\n\n    emitSelected(selected) {\n      this.onChange(selected);\n      this.selectedChange.emit(selected);\n    }\n    /**\n     * Set selected value in model.\n     * */\n\n\n    setSelection(value) {\n      const isArray = Array.isArray(value);\n\n      if (this.multiple && !isArray) {\n        throw new Error('Can\\'t assign single value if select is marked as multiple');\n      }\n\n      if (!this.multiple && isArray) {\n        throw new Error('Can\\'t assign array if select is not marked as multiple');\n      }\n\n      const previouslySelectedOptions = this.selectionModel;\n      this.selectionModel = [];\n\n      if (isArray) {\n        value.forEach(option => this.selectValue(option));\n      } else {\n        this.selectValue(value);\n      } // find options which were selected before and trigger deselect\n\n\n      previouslySelectedOptions.filter(option => !this.selectionModel.includes(option)).forEach(option => option.deselect());\n      this.cd.markForCheck();\n    }\n    /**\n     * Selects value.\n     * */\n\n\n    selectValue(value) {\n      const corresponding = this.options.find(option => this._compareWith(option.value, value));\n\n      if (corresponding) {\n        corresponding.select();\n        this.selectionModel.push(corresponding);\n      }\n    }\n    /**\n     * Sets touched if focus moved outside of button and overlay,\n     * ignoring the case when focus moved to options overlay.\n     */\n\n\n    trySetTouched() {\n      if (this.isHidden) {\n        this.onTouched();\n      }\n    }\n\n    isClickedWithinComponent($event) {\n      return this.hostRef.nativeElement === $event.target || this.hostRef.nativeElement.contains($event.target);\n    }\n\n    canSelectValue() {\n      return !!(this.options && this.options.length);\n    }\n\n    get tiny() {\n      return this.size === 'tiny';\n    }\n\n    get small() {\n      return this.size === 'small';\n    }\n\n    get medium() {\n      return this.size === 'medium';\n    }\n\n    get large() {\n      return this.size === 'large';\n    }\n\n    get giant() {\n      return this.size === 'giant';\n    }\n\n    get primary() {\n      return this.status === 'primary';\n    }\n\n    get info() {\n      return this.status === 'info';\n    }\n\n    get success() {\n      return this.status === 'success';\n    }\n\n    get warning() {\n      return this.status === 'warning';\n    }\n\n    get danger() {\n      return this.status === 'danger';\n    }\n\n    get basic() {\n      return this.status === 'basic';\n    }\n\n    get control() {\n      return this.status === 'control';\n    }\n\n    get rectangle() {\n      return this.shape === 'rectangle';\n    }\n\n    get round() {\n      return this.shape === 'round';\n    }\n\n    get semiRound() {\n      return this.shape === 'semi-round';\n    }\n\n  }\n\n  NbSelectComponent.ɵfac = function NbSelectComponent_Factory(t) {\n    return new (t || NbSelectComponent)(ɵngcc0.ɵɵdirectiveInject(NB_DOCUMENT), ɵngcc0.ɵɵdirectiveInject(NbOverlayService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(NbPositionBuilderService), ɵngcc0.ɵɵdirectiveInject(NbTriggerStrategyBuilderService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(NbFocusKeyManagerFactoryService), ɵngcc0.ɵɵdirectiveInject(NbFocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(NbStatusService));\n  };\n\n  NbSelectComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbSelectComponent,\n    selectors: [[\"nb-select\"]],\n    contentQueries: function NbSelectComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NbSelectLabelComponent, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NbOptionComponent, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.customLabel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n      }\n    },\n    viewQuery: function NbSelectComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(NbPortalDirective, 5);\n        ɵngcc0.ɵɵviewQuery(_c38, 5, ElementRef);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.portal = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.button = _t.first);\n      }\n    },\n    hostVars: 42,\n    hostBindings: function NbSelectComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassMap(ctx.additionalClasses);\n        ɵngcc0.ɵɵclassProp(\"appearance-outline\", ctx.outline)(\"appearance-filled\", ctx.filled)(\"appearance-hero\", ctx.hero)(\"full-width\", ctx.fullWidth)(\"open\", ctx.isOpen)(\"size-tiny\", ctx.tiny)(\"size-small\", ctx.small)(\"size-medium\", ctx.medium)(\"size-large\", ctx.large)(\"size-giant\", ctx.giant)(\"status-primary\", ctx.primary)(\"status-info\", ctx.info)(\"status-success\", ctx.success)(\"status-warning\", ctx.warning)(\"status-danger\", ctx.danger)(\"status-basic\", ctx.basic)(\"status-control\", ctx.control)(\"shape-rectangle\", ctx.rectangle)(\"shape-round\", ctx.round)(\"shape-semi-round\", ctx.semiRound);\n      }\n    },\n    inputs: {\n      size: \"size\",\n      status: \"status\",\n      shape: \"shape\",\n      appearance: \"appearance\",\n      placeholder: \"placeholder\",\n      optionsOverlayOffset: \"optionsOverlayOffset\",\n      scrollStrategy: \"scrollStrategy\",\n      outline: \"outline\",\n      filled: \"filled\",\n      hero: \"hero\",\n      disabled: \"disabled\",\n      fullWidth: \"fullWidth\",\n      compareWith: \"compareWith\",\n      selected: \"selected\",\n      multiple: \"multiple\",\n      optionsListClass: \"optionsListClass\",\n      optionsPanelClass: \"optionsPanelClass\"\n    },\n    outputs: {\n      selectedChange: \"selectedChange\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NbSelectComponent),\n      multi: true\n    }, {\n      provide: NB_SELECT_INJECTION_TOKEN,\n      useExisting: NbSelectComponent\n    }, {\n      provide: NbFormFieldControl,\n      useExisting: NbSelectComponent\n    }, {\n      provide: NbFormFieldControlConfig,\n      useFactory: nbSelectFormFieldControlConfigFactory\n    }]), ɵngcc0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c40,\n    decls: 7,\n    vars: 4,\n    consts: [[\"type\", \"button\", 1, \"select-button\", 3, \"disabled\", \"ngClass\", \"blur\", \"keydown.arrowDown\", \"keydown.arrowUp\"], [\"selectButton\", \"\"], [4, \"ngIf\", \"ngIfElse\"], [\"placeholderTemplate\", \"\"], [\"icon\", \"chevron-down-outline\", \"pack\", \"nebular-essentials\", \"aria-hidden\", \"true\", 3, \"click\"], [3, \"size\", \"position\", \"width\", \"ngClass\", 4, \"nbPortal\"], [\"defaultSelectionTemplate\", \"\"], [3, \"size\", \"position\", \"ngClass\"]],\n    template: function NbSelectComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c39);\n        ɵngcc0.ɵɵelementStart(0, \"button\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"blur\", function NbSelectComponent_Template_button_blur_0_listener() {\n          return ctx.trySetTouched();\n        })(\"keydown.arrowDown\", function NbSelectComponent_Template_button_keydown_arrowDown_0_listener() {\n          return ctx.show();\n        })(\"keydown.arrowUp\", function NbSelectComponent_Template_button_keydown_arrowUp_0_listener() {\n          return ctx.show();\n        });\n        ɵngcc0.ɵɵtemplate(2, NbSelectComponent_ng_container_2_Template, 4, 2, \"ng-container\", 2);\n        ɵngcc0.ɵɵtemplate(3, NbSelectComponent_ng_template_3_Template, 1, 1, \"ng-template\", null, 3, ɵngcc0.ɵɵtemplateRefExtractor);\n        ɵngcc0.ɵɵelementStart(5, \"nb-icon\", 4);\n        ɵngcc0.ɵɵlistener(\"click\", function NbSelectComponent_Template_nb_icon_click_5_listener($event) {\n          return ctx.disabled && $event.stopPropagation();\n        });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(6, NbSelectComponent_nb_option_list_6_Template, 2, 5, \"nb-option-list\", 5);\n      }\n\n      if (rf & 2) {\n        const _r2 = ɵngcc0.ɵɵreference(4);\n\n        ɵngcc0.ɵɵproperty(\"disabled\", ctx.disabled)(\"ngClass\", ctx.selectButtonClasses);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.selectionModel.length)(\"ngIfElse\", _r2);\n      }\n    },\n    directives: function () {\n      return [ɵngcc2.NgClass, ɵngcc2.NgIf, NbIconComponent, NbPortalDirective, NbOptionListComponent];\n    },\n    styles: [\"[_nghost-%COMP%]{display:inline-block;max-width:100%}[dir=ltr]   [_nghost-%COMP%]   .select-button[_ngcontent-%COMP%]{text-align:left}[dir=ltr]   [_nghost-%COMP%]   .select-button[_ngcontent-%COMP%]   nb-icon[_ngcontent-%COMP%]{right:0.2em}[dir=rtl]   [_nghost-%COMP%]   .select-button[_ngcontent-%COMP%]{text-align:right}[dir=rtl]   [_nghost-%COMP%]   .select-button[_ngcontent-%COMP%]   nb-icon[_ngcontent-%COMP%]{left:0.2em}.full-width[_nghost-%COMP%]{width:100%}.nb-transition[_nghost-%COMP%]   .select-button[_ngcontent-%COMP%]{transition-duration:0.15s;transition-property:background-color,border-color,border-radius,box-shadow,color;transition-timing-function:ease-in}.select-button[_ngcontent-%COMP%]{position:relative;width:100%;overflow:hidden;text-overflow:ellipsis;text-transform:none;white-space:nowrap}nb-icon[_ngcontent-%COMP%]{font-size:1.5em;position:absolute;top:50%;transform:translateY(-50%);transition-duration:0.15s;transition-property:transform;transition-timing-function:ease-in}[dir=ltr][_ngcontent-%COMP%]   nb-icon[_ngcontent-%COMP%]{right:.5rem}[dir=rtl][_ngcontent-%COMP%]   nb-icon[_ngcontent-%COMP%]{left:.5rem}.open[_nghost-%COMP%]   nb-icon[_ngcontent-%COMP%]{transform:translateY(-50%) rotate(180deg)}\"],\n    changeDetection: 0\n  });\n  return NbSelectComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/*\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * NbOptionGroupComponent\n *\n * @styles\n *\n * option-group-text-color:\n * option-group-tiny-start-padding:\n * option-group-small-start-padding:\n * option-group-medium-start-padding:\n * option-group-large-start-padding:\n * option-group-giant-start-padding:\n **/\n\n\nlet NbOptionGroupComponent = /*#__PURE__*/(() => {\n  class NbOptionGroupComponent {\n    constructor() {\n      this.destroy$ = new Subject();\n      this._disabled = false;\n    }\n\n    get disabled() {\n      return this._disabled;\n    }\n\n    set disabled(value) {\n      this._disabled = convertToBoolProperty(value);\n\n      if (this.options) {\n        this.updateOptionsDisabledState();\n      }\n    }\n\n    get disabledAttribute() {\n      return this.disabled ? '' : null;\n    }\n\n    ngAfterContentInit() {\n      if (this.options.length) {\n        this.asyncUpdateOptionsDisabledState();\n      }\n\n      this.options.changes.pipe(takeUntil(this.destroy$)).subscribe(() => this.asyncUpdateOptionsDisabledState());\n    }\n\n    ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n    /**\n     * Sets disabled state for each option to current group disabled state.\n     */\n\n\n    updateOptionsDisabledState() {\n      this.options.forEach(option => option.setDisabledByGroupState(this.disabled));\n    }\n    /**\n     * Updates options disabled state after promise resolution.\n     * This way change detection will be triggered after options state updated.\n     * Use this method when updating options during change detection run (e.g. QueryList.changes, lifecycle hooks).\n     */\n\n\n    asyncUpdateOptionsDisabledState() {\n      // Wrap Promise into Observable with `takeUntil(this.destroy$)` to prevent update if component destroyed.\n      from(Promise.resolve()).pipe(takeUntil(this.destroy$)).subscribe(() => this.updateOptionsDisabledState());\n    }\n\n  }\n\n  NbOptionGroupComponent.ɵfac = function NbOptionGroupComponent_Factory(t) {\n    return new (t || NbOptionGroupComponent)();\n  };\n\n  NbOptionGroupComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbOptionGroupComponent,\n    selectors: [[\"nb-option-group\"]],\n    contentQueries: function NbOptionGroupComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NbOptionComponent, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n      }\n    },\n    hostVars: 1,\n    hostBindings: function NbOptionGroupComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"disabled\", ctx.disabledAttribute);\n      }\n    },\n    inputs: {\n      disabled: \"disabled\",\n      title: \"title\"\n    },\n    ngContentSelectors: _c42,\n    decls: 3,\n    vars: 1,\n    consts: [[1, \"option-group-title\"]],\n    template: function NbOptionGroupComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c41);\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵtext(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(2);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate(ctx.title);\n      }\n    },\n    styles: [\"[_nghost-%COMP%]{display:block}.option-group-title[_ngcontent-%COMP%]{display:block}\"],\n    changeDetection: 0\n  });\n  return NbOptionGroupComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * The `NbOptionListComponent` is container component for `NbOptionGroupComponent` and`NbOptionComponent` list.\n *\n * @styles\n *\n * option-list-max-height:\n * option-list-shadow:\n * option-list-background-color:\n * option-list-border-style:\n * option-list-border-width:\n * option-list-border-color:\n * option-list-border-radius:\n * option-list-adjacent-border-color:\n * option-list-adjacent-border-style:\n * option-list-adjacent-border-width:\n * */\n\n\nlet NbOptionListComponent = /*#__PURE__*/(() => {\n  class NbOptionListComponent {\n    constructor() {\n      this.size = 'medium';\n    }\n\n    get positionTop() {\n      return this.position === NbPosition.TOP;\n    }\n\n    get positionBottom() {\n      return this.position === NbPosition.BOTTOM;\n    }\n\n    get sizeTiny() {\n      return this.size === 'tiny';\n    }\n\n    get sizeSmall() {\n      return this.size === 'small';\n    }\n\n    get sizeMedium() {\n      return this.size === 'medium';\n    }\n\n    get sizeLarge() {\n      return this.size === 'large';\n    }\n\n    get sizeGiant() {\n      return this.size === 'giant';\n    }\n\n  }\n\n  NbOptionListComponent.ɵfac = function NbOptionListComponent_Factory(t) {\n    return new (t || NbOptionListComponent)();\n  };\n\n  NbOptionListComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbOptionListComponent,\n    selectors: [[\"nb-option-list\"]],\n    hostVars: 14,\n    hostBindings: function NbOptionListComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"position-top\", ctx.positionTop)(\"position-bottom\", ctx.positionBottom)(\"size-tiny\", ctx.sizeTiny)(\"size-small\", ctx.sizeSmall)(\"size-medium\", ctx.sizeMedium)(\"size-large\", ctx.sizeLarge)(\"size-giant\", ctx.sizeGiant);\n      }\n    },\n    inputs: {\n      size: \"size\",\n      position: \"position\"\n    },\n    ngContentSelectors: _c0,\n    decls: 2,\n    vars: 0,\n    consts: [[1, \"option-list\"]],\n    template: function NbOptionListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"ul\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return NbOptionListComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nconst NB_OPTION_LIST_COMPONENTS = [NbOptionListComponent, NbOptionComponent, NbOptionGroupComponent];\nlet NbOptionModule = /*#__PURE__*/(() => {\n  class NbOptionModule {}\n\n  NbOptionModule.ɵfac = function NbOptionModule_Factory(t) {\n    return new (t || NbOptionModule)();\n  };\n\n  NbOptionModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NbOptionModule\n  });\n  NbOptionModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, NbCheckboxModule]]\n  });\n  return NbOptionModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NbOptionModule, {\n    declarations: function () {\n      return [NbOptionListComponent, NbOptionComponent, NbOptionGroupComponent];\n    },\n    imports: function () {\n      return [CommonModule, NbCheckboxModule];\n    },\n    exports: function () {\n      return [NbOptionListComponent, NbOptionComponent, NbOptionGroupComponent];\n    }\n  });\n})();\n\nconst NB_SELECT_COMPONENTS = [NbSelectComponent, NbSelectLabelComponent];\nlet NbSelectModule = /*#__PURE__*/(() => {\n  class NbSelectModule {}\n\n  NbSelectModule.ɵfac = function NbSelectModule_Factory(t) {\n    return new (t || NbSelectModule)();\n  };\n\n  NbSelectModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NbSelectModule\n  });\n  NbSelectModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[NbSharedModule, NbOverlayModule, NbButtonModule, NbInputModule, NbCardModule, NbIconModule, NbOptionModule], NbOptionModule]\n  });\n  return NbSelectModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NbSelectModule, {\n    declarations: [NbSelectComponent, NbSelectLabelComponent],\n    imports: [NbSharedModule, NbOverlayModule, NbButtonModule, NbInputModule, NbCardModule, NbIconModule, NbOptionModule],\n    exports: [NbSelectComponent, NbSelectLabelComponent, NbOptionModule]\n  });\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n// Component class scoped counter for aria attributes.\n\n\nlet lastAutocompleteId = 0;\n/**\n * The `NbAutocompleteComponent` overlay component.\n * Provides an `NbOptionList` overlay component.\n * */\n\nlet NbAutocompleteComponent = /*#__PURE__*/(() => {\n  class NbAutocompleteComponent {\n    constructor(cd) {\n      this.cd = cd;\n      this.destroy$ = new Subject();\n      /**\n       * Component scoped id for aria attributes.\n       * */\n\n      this.id = `nb-autocomplete-${lastAutocompleteId++}`;\n      /**\n       * @docs-private\n       * Current overlay position because of we have to toggle overlayPosition\n       * in [ngClass] direction.\n       */\n\n      this._overlayPosition = '';\n      /**\n       * Autocomplete size, available sizes:\n       * `tiny`, `small`, `medium` (default), `large`, `giant`\n       */\n\n      this.size = 'medium';\n      /**\n       * Flag passed as input to always make first option active.\n       * */\n\n      this.activeFirst = false;\n      /**\n       * Will be emitted when selected value changes.\n       * */\n\n      this.selectedChange = new EventEmitter();\n    }\n\n    get overlayPosition() {\n      return this._overlayPosition;\n    }\n\n    set overlayPosition(value) {\n      this._overlayPosition = value; // Need run change detection after first set from NbAutocompleteDirective\n\n      this.cd.detectChanges();\n    }\n    /**\n     * Returns width of the input.\n     * */\n\n\n    get hostWidth() {\n      return this.hostRef.nativeElement.getBoundingClientRect().width;\n    }\n\n    ngAfterContentInit() {\n      this.options.changes.pipe(takeUntil(this.destroy$)).subscribe(() => this.cd.detectChanges());\n    }\n\n    ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n    /**\n     * Autocomplete knows nothing about host html input element.\n     * So, attach method set input hostRef for styling.\n     * */\n\n\n    setHost(hostRef) {\n      this.hostRef = hostRef;\n    }\n    /**\n     * Propagate selected value.\n     * */\n\n\n    emitSelected(selected) {\n      this.selectedChange.emit(selected);\n    }\n\n    get tiny() {\n      return this.size === 'tiny';\n    }\n\n    get small() {\n      return this.size === 'small';\n    }\n\n    get medium() {\n      return this.size === 'medium';\n    }\n\n    get large() {\n      return this.size === 'large';\n    }\n\n    get giant() {\n      return this.size === 'giant';\n    }\n\n  }\n\n  NbAutocompleteComponent.ɵfac = function NbAutocompleteComponent_Factory(t) {\n    return new (t || NbAutocompleteComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n  };\n\n  NbAutocompleteComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbAutocompleteComponent,\n    selectors: [[\"nb-autocomplete\"]],\n    contentQueries: function NbAutocompleteComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NbOptionComponent, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n      }\n    },\n    viewQuery: function NbAutocompleteComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(NbPortalDirective, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.portal = _t.first);\n      }\n    },\n    hostVars: 10,\n    hostBindings: function NbAutocompleteComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"size-tiny\", ctx.tiny)(\"size-small\", ctx.small)(\"size-medium\", ctx.medium)(\"size-large\", ctx.large)(\"size-giant\", ctx.giant);\n      }\n    },\n    inputs: {\n      size: \"size\",\n      activeFirst: \"activeFirst\",\n      handleDisplayFn: \"handleDisplayFn\",\n      optionsListClass: \"optionsListClass\",\n      optionsPanelClass: \"optionsPanelClass\"\n    },\n    outputs: {\n      selectedChange: \"selectedChange\"\n    },\n    ngContentSelectors: _c44,\n    decls: 1,\n    vars: 0,\n    consts: [[\"role\", \"listbox\", 3, \"size\", \"position\", \"width\", \"id\", \"empty\", \"ngClass\", 4, \"nbPortal\"], [\"role\", \"listbox\", 3, \"size\", \"position\", \"id\", \"ngClass\"]],\n    template: function NbAutocompleteComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c43);\n        ɵngcc0.ɵɵtemplate(0, NbAutocompleteComponent_nb_option_list_0_Template, 2, 8, \"nb-option-list\", 0);\n      }\n    },\n    directives: [NbPortalDirective, NbOptionListComponent, ɵngcc2.NgClass],\n    styles: [\"[_nghost-%COMP%]:hover{cursor:pointer}nb-option-list.empty[_ngcontent-%COMP%]{border:none}\"],\n    changeDetection: 0\n  });\n  return NbAutocompleteComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * The `NbAutocompleteDirective` provides a capability to expand input with\n * `NbAutocompleteComponent` overlay containing options to select and fill input with.\n *\n * @stacked-example(Showcase, autocomplete/autocomplete-showcase.component)\n *\n * ### Installation\n *\n * Import `NbAutocompleteModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbAutocompleteModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * You can bind control with form controls or ngModel.\n *\n * @stacked-example(Autocomplete form binding, autocomplete/autocomplete-form.component)\n *\n * Options in the autocomplete may be grouped using `nb-option-group` component.\n *\n * @stacked-example(Grouping, autocomplete/autocomplete-group.component)\n *\n * Autocomplete may change selected option value via provided function.\n *\n * @stacked-example(Custom display, autocomplete/autocomplete-custom-display.component)\n *\n * Also, autocomplete may make first option in option list active automatically.\n *\n * @stacked-example(Active first, autocomplete/autocomplete-active-first.component)\n *\n * */\n\n\nlet NbAutocompleteDirective = /*#__PURE__*/(() => {\n  class NbAutocompleteDirective {\n    constructor(hostRef, overlay, cd, triggerStrategyBuilder, positionBuilder, activeDescendantKeyManagerFactory, renderer) {\n      this.hostRef = hostRef;\n      this.overlay = overlay;\n      this.cd = cd;\n      this.triggerStrategyBuilder = triggerStrategyBuilder;\n      this.positionBuilder = positionBuilder;\n      this.activeDescendantKeyManagerFactory = activeDescendantKeyManagerFactory;\n      this.renderer = renderer;\n      this.destroy$ = new Subject();\n\n      this._onChange = () => {};\n\n      this._onTouched = () => {};\n      /**\n       * Determines options overlay offset (in pixels).\n       **/\n\n\n      this.overlayOffset = 8;\n      this._focusInputOnValueChange = true;\n      /**\n       * Determines options overlay scroll strategy.\n       **/\n\n      this.scrollStrategy = 'block';\n      this.role = 'combobox';\n      this.ariaAutocomplete = 'list';\n      this.hasPopup = 'true';\n    }\n    /**\n     * Determines is autocomplete overlay opened.\n     * */\n\n\n    get isOpen() {\n      return this.overlayRef && this.overlayRef.hasAttached();\n    }\n    /**\n     * Determines is autocomplete overlay closed.\n     * */\n\n\n    get isClosed() {\n      return !this.isOpen;\n    }\n    /**\n     * Provides autocomplete component.\n     * */\n\n\n    get autocomplete() {\n      return this._autocomplete;\n    }\n\n    set autocomplete(autocomplete) {\n      this._autocomplete = autocomplete;\n    }\n    /**\n     * Determines if the input will be focused when the control value is changed\n     * */\n\n\n    get focusInputOnValueChange() {\n      return this._focusInputOnValueChange;\n    }\n\n    set focusInputOnValueChange(value) {\n      this._focusInputOnValueChange = convertToBoolProperty(value);\n    }\n\n    get top() {\n      return this.isOpen && this.autocomplete.options.length && this.autocomplete.overlayPosition === NbPosition.TOP;\n    }\n\n    get bottom() {\n      return this.isOpen && this.autocomplete.options.length && this.autocomplete.overlayPosition === NbPosition.BOTTOM;\n    }\n\n    get ariaExpanded() {\n      return this.isOpen && this.isOpen.toString();\n    }\n\n    get ariaOwns() {\n      return this.isOpen ? this.autocomplete.id : null;\n    }\n\n    get ariaActiveDescendant() {\n      return this.isOpen && this.keyManager.activeItem ? this.keyManager.activeItem.id : null;\n    }\n\n    ngAfterViewInit() {\n      this.triggerStrategy = this.createTriggerStrategy();\n      this.subscribeOnTriggers();\n    }\n\n    ngOnDestroy() {\n      if (this.triggerStrategy) {\n        this.triggerStrategy.destroy();\n      }\n\n      if (this.positionStrategy) {\n        this.positionStrategy.dispose();\n      }\n\n      if (this.overlayRef) {\n        this.overlayRef.dispose();\n      }\n\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n\n    handleInput() {\n      const currentValue = this.hostRef.nativeElement.value;\n\n      this._onChange(currentValue);\n\n      this.setHostInputValue(this.getDisplayValue(currentValue));\n      this.show();\n    }\n\n    handleKeydown() {\n      this.show();\n    }\n\n    handleBlur() {\n      this._onTouched();\n    }\n\n    show() {\n      if (this.isClosed) {\n        this.attachToOverlay();\n        this.setActiveItem();\n      }\n    }\n\n    hide() {\n      if (this.isOpen) {\n        this.overlayRef.detach(); // Need to update class via @HostBinding\n\n        this.cd.markForCheck();\n      }\n    }\n\n    writeValue(value) {\n      this.handleInputValueUpdate(value);\n    }\n\n    registerOnChange(fn) {\n      this._onChange = fn;\n    }\n\n    registerOnTouched(fn) {\n      this._onTouched = fn;\n    }\n\n    setDisabledState(disabled) {\n      this.renderer.setProperty(this.hostRef.nativeElement, 'disabled', disabled);\n    }\n\n    subscribeOnOptionClick() {\n      /**\n       * If the user changes provided options list in the runtime we have to handle this\n       * and resubscribe on options selection changes event.\n       * Otherwise, the user will not be able to select new options.\n       * */\n      this.autocomplete.options.changes.pipe(tap(() => this.setActiveItem()), startWith(this.autocomplete.options), switchMap(options => {\n        return merge(...options.map(option => option.click));\n      }), takeUntil(this.destroy$)).subscribe(clickedOption => this.handleInputValueUpdate(clickedOption.value));\n    }\n\n    subscribeOnPositionChange() {\n      this.positionStrategy.positionChange.pipe(takeUntil(this.destroy$)).subscribe(position => {\n        this.autocomplete.overlayPosition = position;\n        this.cd.detectChanges();\n      });\n    }\n\n    getActiveItem() {\n      return this.keyManager.activeItem;\n    }\n\n    setupAutocomplete() {\n      this.autocomplete.setHost(this.customOverlayHost || this.hostRef);\n    }\n\n    getDisplayValue(value) {\n      const displayFn = this.autocomplete.handleDisplayFn;\n      return displayFn ? displayFn(value) : value;\n    }\n\n    getContainer() {\n      return this.overlayRef && this.isOpen && {\n        location: {\n          nativeElement: this.overlayRef.overlayElement\n        }\n      };\n    }\n\n    handleInputValueUpdate(value) {\n      if (value === undefined || value === null) {\n        return;\n      }\n\n      this.setHostInputValue(value);\n\n      this._onChange(value);\n\n      if (this.focusInputOnValueChange) {\n        this.hostRef.nativeElement.focus();\n      }\n\n      this.autocomplete.emitSelected(value);\n      this.hide();\n    }\n\n    subscribeOnTriggers() {\n      this.triggerStrategy.show$.pipe(filter(() => this.isClosed)).subscribe(() => this.show());\n      this.triggerStrategy.hide$.pipe(filter(() => this.isOpen)).subscribe(() => this.hide());\n    }\n\n    createTriggerStrategy() {\n      return this.triggerStrategyBuilder.trigger(NbTrigger.FOCUS).host(this.hostRef.nativeElement).container(() => this.getContainer()).build();\n    }\n\n    createKeyManager() {\n      this.keyManager = this.activeDescendantKeyManagerFactory.create(this.autocomplete.options);\n    }\n\n    setHostInputValue(value) {\n      this.hostRef.nativeElement.value = this.getDisplayValue(value);\n    }\n\n    createPositionStrategy() {\n      return this.positionBuilder.connectedTo(this.customOverlayHost || this.hostRef).position(NbPosition.BOTTOM).offset(this.overlayOffset).adjustment(NbAdjustment.VERTICAL);\n    }\n\n    subscribeOnOverlayKeys() {\n      this.overlayRef.keydownEvents().pipe(takeUntil(this.destroy$)).subscribe(event => {\n        if (event.keyCode === ESCAPE && this.isOpen) {\n          event.preventDefault();\n          this.hostRef.nativeElement.focus();\n          this.hide();\n        } else if (event.keyCode === ENTER) {\n          event.preventDefault();\n          const activeItem = this.getActiveItem();\n\n          if (!activeItem) {\n            return;\n          }\n\n          this.handleInputValueUpdate(activeItem.value);\n        } else {\n          this.keyManager.onKeydown(event);\n        }\n      });\n    }\n\n    setActiveItem() {\n      // If autocomplete has activeFirst input set to true,\n      // keyManager set first option active, otherwise - reset active option.\n      const mode = this.autocomplete.activeFirst ? NbKeyManagerActiveItemMode.FIRST_ACTIVE : NbKeyManagerActiveItemMode.RESET_ACTIVE;\n      this.keyManager.setActiveItem(mode);\n      this.cd.detectChanges();\n    }\n\n    attachToOverlay() {\n      if (!this.overlayRef) {\n        this.setupAutocomplete();\n        this.initOverlay();\n      }\n\n      this.overlayRef.attach(this.autocomplete.portal);\n    }\n\n    createOverlay() {\n      const scrollStrategy = this.createScrollStrategy();\n      this.overlayRef = this.overlay.create({\n        positionStrategy: this.positionStrategy,\n        scrollStrategy,\n        panelClass: this.autocomplete.optionsPanelClass\n      });\n    }\n\n    initOverlay() {\n      this.positionStrategy = this.createPositionStrategy();\n      this.createKeyManager();\n      this.subscribeOnPositionChange();\n      this.subscribeOnOptionClick();\n      this.checkOverlayVisibility();\n      this.createOverlay();\n      this.subscribeOnOverlayKeys();\n    }\n\n    checkOverlayVisibility() {\n      this.autocomplete.options.changes.pipe(takeUntil(this.destroy$)).subscribe(() => {\n        if (!this.autocomplete.options.length) {\n          this.hide();\n        }\n      });\n    }\n\n    createScrollStrategy() {\n      return this.overlay.scrollStrategies[this.scrollStrategy]();\n    }\n\n  }\n\n  NbAutocompleteDirective.ɵfac = function NbAutocompleteDirective_Factory(t) {\n    return new (t || NbAutocompleteDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(NbOverlayService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(NbTriggerStrategyBuilderService), ɵngcc0.ɵɵdirectiveInject(NbPositionBuilderService), ɵngcc0.ɵɵdirectiveInject(NbActiveDescendantKeyManagerFactoryService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n  };\n\n  NbAutocompleteDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NbAutocompleteDirective,\n    selectors: [[\"input\", \"nbAutocomplete\", \"\"]],\n    hostVars: 10,\n    hostBindings: function NbAutocompleteDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function NbAutocompleteDirective_input_HostBindingHandler() {\n          return ctx.handleInput();\n        })(\"keydown.arrowDown\", function NbAutocompleteDirective_keydown_arrowDown_HostBindingHandler() {\n          return ctx.handleKeydown();\n        })(\"keydown.arrowUp\", function NbAutocompleteDirective_keydown_arrowUp_HostBindingHandler() {\n          return ctx.handleKeydown();\n        })(\"blur\", function NbAutocompleteDirective_blur_HostBindingHandler() {\n          return ctx.handleBlur();\n        });\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"role\", ctx.role)(\"aria-autocomplete\", ctx.ariaAutocomplete)(\"haspopup\", ctx.hasPopup)(\"aria-expanded\", ctx.ariaExpanded)(\"aria-owns\", ctx.ariaOwns)(\"aria-activedescendant\", ctx.ariaActiveDescendant);\n        ɵngcc0.ɵɵclassProp(\"nb-autocomplete-position-top\", ctx.top)(\"nb-autocomplete-position-bottom\", ctx.bottom);\n      }\n    },\n    inputs: {\n      overlayOffset: \"overlayOffset\",\n      scrollStrategy: \"scrollStrategy\",\n      autocomplete: [\"nbAutocomplete\", \"autocomplete\"],\n      focusInputOnValueChange: \"focusInputOnValueChange\",\n      customOverlayHost: \"customOverlayHost\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NbAutocompleteDirective),\n      multi: true\n    }])]\n  });\n  return NbAutocompleteDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nconst NB_AUTOCOMPLETE_COMPONENTS = [NbAutocompleteComponent, NbAutocompleteDirective];\nlet NbAutocompleteModule = /*#__PURE__*/(() => {\n  class NbAutocompleteModule {}\n\n  NbAutocompleteModule.ɵfac = function NbAutocompleteModule_Factory(t) {\n    return new (t || NbAutocompleteModule)();\n  };\n\n  NbAutocompleteModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NbAutocompleteModule\n  });\n  NbAutocompleteModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, FormsModule, NbOverlayModule, NbCardModule, NbOptionModule], NbOptionModule]\n  });\n  return NbAutocompleteModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NbAutocompleteModule, {\n    declarations: function () {\n      return [NbAutocompleteComponent, NbAutocompleteDirective];\n    },\n    imports: function () {\n      return [CommonModule, FormsModule, NbOverlayModule, NbCardModule, NbOptionModule];\n    },\n    exports: function () {\n      return [NbAutocompleteComponent, NbAutocompleteDirective, NbOptionModule];\n    }\n  });\n})();\n\nvar NbWindowState = /*#__PURE__*/(() => {\n  (function (NbWindowState) {\n    NbWindowState[\"MINIMIZED\"] = \"minimized\";\n    NbWindowState[\"MAXIMIZED\"] = \"maximized\";\n    NbWindowState[\"FULL_SCREEN\"] = \"full-screen\";\n  })(NbWindowState || (NbWindowState = {}));\n\n  return NbWindowState;\n})();\nconst NB_WINDOW_DEFAULT_BUTTONS_CONFIG = {\n  minimize: true,\n  maximize: true,\n  fullScreen: true\n};\n/**\n * Window configuration options.\n */\n\nclass NbWindowConfig {\n  constructor(...configs) {\n    /**\n     * Window title.\n     */\n    this.title = '';\n    /**\n     * Initial window state. Full screen by default.\n     */\n\n    this.initialState = NbWindowState.FULL_SCREEN;\n    /**\n     * If true than backdrop will be rendered behind window.\n     * By default set to true.\n     */\n\n    this.hasBackdrop = true;\n    /**\n     * If set to true mouse clicks on backdrop will close a window.\n     * Default is true.\n     */\n\n    this.closeOnBackdropClick = true;\n    /**\n     * If true then escape press will close a window.\n     * Default is true.\n     */\n\n    this.closeOnEsc = true;\n    /**\n     * Class to be applied to the window.\n     */\n\n    this.windowClass = '';\n    /**\n     * Both, template and component may receive data through `config.context` property.\n     * For components, this data will be set as component properties.\n     * For templates, you can access it inside template as $implicit.\n     */\n\n    this.context = {};\n    /**\n     * Where the attached component should live in Angular's *logical* component tree.\n     * This affects what is available for injection and the change detection order for the\n     * component instantiated inside of the window. This does not affect where the window\n     * content will be rendered.\n     */\n\n    this.viewContainerRef = null;\n    /**\n     * Windows control buttons can be hidden by setting according property to false.\n     */\n\n    this.buttons = {};\n    Object.assign(this, ...configs);\n    this.applyDefaultButtonConfig();\n  }\n\n  applyDefaultButtonConfig() {\n    Object.assign(this, {\n      buttons: Object.assign(Object.assign({}, NB_WINDOW_DEFAULT_BUTTONS_CONFIG), this.buttons)\n    });\n  }\n\n}\n\nconst NB_WINDOW_CONTENT = new InjectionToken('Nebular Window Content');\nconst NB_WINDOW_CONFIG = new InjectionToken('Nebular Window Config');\nconst NB_WINDOW_CONTEXT = new InjectionToken('Nebular Window Context');\n/**\n * The `NbWindowRef` helps to manipulate window after it was created.\n * The window can be dismissed by using `close` method of the windowRef.\n * You can access rendered component as `componentRef` property of the windowRef.\n */\n\nclass NbWindowRef {\n  constructor(config) {\n    this.config = config;\n    this.stateChange$ = new ReplaySubject(1);\n    this._closed = false;\n    this.closed$ = new Subject();\n    this.state = config.initialState;\n  }\n  /**\n   * Current window state.\n   */\n\n\n  get state() {\n    return this.stateValue;\n  }\n\n  set state(newState) {\n    if (newState && this.stateValue !== newState) {\n      this.prevStateValue = this.state;\n      this.stateValue = newState;\n      this.stateChange$.next({\n        oldState: this.prevStateValue,\n        newState\n      });\n    }\n  }\n  /**\n   * Emits when window state change.\n   */\n\n\n  get stateChange() {\n    return this.stateChange$.asObservable();\n  }\n  /**\n   * Emits when window was closed.\n   */\n\n\n  get onClose() {\n    return this.closed$.asObservable();\n  }\n  /**\n   * Minimize window.\n   */\n\n\n  minimize() {\n    this.state = NbWindowState.MINIMIZED;\n  }\n  /**\n   * Maximize window.\n   */\n\n\n  maximize() {\n    this.state = NbWindowState.MAXIMIZED;\n  }\n  /**\n   * Set window on top.\n   */\n\n\n  fullScreen() {\n    this.state = NbWindowState.FULL_SCREEN;\n  }\n\n  toPreviousState() {\n    this.state = this.prevStateValue;\n  }\n  /**\n   * Closes window.\n   * */\n\n\n  close() {\n    if (this._closed) {\n      return;\n    }\n\n    this._closed = true;\n    this.componentRef.destroy();\n    this.stateChange$.complete();\n    this.closed$.next();\n    this.closed$.complete();\n  }\n\n}\n\nlet NbWindowsContainerComponent = /*#__PURE__*/(() => {\n  class NbWindowsContainerComponent {}\n\n  NbWindowsContainerComponent.ɵfac = function NbWindowsContainerComponent_Factory(t) {\n    return new (t || NbWindowsContainerComponent)();\n  };\n\n  NbWindowsContainerComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbWindowsContainerComponent,\n    selectors: [[\"nb-windows-container\"]],\n    viewQuery: function NbWindowsContainerComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c45, 7, ViewContainerRef);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.viewContainerRef = _t.first);\n      }\n    },\n    decls: 2,\n    vars: 0,\n    consts: [[\"viewContainerRef\", \"\"]],\n    template: function NbWindowsContainerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, null, 0);\n      }\n    },\n    styles: [\"[_nghost-%COMP%]{display:flex;align-items:flex-end;overflow-x:auto}[_nghost-%COMP%]     nb-window:not(.full-screen){margin:0 2rem}\"]\n  });\n  return NbWindowsContainerComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet NbWindowComponent = /*#__PURE__*/(() => {\n  class NbWindowComponent {\n    constructor(content, context, windowRef, config, focusTrapFactory, elementRef, renderer) {\n      this.content = content;\n      this.context = context;\n      this.windowRef = windowRef;\n      this.config = config;\n      this.focusTrapFactory = focusTrapFactory;\n      this.elementRef = elementRef;\n      this.renderer = renderer;\n    }\n\n    get isFullScreen() {\n      return this.windowRef.state === NbWindowState.FULL_SCREEN;\n    }\n\n    get maximized() {\n      return this.windowRef.state === NbWindowState.MAXIMIZED;\n    }\n\n    get minimized() {\n      return this.windowRef.state === NbWindowState.MINIMIZED;\n    }\n\n    get showMinimize() {\n      return this.config.buttons.minimize;\n    }\n\n    get showMaximize() {\n      return this.config.buttons.maximize;\n    }\n\n    get showFullScreen() {\n      return this.config.buttons.fullScreen;\n    }\n\n    ngOnInit() {\n      this.focusTrap = this.focusTrapFactory.create(this.elementRef.nativeElement);\n      this.focusTrap.blurPreviouslyFocusedElement();\n      this.focusTrap.focusInitialElement();\n\n      if (this.config.windowClass) {\n        this.renderer.addClass(this.elementRef.nativeElement, this.config.windowClass);\n      }\n    }\n\n    ngAfterViewChecked() {\n      if (!this.overlayContainer || this.overlayContainer.isAttached) {\n        return;\n      }\n\n      if (this.content instanceof TemplateRef) {\n        this.attachTemplate();\n      } else {\n        this.attachComponent();\n      }\n    }\n\n    ngOnDestroy() {\n      if (this.focusTrap) {\n        this.focusTrap.restoreFocus();\n      }\n\n      this.close();\n    }\n\n    minimize() {\n      if (this.windowRef.state === NbWindowState.MINIMIZED) {\n        this.windowRef.toPreviousState();\n      } else {\n        this.windowRef.minimize();\n      }\n    }\n\n    maximize() {\n      this.windowRef.maximize();\n    }\n\n    fullScreen() {\n      this.windowRef.fullScreen();\n    }\n\n    maximizeOrFullScreen() {\n      if (this.windowRef.state === NbWindowState.MINIMIZED && this.showMaximize) {\n        this.maximize();\n      } else {\n        this.fullScreen();\n      }\n    }\n\n    close() {\n      this.windowRef.close();\n    }\n\n    attachTemplate() {\n      this.overlayContainer.attachTemplatePortal(new NbTemplatePortal(this.content, null, this.context));\n    }\n\n    attachComponent() {\n      const portal = new NbComponentPortal(this.content, null, null, this.cfr);\n      const ref = this.overlayContainer.attachComponentPortal(portal, this.context);\n      ref.changeDetectorRef.detectChanges();\n    }\n\n  }\n\n  NbWindowComponent.ɵfac = function NbWindowComponent_Factory(t) {\n    return new (t || NbWindowComponent)(ɵngcc0.ɵɵdirectiveInject(NB_WINDOW_CONTENT), ɵngcc0.ɵɵdirectiveInject(NB_WINDOW_CONTEXT), ɵngcc0.ɵɵdirectiveInject(NbWindowRef), ɵngcc0.ɵɵdirectiveInject(NbWindowConfig), ɵngcc0.ɵɵdirectiveInject(NbFocusTrapFactoryService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n  };\n\n  NbWindowComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbWindowComponent,\n    selectors: [[\"nb-window\"]],\n    viewQuery: function NbWindowComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(NbOverlayContainerComponent, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.overlayContainer = _t.first);\n      }\n    },\n    hostVars: 6,\n    hostBindings: function NbWindowComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"full-screen\", ctx.isFullScreen)(\"maximized\", ctx.maximized)(\"minimized\", ctx.minimized);\n      }\n    },\n    inputs: {\n      cfr: \"cfr\"\n    },\n    decls: 11,\n    vars: 5,\n    consts: [[\"cdkFocusInitial\", \"\", \"tabindex\", \"-1\", 1, \"title\"], [1, \"buttons\"], [4, \"ngIf\"], [\"nbButton\", \"\", \"ghost\", \"\", 3, \"click\"], [\"icon\", \"close-outline\", \"pack\", \"nebular-essentials\"], [\"icon\", \"minus-outline\", \"pack\", \"nebular-essentials\"], [\"nbButton\", \"\", \"ghost\", \"\", 3, \"click\", 4, \"ngIf\"], [\"icon\", \"collapse-outline\", \"pack\", \"nebular-essentials\"], [\"icon\", \"expand-outline\", \"pack\", \"nebular-essentials\"]],\n    template: function NbWindowComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"nb-card\");\n        ɵngcc0.ɵɵelementStart(1, \"nb-card-header\");\n        ɵngcc0.ɵɵelementStart(2, \"div\", 0);\n        ɵngcc0.ɵɵtext(3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(4, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(5, NbWindowComponent_ng_container_5_Template, 3, 0, \"ng-container\", 2);\n        ɵngcc0.ɵɵtemplate(6, NbWindowComponent_ng_container_6_Template, 2, 1, \"ng-container\", 2);\n        ɵngcc0.ɵɵtemplate(7, NbWindowComponent_ng_container_7_Template, 2, 1, \"ng-container\", 2);\n        ɵngcc0.ɵɵelementStart(8, \"button\", 3);\n        ɵngcc0.ɵɵlistener(\"click\", function NbWindowComponent_Template_button_click_8_listener() {\n          return ctx.close();\n        });\n        ɵngcc0.ɵɵelement(9, \"nb-icon\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(10, NbWindowComponent_nb_card_body_10_Template, 2, 0, \"nb-card-body\", 2);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵtextInterpolate(ctx.config.title);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showMinimize);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showMaximize);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showFullScreen);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.maximized || ctx.isFullScreen);\n      }\n    },\n    directives: [NbCardComponent, NbCardHeaderComponent, ɵngcc2.NgIf, NbButtonComponent, NbIconComponent, NbCardBodyComponent, NbOverlayContainerComponent],\n    styles: [\"[_nghost-%COMP%]{flex:1 0 auto;min-width:20rem}[_nghost-%COMP%]   nb-card[_ngcontent-%COMP%]{margin:0}[_nghost-%COMP%]   nb-card-header[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;overflow:hidden}[_nghost-%COMP%]   .title[_ngcontent-%COMP%]{flex:1 0 auto;margin-right:3rem;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}[_nghost-%COMP%]   .buttons[_ngcontent-%COMP%]{width:9.5rem;display:flex;justify-content:flex-end}[_nghost-%COMP%]   .buttons[_ngcontent-%COMP%]   [nbButton][_ngcontent-%COMP%]{flex:0 0 3rem}.full-screen[_nghost-%COMP%]{position:fixed;top:50%;left:50%;transform:translate(-50%, -50%)}.maximized[_nghost-%COMP%]   nb-card[_ngcontent-%COMP%]{border-bottom-left-radius:0;border-bottom-right-radius:0}.minimized[_nghost-%COMP%]   nb-card[_ngcontent-%COMP%]{border-bottom-left-radius:0;border-bottom-right-radius:0;height:auto}.minimized[_nghost-%COMP%]   nb-card[_ngcontent-%COMP%]   nb-card-header[_ngcontent-%COMP%]{border-bottom:none}\"]\n  });\n  return NbWindowComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * The `NbWindowService` can be used to open windows.\n *\n * @stacked-example(Showcase, window/window-showcase.component)\n *\n * ### Installation\n *\n * Import `NbWindowModule` to your app module.\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbWindowModule.forRoot(config),\n *   ],\n * })\n * export class AppModule { }\n * ```\n *\n * If you are using it in a lazy loaded module than you have to install `NbWindowModule.forChild`:\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbWindowModule.forChild(config),\n *   ],\n * })\n * export class LazyLoadedModule { }\n * ```\n *\n * ### Usage\n *\n * A new window can be opened by calling the `open` method with a component or template to be loaded\n * and an optional configuration.\n * `open` method will return `NbWindowRef` that can be used for the further manipulations.\n *\n * ```ts\n * const windowRef = this.windowService.open(MyComponent, { ... });\n * ```\n *\n * `NbWindowRef` gives you ability manipulate opened window.\n * Also, you can inject `NbWindowRef` inside provided component which rendered in window.\n *\n * ```ts\n * this.windowService.open(MyWindowComponent, { ... });\n *\n * // my.component.ts\n * constructor(protected windowRef: NbWindowRef) {\n * }\n *\n * minimize() {\n *   this.windowRef.minimize();\n * }\n *\n * close() {\n *   this.windowRef.close();\n * }\n * ```\n *\n * Instead of component you can create window from TemplateRef. As usual you can access context provided via config\n * via `let-` variables. Also you can get reference to the `NbWindowRef` in context's `windowRef` property.\n *\n * @stacked-example(Window content from TemplateRef, window/template-window.component)\n *\n * ### Configuration\n *\n * As mentioned above, `open` method of the `NbWindowService` may receive optional configuration options.\n * Also, you can modify default windows configuration through `NbWindowModule.forRoot({ ... })`.\n * You can read about all available options on [API tab](docs/components/window/api#nbwindowconfig).\n *\n * @stacked-example(Configuration, window/windows-backdrop.component)\n *\n * You can configure which buttons are available in a window via the `buttons` property of the window config.\n * @stacked-example(Control buttons, window/window-controls.component)\n *\n */\n\n\nlet NbWindowService = /*#__PURE__*/(() => {\n  class NbWindowService {\n    constructor(componentFactoryResolver, overlayService, overlayPositionBuilder, blockScrollStrategy, defaultWindowsConfig, cfr, document) {\n      this.componentFactoryResolver = componentFactoryResolver;\n      this.overlayService = overlayService;\n      this.overlayPositionBuilder = overlayPositionBuilder;\n      this.blockScrollStrategy = blockScrollStrategy;\n      this.defaultWindowsConfig = defaultWindowsConfig;\n      this.cfr = cfr;\n      this.openWindows = [];\n      this.document = document;\n    }\n    /**\n     * Opens new window.\n     * @param windowContent\n     * @param windowConfig\n     * */\n\n\n    open(windowContent, windowConfig = {}) {\n      if (this.shouldCreateWindowsContainer()) {\n        this.createWindowsContainer();\n      }\n\n      const config = new NbWindowConfig(this.defaultWindowsConfig, windowConfig);\n      const windowRef = new NbWindowRef(config);\n      windowRef.componentRef = this.appendWindow(windowContent, config, windowRef);\n      this.openWindows.push(windowRef);\n      this.subscribeToEvents(windowRef);\n      return windowRef;\n    }\n\n    shouldCreateWindowsContainer() {\n      if (this.windowsContainerViewRef) {\n        const containerEl = this.windowsContainerViewRef.element.nativeElement;\n        return !this.document.body.contains(containerEl);\n      }\n\n      return true;\n    }\n\n    createWindowsContainer() {\n      if (this.overlayRef) {\n        this.overlayRef.dispose();\n      }\n\n      this.overlayRef = this.overlayService.create({\n        scrollStrategy: this.overlayService.scrollStrategies.noop(),\n        positionStrategy: this.overlayPositionBuilder.global().bottom().right(),\n        hasBackdrop: true\n      });\n      const windowsContainerPortal = new NbComponentPortal(NbWindowsContainerComponent, null, null, this.cfr);\n      const overlayRef = this.overlayRef.attach(windowsContainerPortal);\n      this.windowsContainerViewRef = overlayRef.instance.viewContainerRef;\n    }\n\n    appendWindow(content, config, windowRef) {\n      const context = content instanceof TemplateRef ? {\n        $implicit: config.context,\n        windowRef\n      } : config.context;\n      const providers = [{\n        provide: NB_WINDOW_CONTENT,\n        useValue: content\n      }, {\n        provide: NB_WINDOW_CONTEXT,\n        useValue: context\n      }, {\n        provide: NbWindowConfig,\n        useValue: config\n      }, {\n        provide: NbWindowRef,\n        useValue: windowRef\n      }];\n      const parentInjector = config.viewContainerRef ? config.viewContainerRef.injector : this.windowsContainerViewRef.injector;\n      const injector = Injector.create({\n        parent: parentInjector,\n        providers\n      });\n      const windowFactory = this.componentFactoryResolver.resolveComponentFactory(NbWindowComponent);\n      const ref = this.windowsContainerViewRef.createComponent(windowFactory, null, injector);\n      ref.instance.cfr = this.cfr;\n      ref.changeDetectorRef.detectChanges();\n      return ref;\n    }\n\n    subscribeToEvents(windowRef) {\n      if (windowRef.config.closeOnBackdropClick) {\n        this.overlayRef.backdropClick().subscribe(() => windowRef.close());\n      }\n\n      if (windowRef.config.closeOnEsc) {\n        this.overlayRef.keydownEvents().pipe(filter(event => event.keyCode === 27)).subscribe(() => windowRef.close());\n      }\n\n      windowRef.stateChange.subscribe(() => this.checkAndUpdateOverlay());\n      windowRef.onClose.subscribe(() => {\n        this.openWindows.splice(this.openWindows.indexOf(windowRef), 1);\n        this.checkAndUpdateOverlay();\n      });\n    }\n\n    checkAndUpdateOverlay() {\n      const fullScreenWindows = this.openWindows.filter(w => w.state === NbWindowState.FULL_SCREEN);\n\n      if (fullScreenWindows.length > 0) {\n        this.blockScrollStrategy.enable();\n      } else {\n        this.blockScrollStrategy.disable();\n      }\n\n      if (fullScreenWindows.some(w => w.config.hasBackdrop)) {\n        this.overlayRef.backdropElement.removeAttribute('hidden');\n      } else {\n        this.overlayRef.backdropElement.setAttribute('hidden', '');\n      }\n    }\n\n  }\n\n  NbWindowService.ɵfac = function NbWindowService_Factory(t) {\n    return new (t || NbWindowService)(ɵngcc0.ɵɵinject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵinject(NbOverlayService), ɵngcc0.ɵɵinject(NbOverlayPositionBuilder), ɵngcc0.ɵɵinject(NbBlockScrollStrategyAdapter), ɵngcc0.ɵɵinject(NB_WINDOW_CONFIG), ɵngcc0.ɵɵinject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵinject(NB_DOCUMENT));\n  };\n\n  NbWindowService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: NbWindowService,\n    factory: NbWindowService.ɵfac\n  });\n  return NbWindowService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet NbWindowModule = /*#__PURE__*/(() => {\n  class NbWindowModule {\n    static forRoot(defaultConfig) {\n      return {\n        ngModule: NbWindowModule,\n        providers: [NbWindowService, {\n          provide: NB_WINDOW_CONFIG,\n          useValue: defaultConfig\n        }]\n      };\n    }\n\n    static forChild(defaultConfig) {\n      return {\n        ngModule: NbWindowModule,\n        providers: [NbWindowService, {\n          provide: NB_WINDOW_CONFIG,\n          useValue: defaultConfig\n        }]\n      };\n    }\n\n  }\n\n  NbWindowModule.ɵfac = function NbWindowModule_Factory(t) {\n    return new (t || NbWindowModule)();\n  };\n\n  NbWindowModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NbWindowModule\n  });\n  NbWindowModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, NbOverlayModule, NbCardModule, NbIconModule, NbButtonModule]]\n  });\n  return NbWindowModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NbWindowModule, {\n    declarations: function () {\n      return [NbWindowsContainerComponent, NbWindowComponent];\n    },\n    imports: function () {\n      return [CommonModule, NbOverlayModule, NbCardModule, NbIconModule, NbButtonModule];\n    }\n  });\n})();\n/**\n * The `NbTimePickerDirective` is form control that gives you ability to select a time. The timepicker\n * is shown when input receives a `focus` event.\n * ```html\n * <input [nbTimepicker]=\"timepicker\">\n * <nb-timepicker #timepicker></nb-timepicker>\n * ```\n *\n * @stacked-example(Showcase, timepicker/timepicker-showcase.component)\n *\n * ### Installation\n *\n * Import `NbTimepickerModule.forRoot()` to your root module.\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbTimepickerModule.forRoot(),\n *   ],\n * })\n * export class AppModule { }\n * ```\n * And `NbTimepickerModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbTimepickerModule,\n *   ],\n * })\n * export class PageModule { }\n *\n * ```\n * <div id=\"native-parse-issue\" class=\"note note-warning\">\n * <div class=\"note-title\">Note</div>\n * <div class=\"note-body\">\n * Timepicker uses native Date object by default, which doesn't support parsing by custom format.\n * According to the ECMAScript specification, the only supported format is a format described by ISO 8061 standard.\n * This standard requires date part to be included in the date string,\n * meaning you have to type a date+time in the input.\n * We highly recommend you to use NbDateFnsDateModule or NbMomentDateModule to be able to support time only strings in\n * the timepicker inputs. These modules use date-fns and moment date libraries, which provide capabilities\n * to parse time only strings.\n * See \"Formatting Issue\" at\n * <a href=\"https://akveo.github.io/nebular/docs/components/datepicker/overview#formatting-issue\">Date picker docs</a>\n * for installation instructions.\n * </div>\n * </div>\n * <hr>\n *\n * ### Usage\n *\n * To show seconds column along with hours and minutes use `withSeconds` input\n *\n * ```html\n * <input [nbTimepicker]=\"timepicker\">\n * <nb-timepicker #timepicker withSeconds></nb-timepicker>\n * ```\n * @stacked-example(Time picker with seconds, timepicker/timepicker-with-seconds.component)\n *\n * To force timepicker work in 12 hours format, use `twelveHoursFormat` input.\n * By default, timepicker choose 12 or 24 formats based on application locale standards\n *\n * ```html\n * <input [nbTimepicker]=\"timepicker\" twelveHoursFormat>\n * <nb-timepicker #timepicker></nb-timepicker>\n * ```\n *\n * @stacked-example(Twelve hours format showcase, timepicker/timepicker-twelve-hours-format.component)\n *\n * A single column picker with options value as time and minute, so users won’t be able to pick\n * hours and minutes individually.\n * You can control options minutes offset via `step` input, e.g.: 11:00, 11:20, 11:40...'\n *\n * @stacked-example(Single column, timepicker/timepicker-single-column.component)\n *\n * Timepicker support forms and reactive forms API so you can provide value using `formControl` and `ngModel` directives\n * @stacked-example(Form control, timepicker/timepicker-form-control.component)\n *\n * <input [nbTimepicker]=\"timepicker\" twelveHoursFormat>\n * <nb-timepicker #timepicke [formControl]=\"formControl\"></nb-timepicker>\n *\n * @stacked-example(NgModel, timepicker/timepicker-ng-model.component)\n *\n * <input [nbTimepicker]=\"timepicker\" twelveHoursFormat>\n * <nb-timepicker #timepicke [ngModel]=\"date\"></nb-timepicker>\n *\n * You can provide localized versions of the timepicker text via the `localization` property of the config\n * object passed to the `forRoot` or `forChild` methods of the `NbTimepickerModule`:\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbTimepickerModule.forRoot({\n *       localization: {\n *         hoursText: 'Hr',\n *         minutesText: 'Min',\n *         secondsText: 'Sec',\n *         ampmText: 'Am/Pm',\n *       }\n *     }),\n *   ],\n * })\n * export class AppModule { }\n * ```\n *\n * @styles\n *\n * timepicker-cell-text-color:\n * timepicker-cell-hover-background-color:\n * timepicker-cell-hover-text-color:\n * timepicker-cell-focus-background-color:\n * timepicker-cell-focus-text-color:\n * timepicker-cell-active-background-color:\n * timepicker-cell-active-text-color:\n * timepicker-cell-text-font-size:\n * timepicker-cell-text-font-family:\n * timepicker-cell-text-line-height:\n * timepicker-cell-text-font-weight:\n * timepicker-cell-height:\n * timepicker-header-cell-text-color:\n * timepicker-header-cell-text-font-size:\n * timepicker-header-cell-text-font-family:\n * timepicker-header-cell-height:\n * timepicker-header-cell-text-line-height:\n * timepicker-header-cell-text-font-weight:\n * timepicker-border-color:\n * timepicker-border-style:\n * timepicker-border-width:\n * timepicker-scrollbar-color:\n * timepicker-scrollbar-background-color:\n * timepicker-scrollbar-width:\n * timepicker-single-column-width:\n * timepicker-multiple-column-width:\n * timepicker-title-height:\n * timepicker-title-padding:\n * timepicker-container-width:\n * timepicker-container-height:\n * */\n\n\nlet NbTimePickerDirective = /*#__PURE__*/(() => {\n  class NbTimePickerDirective {\n    constructor(document, positionBuilder, hostRef, triggerStrategyBuilder, overlay, cd, calendarTimeModelService, dateService, renderer, placeholder) {\n      this.document = document;\n      this.positionBuilder = positionBuilder;\n      this.hostRef = hostRef;\n      this.triggerStrategyBuilder = triggerStrategyBuilder;\n      this.overlay = overlay;\n      this.cd = cd;\n      this.calendarTimeModelService = calendarTimeModelService;\n      this.dateService = dateService;\n      this.renderer = renderer;\n      this.placeholder = placeholder;\n      /**\n       * Time picker overlay offset.\n       * */\n\n      this.overlayOffset = 8;\n      this.destroy$ = new Subject();\n\n      this.onChange = () => {};\n\n      this.onTouched = () => {};\n    }\n    /**\n     * Provides timepicker component.\n     * */\n\n\n    get timepicker() {\n      return this._timePickerComponent;\n    }\n\n    set timepicker(timePicker) {\n      this._timePickerComponent = timePicker;\n    }\n    /**\n     * Returns html input element.\n     * @docs-private\n     * */\n\n\n    get input() {\n      return this.hostRef.nativeElement;\n    }\n    /**\n     * Determines is timepicker overlay opened.\n     * @docs-private\n     * */\n\n\n    get isOpen() {\n      return this.overlayRef && this.overlayRef.hasAttached();\n    }\n    /**\n     * Determines is timepicker overlay closed.\n     * @docs-private\n     * */\n\n\n    get isClosed() {\n      return !this.isOpen;\n    }\n    /**\n     * Returns host input value.\n     * @docs-private\n     * */\n\n\n    get inputValue() {\n      return this.input.value;\n    }\n\n    set inputValue(value) {\n      this.input.value = value;\n    }\n\n    ngAfterViewInit() {\n      this.subscribeOnInputChange();\n\n      if (!this.placeholder) {\n        this.renderer.setProperty(this.input, 'placeholder', this.timepicker.timeFormat);\n      }\n\n      this.triggerStrategy = this.createTriggerStrategy();\n      this.subscribeOnTriggers();\n      this.subscribeToBlur();\n    }\n\n    show() {\n      if (this.isClosed) {\n        this.attachToOverlay();\n      }\n    }\n\n    hide() {\n      if (this.isOpen) {\n        this.overlayRef.detach();\n        this.cd.markForCheck();\n      }\n    }\n    /**\n     * Attaches picker to the timepicker portal.\n     * @docs-private\n     * */\n\n\n    attachToOverlay() {\n      if (!this.overlayRef) {\n        this.setupTimepicker();\n        this.initOverlay();\n      }\n\n      this.overlayRef.attach(this.timepicker.portal);\n    }\n\n    setupTimepicker() {\n      if (this.dateService.getId() === 'native' && isDevMode()) {\n        console.warn('Date.parse does not support parsing time with custom format.' + ' See details here https://akveo.github.io/nebular/docs/components/datepicker/overview#native-parse-issue');\n      }\n\n      this.timepicker.setHost(this.hostRef);\n\n      if (this.inputValue) {\n        const val = this.dateService.getId() === 'native' ? this.parseNativeDateString(this.inputValue) : this.inputValue;\n        this.timepicker.date = this.dateService.parse(val, this.timepicker.timeFormat);\n      } else {\n        this.timepicker.date = this.calendarTimeModelService.getResetTime();\n      }\n    }\n\n    initOverlay() {\n      this.positionStrategy = this.createPositionStrategy();\n      this.subscribeOnApplyClick();\n      this.createOverlay();\n    }\n\n    subscribeOnApplyClick() {\n      this.timepicker.onSelectTime.pipe(takeUntil(this.destroy$)).subscribe(value => {\n        const time = this.dateService.format(value.time, this.timepicker.timeFormat).toUpperCase();\n        this.inputValue = time;\n        this.timepicker.date = value.time;\n        this.onChange(value.time);\n\n        if (value.save) {\n          this.lastInputValue = time;\n          this.hide();\n        }\n      });\n    }\n\n    createOverlay() {\n      const scrollStrategy = this.createScrollStrategy();\n      this.overlayRef = this.overlay.create({\n        positionStrategy: this.positionStrategy,\n        scrollStrategy\n      });\n    }\n\n    subscribeOnTriggers() {\n      this.triggerStrategy.show$.pipe(filter(() => this.isClosed)).subscribe(() => this.show());\n      this.triggerStrategy.hide$.pipe(filter(() => this.isOpen)).subscribe(() => {\n        this.inputValue = this.lastInputValue || '';\n        this.hide();\n      });\n    }\n\n    createTriggerStrategy() {\n      return this.triggerStrategyBuilder.trigger(NbTrigger.FOCUS).host(this.hostRef.nativeElement).container(() => this.getContainer()).build();\n    }\n\n    createPositionStrategy() {\n      return this.positionBuilder.connectedTo(this.hostRef).position(NbPosition.BOTTOM).offset(this.overlayOffset).adjustment(NbAdjustment.VERTICAL);\n    }\n\n    getContainer() {\n      return this.overlayRef && this.isOpen && {\n        location: {\n          nativeElement: this.overlayRef.overlayElement\n        }\n      };\n    }\n\n    createScrollStrategy() {\n      return this.overlay.scrollStrategies.block();\n    }\n\n    subscribeOnInputChange() {\n      fromEvent(this.input, 'input').pipe(map(() => this.inputValue), takeUntil(this.destroy$)).subscribe(value => this.handleInputChange(value));\n    }\n\n    subscribeToBlur() {\n      merge(this.timepicker.blur, fromEvent(this.input, 'blur').pipe(filter(() => !this.isOpen && this.document.activeElement !== this.input))).pipe(takeUntil(this.destroy$)).subscribe(() => this.onTouched());\n    }\n    /**\n     * Parses input value and write if it isn't null.\n     * @docs-private\n     * */\n\n\n    handleInputChange(value) {\n      if (this.dateService.getId() === 'native') {\n        /**\n         * Native date service dont parse only time string value,\n         * and we adding year mouth and day to convert string to valid date format\n         **/\n        value = this.parseNativeDateString(value);\n      }\n\n      const isValidDate = this.dateService.isValidDateString(value, this.timepicker.timeFormat);\n\n      if (isValidDate) {\n        this.lastInputValue = value;\n        const date = this.dateService.parse(value, this.timepicker.timeFormat);\n        this.onChange(date);\n        this.timepicker.date = date;\n      }\n    }\n\n    updateValue(value) {\n      if (value) {\n        this.timepicker.date = value;\n        const timeString = this.dateService.format(value, this.timepicker.timeFormat).toUpperCase();\n        this.inputValue = timeString;\n        this.lastInputValue = timeString;\n      }\n    }\n\n    writeValue(value) {\n      this.updateValue(value);\n    }\n\n    registerOnChange(fn) {\n      this.onChange = fn;\n    }\n\n    registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n\n    parseNativeDateString(value) {\n      const date = this.dateService.today();\n      const year = this.dateService.getYear(date);\n      const month = this.calendarTimeModelService.paddToTwoSymbols(this.dateService.getMonth(date));\n      const day = this.calendarTimeModelService.paddToTwoSymbols(this.dateService.getDate(date));\n      return `${year}-${month}-${day} ${value}`;\n    }\n\n  }\n\n  NbTimePickerDirective.ɵfac = function NbTimePickerDirective_Factory(t) {\n    return new (t || NbTimePickerDirective)(ɵngcc0.ɵɵdirectiveInject(NB_DOCUMENT), ɵngcc0.ɵɵdirectiveInject(NbPositionBuilderService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(NbTriggerStrategyBuilderService), ɵngcc0.ɵɵdirectiveInject(NbOverlayService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(NbCalendarTimeModelService), ɵngcc0.ɵɵdirectiveInject(NbDateService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵinjectAttribute('placeholder'));\n  };\n\n  NbTimePickerDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NbTimePickerDirective,\n    selectors: [[\"input\", \"nbTimepicker\", \"\"]],\n    inputs: {\n      overlayOffset: \"overlayOffset\",\n      timepicker: [\"nbTimepicker\", \"timepicker\"]\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NbTimePickerDirective),\n      multi: true\n    }])]\n  });\n  return NbTimePickerDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet NbTimePickerCellComponent = /*#__PURE__*/(() => {\n  class NbTimePickerCellComponent {\n    constructor(ngZone, platformService) {\n      this.ngZone = ngZone;\n      this.platformService = platformService;\n      this.selectedChange$ = new Subject();\n      this.unselected$ = this.selectedChange$.pipe(filter(selected => !selected));\n      this.destroy$ = new Subject();\n      this.select = new EventEmitter();\n    }\n\n    set selected(selected) {\n      if (selected) {\n        this._selected = selected;\n        this.scrollToElement();\n      }\n\n      this.selectedChange$.next(selected);\n    }\n\n    get selected() {\n      return this._selected;\n    }\n\n    onClick() {\n      this.select.emit({\n        value: this.value\n      });\n    }\n\n    ngAfterViewInit() {\n      if (this.selected) {\n        // Since we render timepicker in the overlay, at the moment this hook called,\n        // timepicker could be not fully rendered and placed. Because of it, we're waiting for Angular\n        // to finish change detection run and only then scroll to the selected cell.\n        this.ngZone.onStable.pipe(take(1), takeUntil(merge(this.unselected$, this.destroy$))).subscribe(() => this.scrollToElement());\n      }\n    }\n\n    scrollToElement() {\n      if (this.valueContainerElement && this.platformService.isBrowser) {\n        this.ngZone.runOutsideAngular(() => this.valueContainerElement.nativeElement.scrollIntoView({\n          block: 'center'\n        }));\n      }\n    }\n\n    ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n\n  }\n\n  NbTimePickerCellComponent.ɵfac = function NbTimePickerCellComponent_Factory(t) {\n    return new (t || NbTimePickerCellComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(NbPlatform));\n  };\n\n  NbTimePickerCellComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbTimePickerCellComponent,\n    selectors: [[\"nb-timepicker-cell\"]],\n    viewQuery: function NbTimePickerCellComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c46, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.valueContainerElement = _t.first);\n      }\n    },\n    hostBindings: function NbTimePickerCellComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function NbTimePickerCellComponent_click_HostBindingHandler() {\n          return ctx.onClick();\n        });\n      }\n    },\n    inputs: {\n      selected: \"selected\",\n      value: \"value\"\n    },\n    outputs: {\n      select: \"select\"\n    },\n    decls: 3,\n    vars: 1,\n    consts: [[\"valueContainer\", \"\"]],\n    template: function NbTimePickerCellComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", null, 0);\n        ɵngcc0.ɵɵtext(2);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵtextInterpolate(ctx.value);\n      }\n    },\n    styles: [\"[_nghost-%COMP%]{width:100%;height:100%;display:flex;align-items:center;justify-content:center;user-select:none}\"],\n    changeDetection: 0\n  });\n  return NbTimePickerCellComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/*\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nlet NbTimepickerModule = /*#__PURE__*/(() => {\n  class NbTimepickerModule {\n    static forRoot(config = {}) {\n      return {\n        ngModule: NbTimepickerModule,\n        providers: [{\n          provide: NB_TIME_PICKER_CONFIG,\n          useValue: config\n        }]\n      };\n    }\n\n    static forChild(config = {}) {\n      return {\n        ngModule: NbTimepickerModule,\n        providers: [{\n          provide: NB_TIME_PICKER_CONFIG,\n          useValue: config\n        }]\n      };\n    }\n\n  }\n\n  NbTimepickerModule.ɵfac = function NbTimepickerModule_Factory(t) {\n    return new (t || NbTimepickerModule)();\n  };\n\n  NbTimepickerModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NbTimepickerModule\n  });\n  NbTimepickerModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    providers: [NbCalendarTimeModelService],\n    imports: [[CommonModule, NbOverlayModule, NbListModule, NbCardModule, NbCalendarKitModule]]\n  });\n  return NbTimepickerModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NbTimepickerModule, {\n    declarations: function () {\n      return [NbTimePickerComponent, NbTimePickerCellComponent, NbTimePickerDirective];\n    },\n    imports: function () {\n      return [CommonModule, NbOverlayModule, NbListModule, NbCardModule, NbCalendarKitModule];\n    },\n    exports: function () {\n      return [NbTimePickerComponent, NbTimePickerCellComponent, NbTimePickerDirective];\n    }\n  });\n})();\n/*\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nlet NbDateAdapterService = /*#__PURE__*/(() => {\n  class NbDateAdapterService extends NbDatepickerAdapter {\n    constructor(dateService) {\n      super();\n      this.dateService = dateService;\n      this.picker = NbDatepickerComponent;\n    }\n\n    parse(date, format) {\n      return this.dateService.parse(date, format);\n    }\n\n    format(date, format) {\n      return this.dateService.format(date, format);\n    }\n\n    isValid(date, format) {\n      return this.dateService.isValidDateString(date, format);\n    }\n\n  }\n\n  NbDateAdapterService.ɵfac = function NbDateAdapterService_Factory(t) {\n    return new (t || NbDateAdapterService)(ɵngcc0.ɵɵinject(NbDateService));\n  };\n\n  NbDateAdapterService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: NbDateAdapterService,\n    factory: NbDateAdapterService.ɵfac\n  });\n  return NbDateAdapterService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet NbRangeAdapterService = /*#__PURE__*/(() => {\n  class NbRangeAdapterService extends NbDatepickerAdapter {\n    constructor(dateService) {\n      super();\n      this.dateService = dateService;\n      this.picker = NbRangepickerComponent;\n    }\n\n    parse(range, format) {\n      const [start, end] = range.split('-').map(subDate => subDate.trim());\n      return {\n        start: this.dateService.parse(start, format),\n        end: this.dateService.parse(end, format)\n      };\n    }\n\n    format(range, format) {\n      if (!range) {\n        return '';\n      }\n\n      const start = this.dateService.format(range.start, format);\n      const isStartValid = this.dateService.isValidDateString(start, format);\n\n      if (!isStartValid) {\n        return '';\n      }\n\n      const end = this.dateService.format(range.end, format);\n      const isEndValid = this.dateService.isValidDateString(end, format);\n\n      if (isEndValid) {\n        return `${start} - ${end}`;\n      } else {\n        return start;\n      }\n    }\n\n    isValid(range, format) {\n      const [start, end] = range.split('-').map(subDate => subDate.trim());\n      return this.dateService.isValidDateString(start, format) && this.dateService.isValidDateString(end, format);\n    }\n\n  }\n\n  NbRangeAdapterService.ɵfac = function NbRangeAdapterService_Factory(t) {\n    return new (t || NbRangeAdapterService)(ɵngcc0.ɵɵinject(NbDateService));\n  };\n\n  NbRangeAdapterService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: NbRangeAdapterService,\n    factory: NbRangeAdapterService.ɵfac\n  });\n  return NbRangeAdapterService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet NbDateTimeAdapterService = /*#__PURE__*/(() => {\n  class NbDateTimeAdapterService extends NbDatepickerAdapter {\n    constructor(dateService) {\n      super();\n      this.dateService = dateService;\n      this.picker = NbDateTimePickerComponent;\n    }\n\n    parse(date, format) {\n      return this.dateService.parse(date, format);\n    }\n\n    format(date, format) {\n      return this.dateService.format(date, format);\n    }\n\n    isValid(date, format) {\n      return this.dateService.isValidDateString(date, format);\n    }\n\n  }\n\n  NbDateTimeAdapterService.ɵfac = function NbDateTimeAdapterService_Factory(t) {\n    return new (t || NbDateTimeAdapterService)(ɵngcc0.ɵɵinject(NbDateService));\n  };\n\n  NbDateTimeAdapterService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: NbDateTimeAdapterService,\n    factory: NbDateTimeAdapterService.ɵfac\n  });\n  return NbDateTimeAdapterService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/*\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nlet NbDatepickerModule = /*#__PURE__*/(() => {\n  class NbDatepickerModule {\n    static forRoot() {\n      return {\n        ngModule: NbDatepickerModule,\n        providers: [DatePipe, {\n          provide: NB_DATE_ADAPTER,\n          multi: true,\n          useClass: NbDateAdapterService\n        }, {\n          provide: NB_DATE_ADAPTER,\n          multi: true,\n          useClass: NbRangeAdapterService\n        }, {\n          provide: NB_DATE_ADAPTER,\n          multi: true,\n          useClass: NbDateTimeAdapterService\n        }]\n      };\n    }\n\n  }\n\n  NbDatepickerModule.ɵfac = function NbDatepickerModule_Factory(t) {\n    return new (t || NbDatepickerModule)();\n  };\n\n  NbDatepickerModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NbDatepickerModule\n  });\n  NbDatepickerModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[NbOverlayModule, NbCalendarModule, NbCalendarRangeModule, NbCardModule, NbBaseCalendarModule, NbTimepickerModule, NbCalendarKitModule]]\n  });\n  return NbDatepickerModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NbDatepickerModule, {\n    declarations: [NbDatepickerDirective, NbDatepickerContainerComponent, NbCalendarWithTimeComponent, NbDateTimePickerComponent, NbDatepickerComponent, NbRangepickerComponent, NbBasePickerComponent],\n    imports: [NbOverlayModule, NbCalendarModule, NbCalendarRangeModule, NbCardModule, NbBaseCalendarModule, NbTimepickerModule, NbCalendarKitModule],\n    exports: [NbDatepickerDirective, NbDatepickerComponent, NbRangepickerComponent, NbDateTimePickerComponent, NbCalendarWithTimeComponent]\n  });\n})();\n/*\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * The `NbRadioComponent` provides the same functionality as native `<input type=\"radio\">`\n * with Nebular styles and animations.\n *\n * @stacked-example(Showcase, radio/radio-showcase.component)\n *\n * ### Installation\n *\n * Import `NbRadioModule` to your feature module.\n *\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbRadioModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n *\n * ### Usage\n *\n * Radio buttons should be wrapped in `nb-radio-group` to provide form bindings.\n *\n * ```html\n * <nb-radio-group [(ngModel)]=\"selectedOption\">\n *   <nb-radio value=\"1\">Option 1</nb-radio>\n *   <nb-radio value=\"2\">Option 2</nb-radio>\n *   <nb-radio value=\"3\">Option 3</nb-radio>\n * </nb-radio-group>\n * ```\n *\n * You can disable some radios in the group using a `disabled` attribute.\n *\n * @stacked-example(Disabled, radio/radio-disabled.component)\n *\n *\n * @styles\n *\n * radio-width:\n * radio-height:\n * radio-border-style:\n * radio-border-width:\n * radio-text-font-family:\n * radio-text-font-size:\n * radio-text-font-weight:\n * radio-text-line-height:\n * radio-outline-color:\n * radio-outline-width:\n * radio-basic-text-color:\n * radio-basic-border-color:\n * radio-basic-background-color:\n * radio-basic-checked-background-color:\n * radio-basic-checked-border-color:\n * radio-basic-inner-circle-color:\n * radio-basic-focus-border-color:\n * radio-basic-focus-inner-circle-color:\n * radio-basic-hover-background-color:\n * radio-basic-hover-border-color:\n * radio-basic-hover-inner-circle-color:\n * radio-basic-hover-checked-background-color:\n * radio-basic-active-border-color:\n * radio-basic-active-inner-circle-color:\n * radio-basic-disabled-background-color:\n * radio-basic-disabled-border-color:\n * radio-basic-disabled-text-color:\n * radio-basic-disabled-checked-background-color:\n * radio-basic-disabled-checked-border-color:\n * radio-basic-disabled-checked-inner-circle-color:\n * radio-primary-text-color:\n * radio-primary-border-color:\n * radio-primary-background-color:\n * radio-primary-checked-background-color:\n * radio-primary-checked-border-color:\n * radio-primary-inner-circle-color:\n * radio-primary-focus-border-color:\n * radio-primary-focus-inner-circle-color:\n * radio-primary-hover-background-color:\n * radio-primary-hover-border-color:\n * radio-primary-hover-inner-circle-color:\n * radio-primary-hover-checked-background-color:\n * radio-primary-active-border-color:\n * radio-primary-active-inner-circle-color:\n * radio-primary-disabled-background-color:\n * radio-primary-disabled-border-color:\n * radio-primary-disabled-text-color:\n * radio-primary-disabled-checked-background-color:\n * radio-primary-disabled-checked-border-color:\n * radio-primary-disabled-checked-inner-circle-color:\n * radio-success-text-color:\n * radio-success-border-color:\n * radio-success-background-color:\n * radio-success-checked-background-color:\n * radio-success-checked-border-color:\n * radio-success-inner-circle-color:\n * radio-success-focus-border-color:\n * radio-success-focus-inner-circle-color:\n * radio-success-hover-background-color:\n * radio-success-hover-border-color:\n * radio-success-hover-inner-circle-color:\n * radio-success-hover-checked-background-color:\n * radio-success-active-border-color:\n * radio-success-active-inner-circle-color:\n * radio-success-disabled-background-color:\n * radio-success-disabled-border-color:\n * radio-success-disabled-text-color:\n * radio-success-disabled-checked-background-color:\n * radio-success-disabled-checked-border-color:\n * radio-success-disabled-checked-inner-circle-color:\n * radio-info-text-color:\n * radio-info-border-color:\n * radio-info-background-color:\n * radio-info-checked-background-color:\n * radio-info-checked-border-color:\n * radio-info-inner-circle-color:\n * radio-info-focus-border-color:\n * radio-info-focus-inner-circle-color:\n * radio-info-hover-background-color:\n * radio-info-hover-border-color:\n * radio-info-hover-inner-circle-color:\n * radio-info-hover-checked-background-color:\n * radio-info-active-border-color:\n * radio-info-active-inner-circle-color:\n * radio-info-disabled-background-color:\n * radio-info-disabled-border-color:\n * radio-info-disabled-text-color:\n * radio-info-disabled-checked-background-color:\n * radio-info-disabled-checked-border-color:\n * radio-info-disabled-checked-inner-circle-color:\n * radio-warning-text-color:\n * radio-warning-border-color:\n * radio-warning-background-color:\n * radio-warning-checked-background-color:\n * radio-warning-checked-border-color:\n * radio-warning-inner-circle-color:\n * radio-warning-focus-border-color:\n * radio-warning-focus-inner-circle-color:\n * radio-warning-hover-background-color:\n * radio-warning-hover-border-color:\n * radio-warning-hover-inner-circle-color:\n * radio-warning-hover-checked-background-color:\n * radio-warning-active-border-color:\n * radio-warning-active-inner-circle-color:\n * radio-warning-disabled-background-color:\n * radio-warning-disabled-border-color:\n * radio-warning-disabled-text-color:\n * radio-warning-disabled-checked-background-color:\n * radio-warning-disabled-checked-border-color:\n * radio-warning-disabled-checked-inner-circle-color:\n * radio-danger-text-color:\n * radio-danger-border-color:\n * radio-danger-background-color:\n * radio-danger-checked-background-color:\n * radio-danger-checked-border-color:\n * radio-danger-inner-circle-color:\n * radio-danger-focus-border-color:\n * radio-danger-focus-inner-circle-color:\n * radio-danger-hover-background-color:\n * radio-danger-hover-border-color:\n * radio-danger-hover-inner-circle-color:\n * radio-danger-hover-checked-background-color:\n * radio-danger-active-border-color:\n * radio-danger-active-inner-circle-color:\n * radio-danger-disabled-background-color:\n * radio-danger-disabled-border-color:\n * radio-danger-disabled-text-color:\n * radio-danger-disabled-checked-background-color:\n * radio-danger-disabled-checked-border-color:\n * radio-danger-disabled-checked-inner-circle-color:\n * radio-control-text-color:\n * radio-control-background-color:\n * radio-control-border-color:\n * radio-control-checked-background-color:\n * radio-control-checked-border-color:\n * radio-control-inner-circle-color:\n * radio-control-focus-border-color:\n * radio-control-focus-inner-circle-color:\n * radio-control-hover-background-color:\n * radio-control-hover-border-color:\n * radio-control-hover-inner-circle-color:\n * radio-control-hover-checked-background-color:\n * radio-control-active-border-color:\n * radio-control-active-inner-circle-color:\n * radio-control-disabled-background-color:\n * radio-control-disabled-border-color:\n * radio-control-disabled-text-color:\n * radio-control-disabled-checked-background-color:\n * radio-control-disabled-checked-border-color:\n * radio-control-disabled-checked-inner-circle-color:\n * */\n\n\nlet NbRadioComponent = /*#__PURE__*/(() => {\n  class NbRadioComponent {\n    constructor(cd, renderer, statusService) {\n      this.cd = cd;\n      this.renderer = renderer;\n      this.statusService = statusService;\n      this._checked = false;\n      this._disabled = false;\n      this.status = 'basic';\n      this.valueChange = new EventEmitter();\n      this.blur = new EventEmitter();\n    }\n\n    get name() {\n      return this._name;\n    }\n\n    set name(value) {\n      if (this._name !== value) {\n        this._name = value;\n      }\n    }\n\n    get checked() {\n      return this._checked;\n    }\n\n    set checked(value) {\n      const boolValue = convertToBoolProperty(value);\n\n      if (this._checked !== boolValue) {\n        this._checked = boolValue;\n      }\n    }\n\n    get value() {\n      return this._value;\n    }\n\n    set value(value) {\n      if (this._value !== value) {\n        this._value = value;\n      }\n    }\n\n    get disabled() {\n      return this._disabled;\n    }\n\n    set disabled(disabled) {\n      const boolValue = convertToBoolProperty(disabled);\n\n      if (this._disabled !== boolValue) {\n        this._disabled = boolValue;\n      }\n    }\n\n    get isPrimary() {\n      return this.status === 'primary';\n    }\n\n    get isSuccess() {\n      return this.status === 'success';\n    }\n\n    get isWarning() {\n      return this.status === 'warning';\n    }\n\n    get isDanger() {\n      return this.status === 'danger';\n    }\n\n    get isInfo() {\n      return this.status === 'info';\n    }\n\n    get isBasic() {\n      return this.status === 'basic';\n    }\n\n    get isControl() {\n      return this.status === 'control';\n    }\n\n    get additionalClasses() {\n      if (this.statusService.isCustomStatus(this.status)) {\n        return [this.statusService.getStatusClass(this.status)];\n      }\n\n      return [];\n    }\n\n    onChange(event) {\n      event.stopPropagation();\n      this.checked = true;\n      this.valueChange.emit(this.value);\n    }\n\n    onClick(event) {\n      event.stopPropagation();\n    }\n    /*\n     * @docs-private\n     * We use this method when setting radio inputs from radio group component.\n     * Otherwise Angular won't detect changes in radio template as cached last rendered\n     * value didn't updated.\n     **/\n\n\n    _markForCheck() {\n      this.cd.markForCheck();\n    }\n    /*\n     * @docs-private\n     * Use this method when setting radio name from radio group component.\n     * In case option 'name' isn't set on nb-radio component we need to set name\n     * right away, so it won't overlap with options without names from other radio\n     * groups. Otherwise they all would have same name and will be considered as\n     * options from one group so only the last option will stay selected.\n     **/\n\n\n    _setName(name) {\n      this.name = name;\n\n      if (this.input) {\n        this.renderer.setProperty(this.input.nativeElement, 'name', name);\n      }\n    }\n\n  }\n\n  NbRadioComponent.ɵfac = function NbRadioComponent_Factory(t) {\n    return new (t || NbRadioComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(NbStatusService));\n  };\n\n  NbRadioComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbRadioComponent,\n    selectors: [[\"nb-radio\"]],\n    viewQuery: function NbRadioComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c47, 5, ElementRef);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.input = _t.first);\n      }\n    },\n    hostVars: 16,\n    hostBindings: function NbRadioComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassMap(ctx.additionalClasses);\n        ɵngcc0.ɵɵclassProp(\"status-primary\", ctx.isPrimary)(\"status-success\", ctx.isSuccess)(\"status-warning\", ctx.isWarning)(\"status-danger\", ctx.isDanger)(\"status-info\", ctx.isInfo)(\"status-basic\", ctx.isBasic)(\"status-control\", ctx.isControl);\n      }\n    },\n    inputs: {\n      status: \"status\",\n      name: \"name\",\n      checked: \"checked\",\n      value: \"value\",\n      disabled: \"disabled\"\n    },\n    outputs: {\n      valueChange: \"valueChange\",\n      blur: \"blur\"\n    },\n    ngContentSelectors: _c0,\n    decls: 7,\n    vars: 4,\n    consts: [[\"type\", \"radio\", 1, \"native-input\", \"visually-hidden\", 3, \"name\", \"value\", \"checked\", \"disabled\", \"change\", \"click\"], [\"input\", \"\"], [1, \"outer-circle\"], [1, \"inner-circle\"], [1, \"text\"]],\n    template: function NbRadioComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"label\");\n        ɵngcc0.ɵɵelementStart(1, \"input\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"change\", function NbRadioComponent_Template_input_change_1_listener($event) {\n          return ctx.onChange($event);\n        })(\"click\", function NbRadioComponent_Template_input_click_1_listener($event) {\n          return ctx.onClick($event);\n        });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(3, \"span\", 2);\n        ɵngcc0.ɵɵelement(4, \"span\", 3);\n        ɵngcc0.ɵɵelementStart(5, \"span\", 4);\n        ɵngcc0.ɵɵprojection(6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"name\", ctx.name)(\"value\", ctx.value)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled);\n      }\n    },\n    styles: [\"[_nghost-%COMP%]{display:block;position:relative}[_nghost-%COMP%]   label[_ngcontent-%COMP%]{display:inline-flex;margin:0;min-height:inherit;padding:0.375rem 0;align-items:center}[dir=ltr]   [_nghost-%COMP%]   label[_ngcontent-%COMP%]{padding-right:1.5rem}[dir=rtl]   [_nghost-%COMP%]   label[_ngcontent-%COMP%]{padding-left:1.5rem}[_nghost-%COMP%]   .outer-circle[_ngcontent-%COMP%], [_nghost-%COMP%]   .inner-circle[_ngcontent-%COMP%]{border-radius:50%;position:absolute;top:50%;transform:translateY(-50%)}[dir=ltr]   [_nghost-%COMP%]   .outer-circle[_ngcontent-%COMP%], [dir=ltr]   [_nghost-%COMP%]   .inner-circle[_ngcontent-%COMP%]{left:0}[dir=rtl]   [_nghost-%COMP%]   .outer-circle[_ngcontent-%COMP%], [dir=rtl]   [_nghost-%COMP%]   .inner-circle[_ngcontent-%COMP%]{right:0}[_nghost-%COMP%]   .inner-circle[_ngcontent-%COMP%]{transform:translateY(-50%) scale(0.6)}[dir=ltr]   [_nghost-%COMP%]   .text[_ngcontent-%COMP%]{padding-left:.5rem}[dir=rtl]   [_nghost-%COMP%]   .text[_ngcontent-%COMP%]{padding-right:.5rem}\"],\n    changeDetection: 0\n  });\n  return NbRadioComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/*\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * The `NbRadioGroupComponent` is the wrapper for `nb-radio` button.\n * It provides form bindings:\n *\n * ```html\n * <nb-radio-group [(ngModel)]=\"selectedOption\">\n *   <nb-radio value=\"1\">Option 1</nb-radio>\n *   <nb-radio value=\"2\">Option 2</nb-radio>\n *   <nb-radio value=\"3\">Option 3</nb-radio>\n * </nb-radio-group>\n * ```\n *\n * Also, you can use `value` and `valueChange` for binding without forms.\n *\n * ```html\n * <nb-radio-group [(value)]=\"selectedOption\">\n *   <nb-radio value=\"1\">Option 1</nb-radio>\n *   <nb-radio value=\"2\">Option 2</nb-radio>\n *   <nb-radio value=\"3\">Option 3</nb-radio>\n * </nb-radio-group>\n * ```\n *\n * Radio items name has to be provided through `name` input property of the radio group.\n *\n * ```html\n * <nb-radio-group name=\"my-radio-group\">\n *   ...\n * </nb-radio-group>\n * ```\n *\n * You can change radio group status by setting `status` input.\n * @stacked-example(Statuses, radio/radio-statuses.component)\n *\n * Also, you can disable the whole group using `disabled` attribute.\n * @stacked-example(Disabled group, radio/radio-disabled-group.component)\n *\n * Radio group supports `ngModel` and reactive forms:\n * @stacked-example(Radio Group with forms, radio/radio-form.component)\n *\n * */\n\n\nlet NbRadioGroupComponent = /*#__PURE__*/(() => {\n  class NbRadioGroupComponent {\n    constructor(hostElement, platformId, document) {\n      this.hostElement = hostElement;\n      this.platformId = platformId;\n      this.document = document;\n      this.destroy$ = new Subject();\n\n      this.onChange = value => {};\n\n      this.onTouched = () => {};\n\n      this._status = 'basic';\n      this.valueChange = new EventEmitter();\n    }\n\n    get value() {\n      return this._value;\n    }\n\n    set value(value) {\n      this._value = value;\n      this.updateValues();\n    }\n\n    get name() {\n      return this._name;\n    }\n\n    set name(name) {\n      this._name = name;\n      this.updateNames();\n    }\n\n    get disabled() {\n      return this._disabled;\n    }\n\n    set disabled(disabled) {\n      this._disabled = convertToBoolProperty(disabled);\n      this.updateDisabled();\n    }\n    /**\n     * Radio buttons status.\n     * Possible values are `primary` (default), `success`, `warning`, `danger`, `info`.\n     */\n\n\n    get status() {\n      return this._status;\n    }\n\n    set status(value) {\n      if (this._status !== value) {\n        this._status = value;\n        this.updateStatus();\n      }\n    }\n\n    ngAfterContentInit() {\n      // In case option 'name' isn't set on nb-radio component,\n      // we need to set it's name right away, so it won't overlap with options\n      // without names from other radio groups. Otherwise they all would have\n      // same name and will be considered as options from one group so only the\n      // last option will stay selected.\n      this.updateNames();\n      this.radios.changes.pipe(startWith(this.radios), // 'changes' emit during change detection run and we can't update\n      // option properties right of since they already was initialized.\n      // Instead we schedule microtask to update radios after change detection\n      // run is finished and trigger one more change detection run.\n      switchMap(radios => from(Promise.resolve(radios))), takeUntil(this.destroy$)).subscribe(() => this.updateAndSubscribeToRadios());\n    }\n\n    ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n\n    registerOnChange(fn) {\n      this.onChange = fn;\n    }\n\n    registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n\n    writeValue(value) {\n      this.value = value;\n    }\n\n    setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n    }\n\n    updateAndSubscribeToRadios() {\n      this.updateValueFromCheckedOption();\n      this.updateNames();\n      this.updateValues();\n      this.updateDisabled();\n      this.updateStatus();\n      this.subscribeOnRadiosValueChange();\n      this.subscribeOnRadiosBlur();\n    }\n\n    updateNames() {\n      if (this.radios) {\n        this.radios.forEach(radio => radio._setName(this.name));\n      }\n    }\n\n    updateValues() {\n      this.updateAndMarkForCheckRadios(radio => radio.checked = radio.value === this.value);\n    }\n\n    updateDisabled() {\n      if (typeof this.disabled !== 'undefined') {\n        this.updateAndMarkForCheckRadios(radio => radio.disabled = this.disabled);\n      }\n    }\n\n    subscribeOnRadiosValueChange() {\n      if (!this.radios || !this.radios.length) {\n        return;\n      }\n\n      merge(...this.radios.map(radio => radio.valueChange)).pipe(takeUntil(merge(this.radios.changes, this.destroy$))).subscribe(value => {\n        this.writeValue(value);\n        this.propagateValue(value);\n      });\n    }\n\n    propagateValue(value) {\n      this.valueChange.emit(value);\n      this.onChange(value);\n    }\n\n    subscribeOnRadiosBlur() {\n      const hasNoRadios = !this.radios || !this.radios.length;\n\n      if (!isPlatformBrowser(this.platformId) || hasNoRadios) {\n        return;\n      }\n\n      const hostElement = this.hostElement.nativeElement;\n      fromEvent(hostElement, 'focusin').pipe(filter(event => hostElement.contains(event.target)), switchMap(() => merge(fromEvent(this.document, 'focusin'), fromEvent(this.document, 'click'))), filter(event => !hostElement.contains(event.target)), takeUntil(merge(this.radios.changes, this.destroy$))).subscribe(() => this.onTouched());\n    }\n\n    updateStatus() {\n      this.updateAndMarkForCheckRadios(radio => radio.status = this.status);\n    }\n\n    updateAndMarkForCheckRadios(updateFn) {\n      if (this.radios) {\n        this.radios.forEach(radio => {\n          updateFn(radio);\n\n          radio._markForCheck();\n        });\n      }\n    }\n\n    updateValueFromCheckedOption() {\n      const checkedRadio = this.radios.find(radio => radio.checked);\n      const isValueMissing = this.value === undefined || this.value === null;\n\n      if (checkedRadio && isValueMissing && checkedRadio.value !== this.value) {\n        this.value = checkedRadio.value;\n      }\n    }\n\n  }\n\n  NbRadioGroupComponent.ɵfac = function NbRadioGroupComponent_Factory(t) {\n    return new (t || NbRadioGroupComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID), ɵngcc0.ɵɵdirectiveInject(NB_DOCUMENT));\n  };\n\n  NbRadioGroupComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbRadioGroupComponent,\n    selectors: [[\"nb-radio-group\"]],\n    contentQueries: function NbRadioGroupComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NbRadioComponent, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.radios = _t);\n      }\n    },\n    inputs: {\n      value: \"value\",\n      name: \"name\",\n      disabled: \"disabled\",\n      status: \"status\"\n    },\n    outputs: {\n      valueChange: \"valueChange\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NbRadioGroupComponent),\n      multi: true\n    }])],\n    ngContentSelectors: _c49,\n    decls: 1,\n    vars: 0,\n    template: function NbRadioGroupComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c48);\n        ɵngcc0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return NbRadioGroupComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/*\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nlet NbRadioModule = /*#__PURE__*/(() => {\n  class NbRadioModule {}\n\n  NbRadioModule.ɵfac = function NbRadioModule_Factory(t) {\n    return new (t || NbRadioModule)();\n  };\n\n  NbRadioModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NbRadioModule\n  });\n  NbRadioModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[]]\n  });\n  return NbRadioModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NbRadioModule, {\n    declarations: [NbRadioComponent, NbRadioGroupComponent],\n    exports: [NbRadioComponent, NbRadioGroupComponent]\n  });\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nlet tagUniqueId = 0;\n/**\n *\n * To show a cross on a tag and enable `remove` event add the `removable` attribute.\n * @stacked-example(Removable tags, tag/tag-removable.component)\n *\n * You can change appearance via `appearance` input:\n * @stacked-example(Tag Appearance, tag/tag-appearance.component)\n *\n * You can change status via `status` input:\n * @stacked-example(Tag Status, tag/tag-status.component)\n *\n * @styles\n *\n * tag-text-font-family:\n * tag-text-transform:\n * tag-border-width:\n * tag-border-style:\n * tag-border-radius:\n * tag-tiny-text-font-size:\n * tag-tiny-text-font-weight:\n * tag-tiny-text-line-height:\n * tag-tiny-padding:\n * tag-tiny-close-offset:\n * tag-small-text-font-size:\n * tag-small-text-font-weight:\n * tag-small-text-line-height:\n * tag-small-padding:\n * tag-small-close-offset:\n * tag-medium-text-font-size:\n * tag-medium-text-font-weight:\n * tag-medium-text-line-height:\n * tag-medium-padding:\n * tag-medium-close-offset:\n * tag-large-text-font-size:\n * tag-large-text-font-weight:\n * tag-large-text-line-height:\n * tag-large-padding:\n * tag-large-close-offset:\n * tag-giant-text-font-size:\n * tag-giant-text-font-weight:\n * tag-giant-text-line-height:\n * tag-giant-padding:\n * tag-giant-close-offset:\n * tag-filled-basic-background-color:\n * tag-filled-basic-border-color:\n * tag-filled-basic-text-color:\n * tag-filled-basic-active-background-color:\n * tag-filled-basic-active-border-color:\n * tag-filled-basic-hover-background-color:\n * tag-filled-basic-hover-border-color:\n * tag-filled-basic-selected-background-color:\n * tag-filled-basic-selected-border-color:\n * tag-filled-primary-background-color:\n * tag-filled-primary-border-color:\n * tag-filled-primary-text-color:\n * tag-filled-primary-active-background-color:\n * tag-filled-primary-active-border-color:\n * tag-filled-primary-hover-background-color:\n * tag-filled-primary-hover-border-color:\n * tag-filled-primary-selected-background-color:\n * tag-filled-primary-selected-border-color:\n * tag-filled-success-background-color:\n * tag-filled-success-border-color:\n * tag-filled-success-text-color:\n * tag-filled-success-active-background-color:\n * tag-filled-success-active-border-color:\n * tag-filled-success-hover-background-color:\n * tag-filled-success-hover-border-color:\n * tag-filled-success-selected-background-color:\n * tag-filled-success-selected-border-color:\n * tag-filled-info-background-color:\n * tag-filled-info-border-color:\n * tag-filled-info-text-color:\n * tag-filled-info-active-background-color:\n * tag-filled-info-active-border-color:\n * tag-filled-info-hover-background-color:\n * tag-filled-info-hover-border-color:\n * tag-filled-info-selected-background-color:\n * tag-filled-info-selected-border-color:\n * tag-filled-warning-background-color:\n * tag-filled-warning-border-color:\n * tag-filled-warning-text-color:\n * tag-filled-warning-active-background-color:\n * tag-filled-warning-active-border-color:\n * tag-filled-warning-hover-background-color:\n * tag-filled-warning-hover-border-color:\n * tag-filled-warning-selected-background-color:\n * tag-filled-warning-selected-border-color:\n * tag-filled-danger-background-color:\n * tag-filled-danger-border-color:\n * tag-filled-danger-text-color:\n * tag-filled-danger-active-background-color:\n * tag-filled-danger-active-border-color:\n * tag-filled-danger-hover-background-color:\n * tag-filled-danger-hover-border-color:\n * tag-filled-danger-selected-background-color:\n * tag-filled-danger-selected-border-color:\n * tag-filled-control-background-color:\n * tag-filled-control-border-color:\n * tag-filled-control-text-color:\n * tag-filled-control-active-background-color:\n * tag-filled-control-active-border-color:\n * tag-filled-control-hover-background-color:\n * tag-filled-control-hover-border-color:\n * tag-filled-control-selected-background-color:\n * tag-filled-control-selected-border-color:\n * tag-outline-basic-background-color:\n * tag-outline-basic-border-color:\n * tag-outline-basic-text-color:\n * tag-outline-basic-active-background-color:\n * tag-outline-basic-active-border-color:\n * tag-outline-basic-active-text-color:\n * tag-outline-basic-hover-background-color:\n * tag-outline-basic-hover-border-color:\n * tag-outline-basic-hover-text-color:\n * tag-outline-basic-selected-background-color:\n * tag-outline-basic-selected-border-color:\n * tag-outline-basic-selected-text-color:\n * tag-outline-primary-background-color:\n * tag-outline-primary-border-color:\n * tag-outline-primary-text-color:\n * tag-outline-primary-active-background-color:\n * tag-outline-primary-active-border-color:\n * tag-outline-primary-active-text-color:\n * tag-outline-primary-hover-background-color:\n * tag-outline-primary-hover-border-color:\n * tag-outline-primary-hover-text-color:\n * tag-outline-primary-selected-background-color:\n * tag-outline-primary-selected-border-color:\n * tag-outline-primary-selected-text-color:\n * tag-outline-success-background-color:\n * tag-outline-success-border-color:\n * tag-outline-success-text-color:\n * tag-outline-success-active-background-color:\n * tag-outline-success-active-border-color:\n * tag-outline-success-active-text-color:\n * tag-outline-success-hover-background-color:\n * tag-outline-success-hover-border-color:\n * tag-outline-success-hover-text-color:\n * tag-outline-success-selected-background-color:\n * tag-outline-success-selected-border-color:\n * tag-outline-success-selected-text-color:\n * tag-outline-info-background-color:\n * tag-outline-info-border-color:\n * tag-outline-info-text-color:\n * tag-outline-info-active-background-color:\n * tag-outline-info-active-border-color:\n * tag-outline-info-active-text-color:\n * tag-outline-info-hover-background-color:\n * tag-outline-info-hover-border-color:\n * tag-outline-info-hover-text-color:\n * tag-outline-info-selected-background-color:\n * tag-outline-info-selected-border-color:\n * tag-outline-info-selected-text-color:\n * tag-outline-warning-background-color:\n * tag-outline-warning-border-color:\n * tag-outline-warning-text-color:\n * tag-outline-warning-active-background-color:\n * tag-outline-warning-active-border-color:\n * tag-outline-warning-active-text-color:\n * tag-outline-warning-hover-background-color:\n * tag-outline-warning-hover-border-color:\n * tag-outline-warning-hover-text-color:\n * tag-outline-warning-selected-background-color:\n * tag-outline-warning-selected-border-color:\n * tag-outline-warning-selected-text-color:\n * tag-outline-danger-background-color:\n * tag-outline-danger-border-color:\n * tag-outline-danger-text-color:\n * tag-outline-danger-active-background-color:\n * tag-outline-danger-active-border-color:\n * tag-outline-danger-active-text-color:\n * tag-outline-danger-hover-background-color:\n * tag-outline-danger-hover-border-color:\n * tag-outline-danger-hover-text-color:\n * tag-outline-danger-selected-background-color:\n * tag-outline-danger-selected-border-color:\n * tag-outline-danger-selected-text-color:\n * tag-outline-control-background-color:\n * tag-outline-control-border-color:\n * tag-outline-control-text-color:\n * tag-outline-control-active-background-color:\n * tag-outline-control-active-border-color:\n * tag-outline-control-active-text-color:\n * tag-outline-control-hover-background-color:\n * tag-outline-control-hover-border-color:\n * tag-outline-control-hover-text-color:\n * tag-outline-control-selected-background-color:\n * tag-outline-control-selected-border-color:\n * tag-outline-control-selected-text-color:\n */\n\nlet NbTagComponent = /*#__PURE__*/(() => {\n  class NbTagComponent {\n    constructor(_hostElement, cd, renderer, zone, statusService) {\n      this._hostElement = _hostElement;\n      this.cd = cd;\n      this.renderer = renderer;\n      this.zone = zone;\n      this.statusService = statusService;\n      this._destroy$ = new Subject();\n      this._selected = false;\n      this._removable = false;\n      /**\n       * Tag appearance: `filled`, `outline`.\n       */\n\n      this.appearance = 'filled';\n      /**\n       * Tag status: `basic`, `primary`, `info`, `success`, `warning`, `danger`, `control`.\n       */\n\n      this.status = 'basic';\n      /**\n       * Tag size: `tiny`, `small`, `medium`, `large`, `giant`.\n       */\n\n      this.size = 'medium';\n      this.role = 'option';\n      /**\n       * Emits when the user removes the tag\n       * (whether by clicking on the remove button or by pressing `delete` or `backspace` key).\n       */\n\n      this.remove = new EventEmitter();\n      this.selectedChange = new EventEmitter();\n      this._isActive = false;\n      this._id = `nb-tag-${tagUniqueId++}`;\n    }\n\n    get destroy$() {\n      return this._destroy$.asObservable();\n    }\n\n    get selected() {\n      return this._selected;\n    }\n\n    set selected(value) {\n      if (this.selected !== convertToBoolProperty(value)) {\n        this._selected = !this.selected;\n        this.selectedChange.emit({\n          tag: this,\n          selected: this.selected\n        });\n      }\n    }\n    /**\n     * Controls whether the user can remove a tag or not.\n     */\n\n\n    get removable() {\n      return this._removable;\n    }\n\n    set removable(value) {\n      this._removable = convertToBoolProperty(value);\n    }\n\n    get filled() {\n      return this.appearance === 'filled';\n    }\n\n    set filled(value) {\n      if (convertToBoolProperty(value)) {\n        this.appearance = 'filled';\n      }\n    }\n\n    get outline() {\n      return this.appearance === 'outline';\n    }\n\n    set outline(value) {\n      if (convertToBoolProperty(value)) {\n        this.appearance = 'outline';\n      }\n    }\n\n    get basic() {\n      return this.status === 'basic';\n    }\n\n    get primary() {\n      return this.status === 'primary';\n    }\n\n    get success() {\n      return this.status === 'success';\n    }\n\n    get info() {\n      return this.status === 'info';\n    }\n\n    get warning() {\n      return this.status === 'warning';\n    }\n\n    get danger() {\n      return this.status === 'danger';\n    }\n\n    get control() {\n      return this.status === 'control';\n    }\n\n    get tiny() {\n      return this.size === 'tiny';\n    }\n\n    get small() {\n      return this.size === 'small';\n    }\n\n    get medium() {\n      return this.size === 'medium';\n    }\n\n    get large() {\n      return this.size === 'large';\n    }\n\n    get giant() {\n      return this.size === 'giant';\n    }\n\n    get additionalClasses() {\n      if (this.statusService.isCustomStatus(this.status)) {\n        return [this.statusService.getStatusClass(this.status)];\n      }\n\n      return [];\n    }\n\n    _remove() {\n      if (this.removable) {\n        this.remove.emit(this);\n      }\n    }\n\n    ngAfterViewInit() {\n      // TODO: #2254\n      this.zone.runOutsideAngular(() => setTimeout(() => {\n        this.renderer.addClass(this._hostElement.nativeElement, 'nb-transition');\n      }));\n    }\n\n    ngOnDestroy() {\n      this._destroy$.next(this);\n    }\n\n    _toggleSelection() {\n      this.selected = !this.selected;\n      this.cd.markForCheck();\n    }\n\n    setActiveStyles() {\n      if (!this._isActive) {\n        this._isActive = true;\n        this.cd.markForCheck();\n      }\n    }\n\n    setInactiveStyles() {\n      if (this._isActive) {\n        this._isActive = false;\n        this.cd.markForCheck();\n      }\n    }\n\n  }\n\n  NbTagComponent.ɵfac = function NbTagComponent_Factory(t) {\n    return new (t || NbTagComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(NbStatusService));\n  };\n\n  NbTagComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbTagComponent,\n    selectors: [[\"nb-tag\"]],\n    hostVars: 37,\n    hostBindings: function NbTagComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown.delete\", function NbTagComponent_keydown_delete_HostBindingHandler() {\n          return ctx._remove();\n        })(\"keydown.backspace\", function NbTagComponent_keydown_backspace_HostBindingHandler() {\n          return ctx._remove();\n        });\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"role\", ctx.role)(\"id\", ctx._id)(\"aria-selected\", ctx.selected);\n        ɵngcc0.ɵɵclassMap(ctx.additionalClasses);\n        ɵngcc0.ɵɵclassProp(\"active\", ctx._isActive)(\"selected\", ctx.selected)(\"appearance-filled\", ctx.filled)(\"appearance-outline\", ctx.outline)(\"status-basic\", ctx.basic)(\"status-primary\", ctx.primary)(\"status-success\", ctx.success)(\"status-info\", ctx.info)(\"status-warning\", ctx.warning)(\"status-danger\", ctx.danger)(\"status-control\", ctx.control)(\"size-tiny\", ctx.tiny)(\"size-small\", ctx.small)(\"size-medium\", ctx.medium)(\"size-large\", ctx.large)(\"size-giant\", ctx.giant);\n      }\n    },\n    inputs: {\n      appearance: \"appearance\",\n      status: \"status\",\n      size: \"size\",\n      role: \"role\",\n      selected: \"selected\",\n      removable: \"removable\",\n      text: \"text\"\n    },\n    outputs: {\n      remove: \"remove\",\n      selectedChange: \"selectedChange\"\n    },\n    exportAs: [\"nbTag\"],\n    decls: 2,\n    vars: 2,\n    consts: [[\"icon\", \"close-outline\", \"pack\", \"nebular-essentials\", \"aria-hidden\", \"true\", 3, \"class\", \"click\", 4, \"ngIf\"], [\"icon\", \"close-outline\", \"pack\", \"nebular-essentials\", \"aria-hidden\", \"true\", 3, \"click\"]],\n    template: function NbTagComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtext(0);\n        ɵngcc0.ɵɵtemplate(1, NbTagComponent_nb_icon_1_Template, 1, 3, \"nb-icon\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵtextInterpolate1(\"\", ctx.text, \"\\n\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.removable);\n      }\n    },\n    directives: [ɵngcc2.NgIf, NbIconComponent],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return NbTagComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n *\n * `[nbTagInput]` directive connects input with a `nb-tag-list` component.\n *\n * @stacked-example(Tag Input, tag/tag-input.component)\n *\n * @additional-example(Tag Input with Autocomplete, tag/tag-input-with-autocomplete.component)\n *\n * @styles\n *\n * tag-list-tiny-tag-offset:\n * tag-list-small-tag-offset:\n * tag-list-medium-tag-offset:\n * tag-list-large-tag-offset:\n * tag-list-giant-tag-offset:\n * tag-list-with-input-tiny-padding:\n * tag-list-with-input-small-padding:\n * tag-list-with-input-medium-padding:\n * tag-list-with-input-large-padding:\n * tag-list-with-input-giant-padding:\n */\n\n\nlet NbTagInputDirective = /*#__PURE__*/(() => {\n  class NbTagInputDirective extends NbInputDirective {\n    constructor(_hostElement, focusMonitor, renderer, zone, statusService) {\n      super(_hostElement, focusMonitor, renderer, zone, statusService);\n      this._hostElement = _hostElement;\n      this.focusMonitor = focusMonitor;\n      this.renderer = renderer;\n      this.zone = zone;\n      this.statusService = statusService;\n      this.keyDown$ = new Subject();\n      /**\n       * Controls which keys should trigger tag add event.\n       */\n\n      this.separatorKeys = [ENTER];\n      /**\n       * Emits when a tag need to be added.\n       */\n\n      this.tagAdd = new EventEmitter();\n      this.nbTagInputClass = true;\n    }\n\n    get _value() {\n      return this._hostElement.nativeElement.value;\n    }\n\n    _onKeydown(event) {\n      this.keyDown$.next(event);\n    }\n\n    ngAfterViewInit() {\n      super.ngAfterViewInit();\n      this.keyDown$.pipe(filter(({\n        keyCode\n      }) => this.isSeparatorKey(keyCode)), map(() => this._value), takeUntil(this.destroy$)).subscribe(value => this.tagAdd.emit({\n        value,\n        input: this._hostElement\n      }));\n    }\n\n    isSeparatorKey(keyCode) {\n      return this.separatorKeys.includes(keyCode);\n    }\n\n  }\n\n  NbTagInputDirective.ɵfac = function NbTagInputDirective_Factory(t) {\n    return new (t || NbTagInputDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(NbFocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(NbStatusService));\n  };\n\n  NbTagInputDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NbTagInputDirective,\n    selectors: [[\"input\", \"nbTagInput\", \"\"]],\n    hostVars: 2,\n    hostBindings: function NbTagInputDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown\", function NbTagInputDirective_keydown_HostBindingHandler($event) {\n          return ctx._onKeydown($event);\n        });\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"nb-tag-input\", ctx.nbTagInputClass);\n      }\n    },\n    inputs: {\n      separatorKeys: \"separatorKeys\"\n    },\n    outputs: {\n      tagAdd: \"tagAdd\"\n    },\n    exportAs: [\"nbTagInput\"],\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: NbFormFieldControl,\n      useExisting: NbTagInputDirective\n    }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return NbTagInputDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n *\n * `nb-tag-list` component displays a list of `nb-tag` components.\n *\n * @stacked-example(Tag List Showcase, tag/tag-showcase.component)\n *\n * @styles\n *\n * tag-list-tiny-tag-offset:\n * tag-list-small-tag-offset:\n * tag-list-medium-tag-offset:\n * tag-list-large-tag-offset:\n * tag-list-giant-tag-offset:\n * tag-list-with-input-tiny-padding:\n * tag-list-with-input-small-padding:\n * tag-list-with-input-medium-padding:\n * tag-list-with-input-large-padding:\n * tag-list-with-input-giant-padding:\n * tag-list-with-input-rectangle-border-radius:\n * tag-list-with-input-semi-round-border-radius:\n * tag-list-with-input-round-border-radius:\n */\n\n\nlet NbTagListComponent = /*#__PURE__*/(() => {\n  class NbTagListComponent {\n    constructor(hostElement, cd, renderer, zone, focusMonitor, activeDescendantKeyManagerFactory, directionService, statusService) {\n      this.hostElement = hostElement;\n      this.cd = cd;\n      this.renderer = renderer;\n      this.zone = zone;\n      this.focusMonitor = focusMonitor;\n      this.activeDescendantKeyManagerFactory = activeDescendantKeyManagerFactory;\n      this.directionService = directionService;\n      this.statusService = statusService;\n      this.destroy$ = new Subject();\n      this.keyDown$ = new Subject();\n      this.tagClick$ = new Subject();\n      this.focused = false;\n      /**\n       * Controls tags offset.\n       */\n\n      this.size = 'medium';\n      this.tabIndex = 0;\n      this.role = 'listbox';\n      this._multiple = false;\n      this.activeTagId = null;\n      /**\n       * Emits when tag need to be removed (whether because of click on the remove button\n       * or when `delete` or `backspace` key pressed).\n       */\n\n      this.tagRemove = new EventEmitter();\n    }\n\n    get multiple() {\n      return this._multiple;\n    }\n\n    set multiple(value) {\n      this._multiple = convertToBoolProperty(value);\n    }\n\n    get _hasInput() {\n      return !!this.tagInput;\n    }\n\n    get _isFocused() {\n      return this.focused;\n    }\n\n    get _isFullWidth() {\n      var _a;\n\n      return !!((_a = this.tagInput) === null || _a === void 0 ? void 0 : _a.fullWidth);\n    }\n\n    get _inputClasses() {\n      if (this._hasInput) {\n        return [`shape-${this.tagInput.shape}`, `size-${this.tagInput.fieldSize}`, this.statusService.getStatusClass(this.tagInput.status)];\n      }\n\n      return [`size-${this.size}`];\n    }\n\n    _onKeydown(event) {\n      this.keyDown$.next(event);\n    }\n\n    _onClick({\n      target\n    }) {\n      const clickedTag = this.tags.find(tag => tag._hostElement.nativeElement === target);\n\n      if (clickedTag) {\n        this.tagClick$.next(clickedTag);\n      }\n    }\n\n    ngOnInit() {\n      this.focusMonitor.monitor(this.hostElement, true).pipe(map(origin => !!origin), finalize(() => this.focusMonitor.stopMonitoring(this.hostElement)), takeUntil(this.destroy$)).subscribe(isFocused => this.onFocusChange(isFocused));\n    }\n\n    ngAfterContentInit() {\n      this.initKeyManager();\n      this.setAutocompleteCustomHost();\n    }\n\n    ngAfterViewInit() {\n      this.listenToLayoutDirectionChange();\n      this.listenListKeyDown();\n      this.listenInputKeyDown();\n      this.listenTagClick();\n      this.listenTagRemove();\n      this.listenTagDestroy();\n      this.listenActiveTagChange();\n      this.listenNoTags(); // TODO: #2254\n\n      this.zone.runOutsideAngular(() => setTimeout(() => {\n        this.renderer.addClass(this.hostElement.nativeElement, 'nb-transition');\n      }));\n    }\n\n    ngOnDestroy() {\n      this.destroy$.next();\n    }\n\n    initKeyManager() {\n      this.keyManager = this.activeDescendantKeyManagerFactory.create(this.tags).withHorizontalOrientation(this.directionService.getDirection()).withWrap();\n    }\n\n    listenToLayoutDirectionChange() {\n      this.directionService.onDirectionChange().pipe(takeUntil(this.destroy$)).subscribe(direction => this.keyManager.withHorizontalOrientation(direction));\n    }\n\n    listenListKeyDown() {\n      const tagListKeyDown$ = this.keyDown$.pipe(filter(({\n        target\n      }) => target === this.hostElement.nativeElement));\n      const activeTagKeyDown$ = tagListKeyDown$.pipe(filter(() => !!this.keyManager.activeItem));\n      tagListKeyDown$.pipe(takeUntil(this.destroy$)).subscribe(event => this.keyManager.onKeydown(event));\n      activeTagKeyDown$.pipe(filter(({\n        keyCode\n      }) => keyCode === SPACE), takeUntil(this.destroy$)).subscribe(event => {\n        this.toggleTag(this.keyManager.activeItem); // Prevents page scroll.\n\n        event.preventDefault();\n      });\n      activeTagKeyDown$.pipe(filter(({\n        keyCode\n      }) => this.isBackspaceOrDelete(keyCode)), map(() => this.keyManager.activeItem), takeUntil(this.destroy$)).subscribe(tagToRemove => tagToRemove._remove());\n    }\n\n    listenInputKeyDown() {\n      const inputKeyDown$ = this.keyDown$.pipe(filter(({\n        target\n      }) => {\n        var _a;\n\n        return target === ((_a = this.tagInput) === null || _a === void 0 ? void 0 : _a._hostElement.nativeElement);\n      }));\n      inputKeyDown$.pipe(filter(({\n        keyCode\n      }) => {\n        return this.tagInput._value === '' && this.isBackspaceOrDelete(keyCode) && this.tags.length > 0;\n      }), takeUntil(this.destroy$)).subscribe(() => {\n        this.hostElement.nativeElement.focus();\n        this.keyManager.setLastItemActive();\n        this.cd.markForCheck();\n      });\n    }\n\n    listenTagClick() {\n      this.tagClick$.pipe(takeUntil(this.destroy$)).subscribe(clickedTag => {\n        this.toggleTag(clickedTag);\n        this.keyManager.setActiveItem(clickedTag);\n      });\n    }\n\n    listenTagRemove() {\n      this.tags.changes.pipe(startWith(this.tags), switchMap(tags => merge(...tags.map(tag => tag.remove))), takeUntil(this.destroy$)).subscribe(tagToRemove => this.tagRemove.emit(tagToRemove));\n    }\n\n    listenTagDestroy() {\n      this.tags.changes.pipe(startWith(this.tags), switchMap(tags => merge(...tags.map(tag => tag.destroy$))), filter(destroyedTag => destroyedTag === this.keyManager.activeItem), map(destroyedTag => destroyedTag === this.tags.last), takeUntil(this.destroy$)).subscribe(isLastTagDestroyed => {\n        if (isLastTagDestroyed) {\n          this.keyManager.setPreviousItemActive();\n        } else {\n          this.keyManager.setNextItemActive();\n        }\n      });\n    }\n\n    listenNoTags() {\n      this.tags.changes.pipe(startWith(this.tags), filter(tags => tags.length === 0), takeUntil(this.destroy$)).subscribe(() => this.focusInputIfActive());\n    }\n\n    listenActiveTagChange() {\n      this.keyManager.change.pipe(map(() => {\n        var _a;\n\n        return (_a = this.keyManager.activeItem) === null || _a === void 0 ? void 0 : _a._id;\n      }), takeUntil(this.destroy$)).subscribe(activeTagId => {\n        this.activeTagId = activeTagId;\n        this.cd.markForCheck();\n      });\n    }\n\n    onFocusChange(isFocused) {\n      var _a;\n\n      this.focused = isFocused;\n      this.cd.markForCheck();\n\n      if (!isFocused || ((_a = this.tagInput) === null || _a === void 0 ? void 0 : _a.focused$.value)) {\n        this.keyManager.setActiveItem(-1);\n        return;\n      } // Focus input when focusing tag list without tags. Otherwise select first tag.\n\n\n      if (this.tags.length === 0 && this._hasInput) {\n        this.focusInput();\n      } else {\n        this.keyManager.setFirstItemActive();\n      }\n    }\n\n    isBackspaceOrDelete(keyCode) {\n      return keyCode === BACKSPACE || keyCode === DELETE;\n    }\n\n    setAutocompleteCustomHost() {\n      if (this.autocompleteDirective) {\n        this.autocompleteDirective.customOverlayHost = this.hostElement;\n      }\n    }\n\n    toggleTag(tagToToggle) {\n      tagToToggle._toggleSelection();\n\n      if (tagToToggle.selected && !this.multiple) {\n        this.tags.forEach(tag => {\n          if (tag !== tagToToggle) {\n            tag.selected = false;\n          }\n        });\n      }\n    }\n\n    focusInput() {\n      if (this._hasInput) {\n        this.tagInput._hostElement.nativeElement.focus();\n      }\n    }\n\n    focusInputIfActive() {\n      if (this._isFocused) {\n        this.focusInput();\n      }\n    }\n\n  }\n\n  NbTagListComponent.ɵfac = function NbTagListComponent_Factory(t) {\n    return new (t || NbTagListComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(NbFocusMonitor), ɵngcc0.ɵɵdirectiveInject(NbActiveDescendantKeyManagerFactoryService), ɵngcc0.ɵɵdirectiveInject(NbLayoutDirectionService), ɵngcc0.ɵɵdirectiveInject(NbStatusService));\n  };\n\n  NbTagListComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbTagListComponent,\n    selectors: [[\"nb-tag-list\"]],\n    contentQueries: function NbTagListComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NbTagInputDirective, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NbAutocompleteDirective, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NbTagComponent, 4);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tagInput = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.autocompleteDirective = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tags = _t);\n      }\n    },\n    hostVars: 12,\n    hostBindings: function NbTagListComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown\", function NbTagListComponent_keydown_HostBindingHandler($event) {\n          return ctx._onKeydown($event);\n        })(\"click\", function NbTagListComponent_click_HostBindingHandler($event) {\n          return ctx._onClick($event);\n        });\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.tabIndex)(\"role\", ctx.role)(\"aria-activedescendant\", ctx.activeTagId)(\"aria-multiselectable\", ctx.multiple);\n        ɵngcc0.ɵɵclassMap(ctx._inputClasses);\n        ɵngcc0.ɵɵclassProp(\"nb-tag-list-with-input\", ctx._hasInput)(\"focus\", ctx._isFocused)(\"input-full-width\", ctx._isFullWidth);\n      }\n    },\n    inputs: {\n      size: \"size\",\n      tabIndex: \"tabIndex\",\n      role: \"role\",\n      multiple: \"multiple\"\n    },\n    outputs: {\n      tagRemove: \"tagRemove\"\n    },\n    exportAs: [\"nbTagList\"],\n    ngContentSelectors: _c51,\n    decls: 2,\n    vars: 0,\n    consts: [[1, \"nb-tag-list-tags-wrapper\"]],\n    template: function NbTagListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c50);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return NbTagListComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nlet NbTagModule = /*#__PURE__*/(() => {\n  class NbTagModule {}\n\n  NbTagModule.ɵfac = function NbTagModule_Factory(t) {\n    return new (t || NbTagModule)();\n  };\n\n  NbTagModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NbTagModule\n  });\n  NbTagModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, NbIconModule]]\n  });\n  return NbTagModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NbTagModule, {\n    declarations: function () {\n      return [NbTagComponent, NbTagListComponent, NbTagInputDirective];\n    },\n    imports: function () {\n      return [CommonModule, NbIconModule];\n    },\n    exports: function () {\n      return [NbTagComponent, NbTagListComponent, NbTagInputDirective];\n    }\n  });\n})();\n/*\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nconst NB_DEFAULT_ROW_LEVEL = 0;\n/**\n * Implicit context of cells and rows\n */\n\nclass NbTreeGridPresentationNode {\n  constructor(\n  /**\n   * Data object associated with row\n   */\n  data, children,\n  /**\n   * Row expand state\n   */\n  expanded, level) {\n    this.data = data;\n    this.children = children;\n    this.expanded = expanded;\n    this.level = level;\n  }\n  /**\n   * True if row has child rows\n   */\n\n\n  hasChildren() {\n    return !!this.children && !!this.children.length;\n  }\n\n}\n/*\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nlet NbTreeGridDataService = /*#__PURE__*/(() => {\n  class NbTreeGridDataService {\n    constructor() {\n      this.defaultGetters = {\n        dataGetter: node => node.data,\n        childrenGetter: d => d.children || undefined,\n        expandedGetter: d => !!d.expanded\n      };\n    }\n\n    toPresentationNodes(nodes, customGetters, level = NB_DEFAULT_ROW_LEVEL) {\n      const getters = Object.assign(Object.assign({}, this.defaultGetters), customGetters);\n      return this.mapNodes(nodes, getters, level);\n    }\n\n    mapNodes(nodes, getters, level) {\n      const {\n        dataGetter,\n        childrenGetter,\n        expandedGetter\n      } = getters;\n      return nodes.map(node => {\n        const childrenNodes = childrenGetter(node);\n        let children;\n\n        if (childrenNodes) {\n          children = this.toPresentationNodes(childrenNodes, getters, level + 1);\n        }\n\n        return new NbTreeGridPresentationNode(dataGetter(node), children, expandedGetter(node), level);\n      });\n    }\n\n    flattenExpanded(nodes) {\n      return nodes.reduce((res, node) => {\n        res.push(node);\n\n        if (node.expanded && node.hasChildren()) {\n          res.push(...this.flattenExpanded(node.children));\n        }\n\n        return res;\n      }, []);\n    }\n\n    copy(nodes) {\n      return nodes.map(node => {\n        let children;\n\n        if (node.hasChildren()) {\n          children = this.copy(node.children);\n        }\n\n        return new NbTreeGridPresentationNode(node.data, children, node.expanded, node.level);\n      });\n    }\n\n  }\n\n  NbTreeGridDataService.ɵfac = function NbTreeGridDataService_Factory(t) {\n    return new (t || NbTreeGridDataService)();\n  };\n\n  NbTreeGridDataService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: NbTreeGridDataService,\n    factory: NbTreeGridDataService.ɵfac\n  });\n  return NbTreeGridDataService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/*\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * Service used to filter tree grid data. Searched searchString in all object values.\n * If you need custom filter, you can extend this service and override filterPredicate or whole filter method.\n */\n\n\nlet NbTreeGridFilterService = /*#__PURE__*/(() => {\n  class NbTreeGridFilterService {\n    filter(query, data) {\n      if (!query) {\n        return data;\n      }\n\n      return data.reduce((filtered, node) => {\n        let filteredChildren;\n\n        if (node.children) {\n          filteredChildren = this.filter(query, node.children);\n          node.children = filteredChildren;\n        }\n\n        node.expanded = false;\n\n        if (filteredChildren && filteredChildren.length) {\n          node.expanded = true;\n          filtered.push(node);\n        } else if (this.filterPredicate(node.data, query)) {\n          filtered.push(node);\n        }\n\n        return filtered;\n      }, []);\n    }\n\n    filterPredicate(data, searchQuery) {\n      const preparedQuery = searchQuery.trim().toLocaleLowerCase();\n\n      for (const val of Object.values(data)) {\n        const preparedVal = `${val}`.trim().toLocaleLowerCase();\n\n        if (preparedVal.includes(preparedQuery)) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n  }\n\n  NbTreeGridFilterService.ɵfac = function NbTreeGridFilterService_Factory(t) {\n    return new (t || NbTreeGridFilterService)();\n  };\n\n  NbTreeGridFilterService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: NbTreeGridFilterService,\n    factory: NbTreeGridFilterService.ɵfac\n  });\n  return NbTreeGridFilterService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/*\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nvar NbSortDirection = /*#__PURE__*/(() => {\n  (function (NbSortDirection) {\n    NbSortDirection[\"ASCENDING\"] = \"asc\";\n    NbSortDirection[\"DESCENDING\"] = \"desc\";\n    NbSortDirection[\"NONE\"] = \"\";\n  })(NbSortDirection || (NbSortDirection = {}));\n\n  return NbSortDirection;\n})();\nconst sortDirections = [NbSortDirection.ASCENDING, NbSortDirection.DESCENDING, NbSortDirection.NONE];\n/**\n * Directive triggers sort method of passed object when sort header changes direction\n */\n\nlet NbSortDirective = /*#__PURE__*/(() => {\n  class NbSortDirective {\n    constructor() {\n      this.sort = new EventEmitter();\n    }\n\n    emitSort(sortRequest) {\n      if (this.sortable && this.sortable.sort) {\n        this.sortable.sort(sortRequest);\n      }\n\n      this.sort.emit(sortRequest);\n    }\n\n  }\n\n  NbSortDirective.ɵfac = function NbSortDirective_Factory(t) {\n    return new (t || NbSortDirective)();\n  };\n\n  NbSortDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NbSortDirective,\n    selectors: [[\"\", \"nbSort\", \"\"]],\n    inputs: {\n      sortable: [\"nbSort\", \"sortable\"]\n    },\n    outputs: {\n      sort: \"sort\"\n    }\n  });\n  return NbSortDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Directive for headers sort icons. Mark you icon implementation with this structural directive and\n * it'll set template's implicit context with current direction. Context also has `isAscending`,\n * `isDescending` and `isNone` properties.\n */\n\n\nlet NbSortHeaderIconDirective = /*#__PURE__*/(() => {\n  class NbSortHeaderIconDirective {}\n\n  NbSortHeaderIconDirective.ɵfac = function NbSortHeaderIconDirective_Factory(t) {\n    return new (t || NbSortHeaderIconDirective)();\n  };\n\n  NbSortHeaderIconDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NbSortHeaderIconDirective,\n    selectors: [[\"\", \"nbSortHeaderIcon\", \"\"]]\n  });\n  return NbSortHeaderIconDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet NbSortIconComponent = /*#__PURE__*/(() => {\n  class NbSortIconComponent {\n    constructor() {\n      this.direction = NbSortDirection.NONE;\n    }\n\n    isAscending() {\n      return this.direction === NbSortDirection.ASCENDING;\n    }\n\n    isDescending() {\n      return this.direction === NbSortDirection.DESCENDING;\n    }\n\n    isDirectionSet() {\n      return this.isAscending() || this.isDescending();\n    }\n\n  }\n\n  NbSortIconComponent.ɵfac = function NbSortIconComponent_Factory(t) {\n    return new (t || NbSortIconComponent)();\n  };\n\n  NbSortIconComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbSortIconComponent,\n    selectors: [[\"nb-sort-icon\"]],\n    inputs: {\n      direction: \"direction\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[4, \"ngIf\"], [\"icon\", \"chevron-down-outline\", \"pack\", \"nebular-essentials\", \"aria-hidden\", \"true\", 4, \"ngIf\"], [\"icon\", \"chevron-up-outline\", \"pack\", \"nebular-essentials\", \"aria-hidden\", \"true\", 4, \"ngIf\"], [\"icon\", \"chevron-down-outline\", \"pack\", \"nebular-essentials\", \"aria-hidden\", \"true\"], [\"icon\", \"chevron-up-outline\", \"pack\", \"nebular-essentials\", \"aria-hidden\", \"true\"]],\n    template: function NbSortIconComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, NbSortIconComponent_ng_container_0_Template, 3, 2, \"ng-container\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isDirectionSet());\n      }\n    },\n    directives: [ɵngcc2.NgIf, NbIconComponent],\n    encapsulation: 2\n  });\n  return NbSortIconComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Marks header as sort header so it emitting sort event when clicked.\n */\n\n\nlet NbSortHeaderComponent = /*#__PURE__*/(() => {\n  class NbSortHeaderComponent {\n    constructor(sort, columnDef) {\n      this.sort = sort;\n      this.columnDef = columnDef;\n      this.disabledValue = false;\n    }\n    /**\n     * Disable sort header\n     */\n\n\n    set disabled(value) {\n      this.disabledValue = convertToBoolProperty(value);\n    }\n\n    get disabled() {\n      return this.disabledValue;\n    }\n\n    sortIfEnabled() {\n      if (!this.disabled) {\n        this.sortData();\n      }\n    }\n\n    isAscending() {\n      return this.direction === NbSortDirection.ASCENDING;\n    }\n\n    isDescending() {\n      return this.direction === NbSortDirection.DESCENDING;\n    }\n\n    sortData() {\n      const sortRequest = this.createSortRequest();\n      this.sort.emitSort(sortRequest);\n    }\n\n    getIconContext() {\n      return {\n        $implicit: this.direction,\n        isAscending: this.isAscending(),\n        isDescending: this.isDescending(),\n        isNone: !this.isAscending() && !this.isDescending()\n      };\n    }\n\n    getDisabledAttributeValue() {\n      return this.disabled ? '' : null;\n    }\n\n    createSortRequest() {\n      this.direction = this.getNextDirection();\n      return {\n        direction: this.direction,\n        column: this.columnDef.name\n      };\n    }\n\n    getNextDirection() {\n      const sortDirectionCycle = sortDirections;\n      let nextDirectionIndex = sortDirectionCycle.indexOf(this.direction) + 1;\n\n      if (nextDirectionIndex >= sortDirectionCycle.length) {\n        nextDirectionIndex = 0;\n      }\n\n      return sortDirectionCycle[nextDirectionIndex];\n    }\n\n  }\n\n  NbSortHeaderComponent.ɵfac = function NbSortHeaderComponent_Factory(t) {\n    return new (t || NbSortHeaderComponent)(ɵngcc0.ɵɵdirectiveInject(NbSortDirective), ɵngcc0.ɵɵdirectiveInject(NB_SORT_HEADER_COLUMN_DEF));\n  };\n\n  NbSortHeaderComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbSortHeaderComponent,\n    selectors: [[\"\", \"nbSortHeader\", \"\"]],\n    contentQueries: function NbSortHeaderComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NbSortHeaderIconDirective, 5, TemplateRef);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.sortIcon = _t.first);\n      }\n    },\n    hostVars: 2,\n    hostBindings: function NbSortHeaderComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function NbSortHeaderComponent_click_HostBindingHandler() {\n          return ctx.sortIfEnabled();\n        });\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"disabled\", ctx.disabled);\n      }\n    },\n    inputs: {\n      disabled: \"disabled\",\n      direction: [\"nbSortHeader\", \"direction\"]\n    },\n    attrs: _c52,\n    ngContentSelectors: _c0,\n    decls: 5,\n    vars: 5,\n    consts: [[\"type\", \"button\", 1, \"nb-tree-grid-header-change-sort-button\", 3, \"click\"], [3, \"direction\", 4, \"ngIf\", \"ngIfElse\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"customIcon\", \"\"], [3, \"direction\"]],\n    template: function NbSortHeaderComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"button\", 0);\n        ɵngcc0.ɵɵlistener(\"click\", function NbSortHeaderComponent_Template_button_click_0_listener() {\n          return ctx.sortData();\n        });\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(2, NbSortHeaderComponent_nb_sort_icon_2_Template, 1, 1, \"nb-sort-icon\", 1);\n        ɵngcc0.ɵɵtemplate(3, NbSortHeaderComponent_ng_template_3_Template, 0, 0, \"ng-template\", 2, 3, ɵngcc0.ɵɵtemplateRefExtractor);\n      }\n\n      if (rf & 2) {\n        const _r1 = ɵngcc0.ɵɵreference(4);\n\n        ɵngcc0.ɵɵattribute(\"disabled\", ctx.getDisabledAttributeValue());\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.sortIcon)(\"ngIfElse\", _r1);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx.sortIcon)(\"ngTemplateOutletContext\", ctx.getIconContext());\n      }\n    },\n    directives: [ɵngcc2.NgIf, ɵngcc2.NgTemplateOutlet, NbSortIconComponent],\n    encapsulation: 2\n  });\n  return NbSortHeaderComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/*\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * Service used to sort tree grid data. Uses Array.prototype.sort method.\n * If you need custom sorting, you can extend this service and override comparator or whole sort method.\n */\n\n\nlet NbTreeGridSortService = /*#__PURE__*/(() => {\n  class NbTreeGridSortService {\n    sort(request, data) {\n      if (!request) {\n        return data;\n      }\n\n      const sorted = data.sort((na, nb) => this.comparator(request, na, nb));\n\n      for (const node of data) {\n        if (node.children) {\n          node.children = this.sort(request, node.children);\n        }\n      }\n\n      return sorted;\n    }\n\n    comparator(request, na, nb) {\n      const key = request.column;\n      const dir = request.direction;\n      const a = na.data[key];\n      const b = nb.data[key];\n      let res = 0;\n\n      if (a > b) {\n        res = 1;\n      }\n\n      if (a < b) {\n        res = -1;\n      }\n\n      return dir === NbSortDirection.ASCENDING ? res : res * -1;\n    }\n\n  }\n\n  NbTreeGridSortService.ɵfac = function NbTreeGridSortService_Factory(t) {\n    return new (t || NbTreeGridSortService)();\n  };\n\n  NbTreeGridSortService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: NbTreeGridSortService,\n    factory: NbTreeGridSortService.ɵfac\n  });\n  return NbTreeGridSortService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/*\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nlet NbTreeGridService = /*#__PURE__*/(() => {\n  class NbTreeGridService {\n    expand(data, row, options = {}) {\n      const node = this.find(data, row);\n      node.expanded = true;\n\n      if (options.deep && node.hasChildren()) {\n        node.children.forEach(n => this.expand(data, n.data, options));\n      }\n    }\n\n    collapse(data, row, options = {}) {\n      const node = this.find(data, row);\n      node.expanded = false;\n\n      if (options.deep && node.hasChildren()) {\n        node.children.forEach(n => this.collapse(data, n.data, options));\n      }\n    }\n\n    toggle(data, row, options = {}) {\n      const node = this.find(data, row);\n\n      if (node.expanded) {\n        this.collapse(data, row, options);\n      } else {\n        this.expand(data, row, options);\n      }\n    }\n\n    find(data, row) {\n      const toCheck = [...data];\n\n      for (const node of toCheck) {\n        if (node.data === row) {\n          return node;\n        }\n\n        if (node.hasChildren()) {\n          toCheck.push(...node.children);\n        }\n      }\n    }\n\n  }\n\n  NbTreeGridService.ɵfac = function NbTreeGridService_Factory(t) {\n    return new (t || NbTreeGridService)();\n  };\n\n  NbTreeGridService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: NbTreeGridService,\n    factory: NbTreeGridService.ɵfac\n  });\n  return NbTreeGridService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/*\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nclass NbTreeGridDataSource extends NbDataSource {\n  constructor(sortService, filterService, treeGridService, treeGridDataService) {\n    super();\n    this.sortService = sortService;\n    this.filterService = filterService;\n    this.treeGridService = treeGridService;\n    this.treeGridDataService = treeGridDataService;\n    /** Stream emitting render data to the table (depends on ordered data changes). */\n\n    this.renderData = new BehaviorSubject([]);\n    this.filterRequest = new BehaviorSubject('');\n    this.sortRequest = new BehaviorSubject(null);\n  }\n\n  setData(data, customGetters) {\n    let presentationData = [];\n\n    if (data) {\n      presentationData = this.treeGridDataService.toPresentationNodes(data, customGetters);\n    }\n\n    this.data = new BehaviorSubject(presentationData);\n    this.updateChangeSubscription();\n  }\n\n  connect(collectionViewer) {\n    return this.renderData;\n  }\n\n  disconnect(collectionViewer) {}\n\n  expand(row) {\n    this.treeGridService.expand(this.data.value, row);\n    this.data.next(this.data.value);\n  }\n\n  collapse(row) {\n    this.treeGridService.collapse(this.data.value, row);\n    this.data.next(this.data.value);\n  }\n\n  toggle(row, options) {\n    this.treeGridService.toggle(this.data.value, row, options);\n    this.data.next(this.data.value);\n  }\n\n  toggleByIndex(dataIndex, options) {\n    const node = this.renderData.value && this.renderData.value[dataIndex];\n\n    if (node) {\n      this.toggle(node.data, options);\n    }\n  }\n\n  getLevel(rowIndex) {\n    const row = this.renderData.value[rowIndex];\n    return row ? row.level : NB_DEFAULT_ROW_LEVEL;\n  }\n\n  sort(sortRequest) {\n    this.sortRequest.next(sortRequest);\n  }\n\n  filter(searchQuery) {\n    this.filterRequest.next(searchQuery);\n  }\n\n  updateChangeSubscription() {\n    const dataStream = this.data;\n    const filteredData = combineLatest([dataStream, this.filterRequest]).pipe(map(([data]) => this.treeGridDataService.copy(data)), map(data => this.filterData(data)));\n    const sortedData = combineLatest([filteredData, this.sortRequest]).pipe(map(([data]) => this.sortData(data)));\n    sortedData.pipe(map(data => this.treeGridDataService.flattenExpanded(data))).subscribe(data => this.renderData.next(data));\n  }\n\n  filterData(data) {\n    return this.filterService.filter(this.filterRequest.value, data);\n  }\n\n  sortData(data) {\n    return this.sortService.sort(this.sortRequest.value, data);\n  }\n\n}\n\nlet NbTreeGridDataSourceBuilder = /*#__PURE__*/(() => {\n  class NbTreeGridDataSourceBuilder {\n    constructor(filterService, sortService, treeGridService, treeGridDataService) {\n      this.filterService = filterService;\n      this.sortService = sortService;\n      this.treeGridService = treeGridService;\n      this.treeGridDataService = treeGridDataService;\n    }\n\n    create(data, customGetters) {\n      const dataSource = new NbTreeGridDataSource(this.sortService, this.filterService, this.treeGridService, this.treeGridDataService);\n      dataSource.setData(data, customGetters);\n      return dataSource;\n    }\n\n  }\n\n  NbTreeGridDataSourceBuilder.ɵfac = function NbTreeGridDataSourceBuilder_Factory(t) {\n    return new (t || NbTreeGridDataSourceBuilder)(ɵngcc0.ɵɵinject(NbTreeGridFilterService), ɵngcc0.ɵɵinject(NbTreeGridSortService), ɵngcc0.ɵɵinject(NbTreeGridService), ɵngcc0.ɵɵinject(NbTreeGridDataService));\n  };\n\n  NbTreeGridDataSourceBuilder.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: NbTreeGridDataSourceBuilder,\n    factory: NbTreeGridDataSourceBuilder.ɵfac\n  });\n  return NbTreeGridDataSourceBuilder;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/*\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nconst NB_TREE_GRID = new InjectionToken('NB_TREE_GRID');\nlet NbColumnsService = /*#__PURE__*/(() => {\n  class NbColumnsService {\n    constructor(differs) {\n      this.differs = differs;\n      this.columnHide$ = new Subject();\n      this.columnShow$ = new Subject();\n    }\n\n    setColumns(columns) {\n      if (!this.changesDiffer) {\n        this.changesDiffer = this.differs.find(columns || []).create();\n      }\n\n      if (this.changesDiffer.diff(columns)) {\n        this.allColumns = Array.from(columns);\n        this.visibleColumns = Array.from(columns);\n      }\n    }\n\n    getVisibleColumns() {\n      return this.visibleColumns;\n    }\n\n    hideColumn(column) {\n      const toRemove = this.visibleColumns.indexOf(column);\n\n      if (toRemove > -1) {\n        this.visibleColumns.splice(toRemove, 1);\n        this.columnHide$.next();\n      }\n    }\n\n    showColumn(column) {\n      if (this.visibleColumns.includes(column)) {\n        return;\n      }\n\n      this.visibleColumns.splice(this.findInsertIndex(column), 0, column);\n      this.columnShow$.next();\n    }\n\n    onColumnsChange() {\n      return merge(this.columnShow$, this.columnHide$);\n    }\n\n    findInsertIndex(column) {\n      const initialIndex = this.allColumns.indexOf(column);\n\n      if (initialIndex === 0 || !this.visibleColumns.length) {\n        return 0;\n      }\n\n      if (initialIndex === this.allColumns.length - 1) {\n        return this.visibleColumns.length;\n      }\n\n      const leftSiblingIndex = initialIndex - 1;\n\n      for (let i = leftSiblingIndex; i >= 0; i--) {\n        const leftSibling = this.allColumns[i];\n        const index = this.visibleColumns.indexOf(leftSibling);\n\n        if (index !== -1) {\n          return index + 1;\n        }\n      }\n\n      const rightSiblingIndex = initialIndex + 1;\n\n      for (let i = rightSiblingIndex; i < this.allColumns.length; i++) {\n        const rightSibling = this.allColumns[i];\n        const index = this.visibleColumns.indexOf(rightSibling);\n\n        if (index !== -1) {\n          return index;\n        }\n      }\n\n      throw new Error(`Can't restore column position.`);\n    }\n\n  }\n\n  NbColumnsService.ɵfac = function NbColumnsService_Factory(t) {\n    return new (t || NbColumnsService)(ɵngcc0.ɵɵinject(ɵngcc0.IterableDiffers));\n  };\n\n  NbColumnsService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: NbColumnsService,\n    factory: NbColumnsService.ɵfac\n  });\n  return NbColumnsService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/*\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * Tree grid component that can be used to display nested rows of data.\n * Supports filtering and sorting.\n * @stacked-example(Showcase, tree-grid/tree-grid-showcase.component)\n *\n * ### Installation\n *\n * Import `NbTreeGridModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbTreeGridModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n *\n * ### Usage\n *\n * As the most basic usage you need to define [nbTreeGridRowDef](docs/components/treegrid/api#nbtreegridrowdefdirective)\n * where you should pass columns to display in rows and\n * [nbTreeGridColumnDef](docs/components/treegrid/api#nbtreegridcolumndefdirective) - component containing cell\n * definitions for each column passed to row definition.\n * @stacked-example(Basic, tree-grid/tree-grid-basic.component)\n *\n * `NbTreeGridComponent`'s source input and `NbTreeGridDataSourceBuilder.create` expecting data to be an array of\n * objects with `data`, `children` and `expanded` properties. If your data doesn't match this interface, you can pass\n * getter functions for each property as arguments to `NbTreeGridDataSourceBuilder.create` method.\n * @stacked-example(Custom node structure, tree-grid/tree-grid-custom-node-structure.component)\n *\n * To use sorting you can add `nbSort` directive to table and subscribe to `sort` method. When user click on header,\n * sort event will be emitted. Event object contain clicked column name and desired sort direction.\n * @stacked-example(Sortable, tree-grid/tree-grid-sortable.component)\n *\n * You can use `Data Source Builder` to create `NbTreeGridDataSource` which would have toggle, sort and\n * filter methods. Then you can call this methods to change sort or toggle rows programmatically. Also `nbSort` and\n * `nbFilterInput` directives both support `NbTreeGridDataSource`, so you can pass it directly as an input and\n * directives will trigger sort, toggle themselves.\n * @stacked-example(Data Source Builder, tree-grid/tree-grid-showcase.component)\n *\n * You can create responsive grid by setting `hideOn` and `showOn` inputs of\n * [nbTreeGridColumnDef](docs/components/tree-grid/api#nbtreegridcolumndefdirective) directive.\n * When viewport reaches specified width grid hides or shows columns.\n * @stacked-example(Responsive columns, tree-grid/tree-grid-responsive.component)\n *\n * To customize sort or row toggle icons you can use `nbSortHeaderIcon` and `nbTreeGridRowToggle` directives\n * respectively. `nbSortHeaderIcon` is a structural directive and it's implicit context set to current direction.\n * Also context has three properties: `isAscending`, `isDescending` and `isNone`.\n * @stacked-example(Custom icons, tree-grid/tree-grid-custom-icons.component)\n *\n * By default, row to toggle happens when user clicks anywhere in the row. Also double click expands row deeply.\n * To disable this you can set `[clickToToggle]=\"false\"` input of `nbTreeGridRow`.\n * @stacked-example(Disable click toggle, tree-grid/tree-grid-disable-click-toggle.component)\n *\n * @styles\n *\n * tree-grid-cell-border-width:\n * tree-grid-cell-border-style:\n * tree-grid-cell-border-color:\n * tree-grid-row-min-height:\n * tree-grid-cell-padding:\n * tree-grid-header-background-color:\n * tree-grid-header-text-color:\n * tree-grid-header-text-font-family:\n * tree-grid-header-text-font-size:\n * tree-grid-header-text-font-weight:\n * tree-grid-header-text-line-height:\n * tree-grid-footer-background-color:\n * tree-grid-footer-text-color:\n * tree-grid-footer-text-font-family:\n * tree-grid-footer-text-font-size:\n * tree-grid-footer-text-font-weight:\n * tree-grid-footer-text-line-height:\n * tree-grid-row-background-color:\n * tree-grid-row-even-background-color:\n * tree-grid-row-hover-background-color:\n * tree-grid-row-text-color:\n * tree-grid-row-text-font-family:\n * tree-grid-row-text-font-size:\n * tree-grid-row-text-font-weight:\n * tree-grid-row-text-line-height:\n * tree-grid-sort-header-button-background-color:\n * tree-grid-sort-header-button-border:\n * tree-grid-sort-header-button-padding:\n */\n\n\nlet NbTreeGridComponent = /*#__PURE__*/(() => {\n  class NbTreeGridComponent extends NbTable {\n    constructor(dataSourceBuilder, differs, changeDetectorRef, elementRef, role, dir, document, platform, window, _viewRepeater, _coalescedStyleScheduler, _viewportRuler, _stickyPositioningListener) {\n      super(differs, changeDetectorRef, elementRef, role, dir, document, platform, _viewRepeater, _coalescedStyleScheduler, _viewportRuler, _stickyPositioningListener);\n      this.dataSourceBuilder = dataSourceBuilder;\n      this.window = window;\n      this._viewRepeater = _viewRepeater;\n      this._coalescedStyleScheduler = _coalescedStyleScheduler;\n      this._stickyPositioningListener = _stickyPositioningListener;\n      this.destroy$ = new Subject();\n      this.levelPadding = '';\n      this.equalColumnsWidthValue = false;\n      this.treeClass = true;\n      this.platform = platform;\n    }\n    /**\n     * The table's data\n     * @param data\n     * @type {<T>[] | NbTreeGridDataSource}\n     */\n\n\n    set source(data) {\n      if (!data) {\n        return;\n      }\n\n      if (data instanceof NbTreeGridDataSource) {\n        this._source = data;\n      } else {\n        this._source = this.dataSourceBuilder.create(data);\n      }\n\n      this.dataSource = this._source;\n    }\n    /**\n     * Make all columns equal width. False by default.\n     */\n\n\n    set equalColumnsWidth(value) {\n      this.equalColumnsWidthValue = convertToBoolProperty(value);\n    }\n\n    get equalColumnsWidth() {\n      return this.equalColumnsWidthValue;\n    }\n\n    ngAfterViewInit() {\n      this.checkDefsCount();\n      const rowsChange$ = merge(this._contentRowDefs.changes, this._contentHeaderRowDefs.changes, this._contentFooterRowDefs.changes);\n      rowsChange$.pipe(takeUntil(this.destroy$)).subscribe(() => this.checkDefsCount());\n\n      if (this.platform.isBrowser) {\n        this.updateVisibleColumns();\n        const windowResize$ = fromEvent(this.window, 'resize').pipe(debounceTime(50));\n        merge(rowsChange$, this._contentColumnDefs.changes, windowResize$).pipe(takeUntil(this.destroy$)).subscribe(() => this.updateVisibleColumns());\n      }\n    }\n\n    ngOnDestroy() {\n      super.ngOnDestroy();\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n\n    toggleRow(row, options) {\n      const context = this.getRowContext(row);\n\n      this._source.toggle(context.$implicit.data, options);\n    }\n\n    toggleCellRow(cell) {\n      const context = this.getCellContext(cell);\n\n      this._source.toggle(context.$implicit.data);\n    }\n\n    getColumnWidth() {\n      if (this.equalColumnsWidth) {\n        return `${100 / this.getColumnsCount()}%`;\n      }\n\n      return '';\n    }\n\n    getCellLevel(cell, columnName) {\n      if (this.isFirstColumn(columnName)) {\n        return this.getCellContext(cell).$implicit.level;\n      }\n\n      return NB_DEFAULT_ROW_LEVEL;\n    }\n\n    getRowContext(row) {\n      return this.getContextByRowEl(row.elementRef.nativeElement);\n    }\n\n    getCellContext(cell) {\n      return this.getContextByCellEl(cell.elementRef.nativeElement);\n    }\n\n    getContextByCellEl(cellEl) {\n      return this.getContextByRowEl(cellEl.parentElement);\n    }\n\n    getContextByRowEl(rowEl) {\n      const rowsContainer = this._rowOutlet.viewContainer;\n\n      for (let i = 0; i < rowsContainer.length; i++) {\n        const rowViewRef = rowsContainer.get(i);\n\n        if (rowViewRef.rootNodes.includes(rowEl)) {\n          return rowViewRef.context;\n        }\n      }\n    }\n\n    getColumns() {\n      let rowDef;\n\n      if (this._contentHeaderRowDefs.length) {\n        rowDef = this._contentHeaderRowDefs.first;\n      } else {\n        rowDef = this._contentRowDefs.first;\n      }\n\n      return Array.from(rowDef.getVisibleColumns() || []);\n    }\n\n    getColumnsCount() {\n      return this.getColumns().length;\n    }\n\n    isFirstColumn(columnName) {\n      return this.getColumns()[0] === columnName;\n    }\n\n    checkDefsCount() {\n      if (this._contentRowDefs.length > 1) {\n        throw new Error(`Found multiple row definitions`);\n      }\n\n      if (this._contentHeaderRowDefs.length > 1) {\n        throw new Error(`Found multiple header row definitions`);\n      }\n\n      if (this._contentFooterRowDefs.length > 1) {\n        throw new Error(`Found multiple footer row definitions`);\n      }\n    }\n\n    updateVisibleColumns() {\n      const width = this.window.innerWidth;\n      const columnDefs = this._contentColumnDefs;\n      const columnsToHide = columnDefs.filter(col => col.shouldHide(width)).map(col => col.name);\n      const columnsToShow = columnDefs.filter(col => col.shouldShow(width)).map(col => col.name);\n\n      if (!columnsToHide.length && !columnsToShow.length) {\n        return;\n      }\n\n      const rowDefs = [this._contentHeaderRowDefs.first, this._contentRowDefs.first, this._contentFooterRowDefs.first].filter(d => !!d);\n\n      for (const rowDef of rowDefs) {\n        for (const column of columnsToHide) {\n          rowDef.hideColumn(column);\n        }\n\n        for (const column of columnsToShow) {\n          rowDef.showColumn(column);\n        }\n      }\n    }\n\n  }\n\n  NbTreeGridComponent.ɵfac = function NbTreeGridComponent_Factory(t) {\n    return new (t || NbTreeGridComponent)(ɵngcc0.ɵɵdirectiveInject(NbTreeGridDataSourceBuilder), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵinjectAttribute('role'), ɵngcc0.ɵɵdirectiveInject(NbDirectionality), ɵngcc0.ɵɵdirectiveInject(NB_DOCUMENT), ɵngcc0.ɵɵdirectiveInject(NbPlatform), ɵngcc0.ɵɵdirectiveInject(NB_WINDOW), ɵngcc0.ɵɵdirectiveInject(NB_VIEW_REPEATER_STRATEGY), ɵngcc0.ɵɵdirectiveInject(NB_COALESCED_STYLE_SCHEDULER), ɵngcc0.ɵɵdirectiveInject(NbViewportRulerAdapter), ɵngcc0.ɵɵdirectiveInject(NB_STICKY_POSITIONING_LISTENER, 12));\n  };\n\n  NbTreeGridComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbTreeGridComponent,\n    selectors: [[\"table\", \"nbTreeGrid\", \"\"]],\n    hostVars: 2,\n    hostBindings: function NbTreeGridComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"nb-tree-grid\", ctx.treeClass);\n      }\n    },\n    inputs: {\n      levelPadding: \"levelPadding\",\n      source: [\"nbTreeGrid\", \"source\"],\n      equalColumnsWidth: \"equalColumnsWidth\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: NB_TREE_GRID,\n      useExisting: NbTreeGridComponent\n    }, NbColumnsService, ...NB_TABLE_PROVIDERS]), ɵngcc0.ɵɵInheritDefinitionFeature],\n    attrs: _c53,\n    decls: 4,\n    vars: 0,\n    consts: [[\"nbHeaderRowOutlet\", \"\"], [\"nbRowOutlet\", \"\"], [\"nbNoDataRowOutlet\", \"\"], [\"nbFooterRowOutlet\", \"\"]],\n    template: function NbTreeGridComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n        ɵngcc0.ɵɵelementContainer(1, 1);\n        ɵngcc0.ɵɵelementContainer(2, 2);\n        ɵngcc0.ɵɵelementContainer(3, 3);\n      }\n    },\n    directives: [NbHeaderRowOutletDirective, NbDataRowOutletDirective, NbNoDataRowOutletDirective, NbFooterRowOutletDirective],\n    styles: [\"[_nghost-%COMP%]{table-layout:fixed;border-spacing:0;border-collapse:collapse;width:100%;max-width:100%;overflow:auto}  .nb-tree-grid-cell,   .nb-tree-grid-header-cell,   .nb-tree-grid-footer-cell{overflow:hidden}\"]\n  });\n  return NbTreeGridComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Data row definition for the tree-grid.\n * Captures the header row's template and columns to display.\n */\n\n\nlet NbTreeGridRowDefDirective = /*#__PURE__*/(() => {\n  class NbTreeGridRowDefDirective extends NbRowDefDirective {\n    constructor(template, differs, columnsService) {\n      super(template, differs);\n      this.columnsService = columnsService;\n    }\n\n    ngOnChanges(changes) {\n      super.ngOnChanges(changes);\n\n      if (changes['columns']) {\n        this.updateColumns(this.columns);\n      }\n    }\n\n    updateColumns(columns) {\n      this.columnsService.setColumns(columns);\n    }\n\n    getVisibleColumns() {\n      return this.columnsService.getVisibleColumns();\n    }\n    /** @docs-private */\n\n\n    hideColumn(column) {\n      this.columnsService.hideColumn(column);\n    }\n    /** @docs-private */\n\n\n    showColumn(column) {\n      this.columnsService.showColumn(column);\n    }\n\n  }\n\n  NbTreeGridRowDefDirective.ɵfac = function NbTreeGridRowDefDirective_Factory(t) {\n    return new (t || NbTreeGridRowDefDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(NbColumnsService));\n  };\n\n  NbTreeGridRowDefDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NbTreeGridRowDefDirective,\n    selectors: [[\"\", \"nbTreeGridRowDef\", \"\"]],\n    inputs: {\n      columns: [\"nbTreeGridRowDefColumns\", \"columns\"]\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: NbCdkRowDef,\n      useExisting: NbTreeGridRowDefDirective\n    }]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature]\n  });\n  return NbTreeGridRowDefDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet NbTreeGridHeaderRowDefDirective = /*#__PURE__*/(() => {\n  class NbTreeGridHeaderRowDefDirective extends NbHeaderRowDefDirective {\n    constructor(template, differs, columnsService) {\n      super(template, differs);\n      this.columnsService = columnsService;\n    }\n\n    ngOnChanges(changes) {\n      super.ngOnChanges(changes);\n\n      if (changes['columns']) {\n        this.updateColumns(this.columns);\n      }\n    }\n\n    updateColumns(columns) {\n      this.columnsService.setColumns(columns);\n    }\n\n    getVisibleColumns() {\n      return this.columnsService.getVisibleColumns();\n    }\n    /** @docs-private */\n\n\n    hideColumn(column) {\n      this.columnsService.hideColumn(column);\n    }\n    /** @docs-private */\n\n\n    showColumn(column) {\n      this.columnsService.showColumn(column);\n    }\n\n  }\n\n  NbTreeGridHeaderRowDefDirective.ɵfac = function NbTreeGridHeaderRowDefDirective_Factory(t) {\n    return new (t || NbTreeGridHeaderRowDefDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(NbColumnsService));\n  };\n\n  NbTreeGridHeaderRowDefDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NbTreeGridHeaderRowDefDirective,\n    selectors: [[\"\", \"nbTreeGridHeaderRowDef\", \"\"]],\n    inputs: {\n      columns: [\"nbTreeGridHeaderRowDef\", \"columns\"]\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: NbCdkHeaderRowDef,\n      useExisting: NbTreeGridHeaderRowDefDirective\n    }]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature]\n  });\n  return NbTreeGridHeaderRowDefDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet NbTreeGridFooterRowDefDirective = /*#__PURE__*/(() => {\n  class NbTreeGridFooterRowDefDirective extends NbFooterRowDefDirective {\n    constructor(template, differs, columnsService) {\n      super(template, differs);\n      this.columnsService = columnsService;\n    }\n\n    ngOnChanges(changes) {\n      super.ngOnChanges(changes);\n\n      if (changes['columns']) {\n        this.updateColumns(this.columns);\n      }\n    }\n\n    updateColumns(columns) {\n      this.columnsService.setColumns(columns);\n    }\n\n    getVisibleColumns() {\n      return this.columnsService.getVisibleColumns();\n    }\n    /** @docs-private */\n\n\n    hideColumn(column) {\n      this.columnsService.hideColumn(column);\n    }\n    /** @docs-private */\n\n\n    showColumn(column) {\n      this.columnsService.showColumn(column);\n    }\n\n  }\n\n  NbTreeGridFooterRowDefDirective.ɵfac = function NbTreeGridFooterRowDefDirective_Factory(t) {\n    return new (t || NbTreeGridFooterRowDefDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(NbColumnsService));\n  };\n\n  NbTreeGridFooterRowDefDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NbTreeGridFooterRowDefDirective,\n    selectors: [[\"\", \"nbTreeGridFooterRowDef\", \"\"]],\n    inputs: {\n      columns: [\"nbTreeGridFooterRowDef\", \"columns\"]\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: NbCdkFooterRowDef,\n      useExisting: NbTreeGridFooterRowDefDirective\n    }]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature]\n  });\n  return NbTreeGridFooterRowDefDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Cell definition for a nb-table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\n\n\nlet NbTreeGridCellDefDirective = /*#__PURE__*/(() => {\n  class NbTreeGridCellDefDirective extends NbCellDefDirective {}\n\n  NbTreeGridCellDefDirective.ɵfac = /*@__PURE__*/function () {\n    let ɵNbTreeGridCellDefDirective_BaseFactory;\n    return function NbTreeGridCellDefDirective_Factory(t) {\n      return (ɵNbTreeGridCellDefDirective_BaseFactory || (ɵNbTreeGridCellDefDirective_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(NbTreeGridCellDefDirective)))(t || NbTreeGridCellDefDirective);\n    };\n  }();\n\n  NbTreeGridCellDefDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NbTreeGridCellDefDirective,\n    selectors: [[\"\", \"nbTreeGridCellDef\", \"\"]],\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: NbCdkCellDef,\n      useExisting: NbTreeGridCellDefDirective\n    }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return NbTreeGridCellDefDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Header cell definition for the nb-table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\n\n\nlet NbTreeGridHeaderCellDefDirective = /*#__PURE__*/(() => {\n  class NbTreeGridHeaderCellDefDirective extends NbHeaderCellDefDirective {}\n\n  NbTreeGridHeaderCellDefDirective.ɵfac = /*@__PURE__*/function () {\n    let ɵNbTreeGridHeaderCellDefDirective_BaseFactory;\n    return function NbTreeGridHeaderCellDefDirective_Factory(t) {\n      return (ɵNbTreeGridHeaderCellDefDirective_BaseFactory || (ɵNbTreeGridHeaderCellDefDirective_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(NbTreeGridHeaderCellDefDirective)))(t || NbTreeGridHeaderCellDefDirective);\n    };\n  }();\n\n  NbTreeGridHeaderCellDefDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NbTreeGridHeaderCellDefDirective,\n    selectors: [[\"\", \"nbTreeGridHeaderCellDef\", \"\"]],\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: NbCdkHeaderCellDef,\n      useExisting: NbTreeGridHeaderCellDefDirective\n    }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return NbTreeGridHeaderCellDefDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Footer cell definition for the nb-table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\n\n\nlet NbTreeGridFooterCellDefDirective = /*#__PURE__*/(() => {\n  class NbTreeGridFooterCellDefDirective extends NbFooterCellDefDirective {}\n\n  NbTreeGridFooterCellDefDirective.ɵfac = /*@__PURE__*/function () {\n    let ɵNbTreeGridFooterCellDefDirective_BaseFactory;\n    return function NbTreeGridFooterCellDefDirective_Factory(t) {\n      return (ɵNbTreeGridFooterCellDefDirective_BaseFactory || (ɵNbTreeGridFooterCellDefDirective_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(NbTreeGridFooterCellDefDirective)))(t || NbTreeGridFooterCellDefDirective);\n    };\n  }();\n\n  NbTreeGridFooterCellDefDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NbTreeGridFooterCellDefDirective,\n    selectors: [[\"\", \"nbTreeGridFooterCellDef\", \"\"]],\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: NbCdkFooterCellDef,\n      useExisting: NbTreeGridFooterCellDefDirective\n    }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return NbTreeGridFooterCellDefDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nconst NB_ROW_DOUBLE_CLICK_DELAY = 200;\n/**\n * Cells container. Adds the right class and role.\n */\n\nlet NbTreeGridRowComponent = /*#__PURE__*/(() => {\n  class NbTreeGridRowComponent extends NbRowComponent {\n    constructor(tree, elementRef) {\n      super();\n      this.elementRef = elementRef;\n      this.doubleClick$ = new Subject();\n      /**\n       * Time to wait for second click to expand row deeply.\n       * 200ms by default.\n       */\n\n      this.doubleClickDelay = NB_ROW_DOUBLE_CLICK_DELAY;\n      /**\n       * Toggle row on click. Enabled by default.\n       */\n\n      this.clickToToggle = true;\n      this.tree = tree;\n    }\n\n    toggleIfEnabledNode() {\n      if (!this.clickToToggle) {\n        return;\n      }\n\n      timer(NB_ROW_DOUBLE_CLICK_DELAY).pipe(take(1), takeUntil(this.doubleClick$)).subscribe(() => this.tree.toggleRow(this));\n    }\n\n    toggleIfEnabledNodeDeep() {\n      if (!this.clickToToggle) {\n        return;\n      }\n\n      this.doubleClick$.next();\n      this.tree.toggleRow(this, {\n        deep: true\n      });\n    }\n\n    ngOnDestroy() {\n      this.doubleClick$.complete();\n    }\n\n  }\n\n  NbTreeGridRowComponent.ɵfac = function NbTreeGridRowComponent_Factory(t) {\n    return new (t || NbTreeGridRowComponent)(ɵngcc0.ɵɵdirectiveInject(NB_TREE_GRID), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  NbTreeGridRowComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbTreeGridRowComponent,\n    selectors: [[\"tr\", \"nbTreeGridRow\", \"\"]],\n    hostAttrs: [\"role\", \"row\", 1, \"nb-tree-grid-row\"],\n    hostBindings: function NbTreeGridRowComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function NbTreeGridRowComponent_click_HostBindingHandler() {\n          return ctx.toggleIfEnabledNode();\n        })(\"dblclick\", function NbTreeGridRowComponent_dblclick_HostBindingHandler() {\n          return ctx.toggleIfEnabledNodeDeep();\n        });\n      }\n    },\n    inputs: {\n      doubleClickDelay: \"doubleClickDelay\",\n      clickToToggle: \"clickToToggle\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: NbCdkRow,\n      useExisting: NbTreeGridRowComponent\n    }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n    attrs: _c54,\n    decls: 1,\n    vars: 0,\n    consts: [[\"nbCellOutlet\", \"\"]],\n    template: function NbTreeGridRowComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n      }\n    },\n    directives: [NbCellOutletDirective],\n    encapsulation: 2\n  });\n  return NbTreeGridRowComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet NbTreeGridHeaderRowComponent = /*#__PURE__*/(() => {\n  class NbTreeGridHeaderRowComponent extends NbHeaderRowComponent {}\n\n  NbTreeGridHeaderRowComponent.ɵfac = /*@__PURE__*/function () {\n    let ɵNbTreeGridHeaderRowComponent_BaseFactory;\n    return function NbTreeGridHeaderRowComponent_Factory(t) {\n      return (ɵNbTreeGridHeaderRowComponent_BaseFactory || (ɵNbTreeGridHeaderRowComponent_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(NbTreeGridHeaderRowComponent)))(t || NbTreeGridHeaderRowComponent);\n    };\n  }();\n\n  NbTreeGridHeaderRowComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbTreeGridHeaderRowComponent,\n    selectors: [[\"tr\", \"nbTreeGridHeaderRow\", \"\"]],\n    hostAttrs: [\"role\", \"row\", 1, \"nb-tree-grid-header-row\"],\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: NbCdkHeaderRow,\n      useExisting: NbTreeGridHeaderRowComponent\n    }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n    attrs: _c55,\n    decls: 1,\n    vars: 0,\n    consts: [[\"nbCellOutlet\", \"\"]],\n    template: function NbTreeGridHeaderRowComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n      }\n    },\n    directives: [NbCellOutletDirective],\n    encapsulation: 2\n  });\n  return NbTreeGridHeaderRowComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet NbTreeGridFooterRowComponent = /*#__PURE__*/(() => {\n  class NbTreeGridFooterRowComponent extends NbFooterRowComponent {}\n\n  NbTreeGridFooterRowComponent.ɵfac = /*@__PURE__*/function () {\n    let ɵNbTreeGridFooterRowComponent_BaseFactory;\n    return function NbTreeGridFooterRowComponent_Factory(t) {\n      return (ɵNbTreeGridFooterRowComponent_BaseFactory || (ɵNbTreeGridFooterRowComponent_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(NbTreeGridFooterRowComponent)))(t || NbTreeGridFooterRowComponent);\n    };\n  }();\n\n  NbTreeGridFooterRowComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbTreeGridFooterRowComponent,\n    selectors: [[\"tr\", \"nbTreeGridFooterRow\", \"\"]],\n    hostAttrs: [\"role\", \"row\", 1, \"nb-tree-grid-footer-row\"],\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: NbCdkFooterRow,\n      useExisting: NbTreeGridFooterRowComponent\n    }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n    attrs: _c56,\n    decls: 1,\n    vars: 0,\n    consts: [[\"nbCellOutlet\", \"\"]],\n    template: function NbTreeGridFooterRowComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n      }\n    },\n    directives: [NbCellOutletDirective],\n    encapsulation: 2\n  });\n  return NbTreeGridFooterRowComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Column definition for the tree-grid.\n * Defines a set of cells available for a table column.\n */\n\n\nlet NbTreeGridColumnDefDirective = /*#__PURE__*/(() => {\n  class NbTreeGridColumnDefDirective extends NbColumnDefDirective {\n    constructor() {\n      super(...arguments);\n      this.hideOnValue = null;\n      this.showOnValue = null;\n    }\n    /**\n     * Column name\n     */\n\n\n    get name() {\n      return this._name;\n    }\n\n    set name(value) {\n      this._setNameInput(value);\n    }\n    /**\n     * Amount of pixels of viewport at which column should be hidden.\n     * type number\n     */\n\n\n    get hideOn() {\n      return this.hideOnValue;\n    }\n\n    set hideOn(value) {\n      this.hideOnValue = !value && value !== 0 ? null : parseInt(value, 10);\n    }\n    /**\n     * Amount of pixels of viewport at which column should be shown.\n     * type number\n     */\n\n\n    get showOn() {\n      return this.showOnValue;\n    }\n\n    set showOn(value) {\n      this.showOnValue = !value && value !== 0 ? null : parseInt(value, 10);\n    }\n\n    ngOnChanges() {\n      if (this.hideOn != null && this.showOn != null) {\n        throw new Error(`hideOn and showOn are mutually exclusive and can't be used simultaneously.`);\n      }\n    }\n\n    shouldHide(width) {\n      return !this.shouldShow(width);\n    }\n\n    shouldShow(width) {\n      if (this.hideOn == null && this.showOn == null) {\n        return true;\n      }\n\n      if (this.hideOn != null) {\n        return width > this.hideOn;\n      }\n\n      return width >= this.showOn;\n    }\n\n  }\n\n  NbTreeGridColumnDefDirective.ɵfac = /*@__PURE__*/function () {\n    let ɵNbTreeGridColumnDefDirective_BaseFactory;\n    return function NbTreeGridColumnDefDirective_Factory(t) {\n      return (ɵNbTreeGridColumnDefDirective_BaseFactory || (ɵNbTreeGridColumnDefDirective_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(NbTreeGridColumnDefDirective)))(t || NbTreeGridColumnDefDirective);\n    };\n  }();\n\n  NbTreeGridColumnDefDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NbTreeGridColumnDefDirective,\n    selectors: [[\"\", \"nbTreeGridColumnDef\", \"\"]],\n    inputs: {\n      name: [\"nbTreeGridColumnDef\", \"name\"],\n      hideOn: \"hideOn\",\n      showOn: \"showOn\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: NbCdkColumnDef,\n      useExisting: NbTreeGridColumnDefDirective\n    }, {\n      provide: NB_SORT_HEADER_COLUMN_DEF,\n      useExisting: NbTreeGridColumnDefDirective\n    }]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature]\n  });\n  return NbTreeGridColumnDefDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/*\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nlet NbTreeGridCellDirective = /*#__PURE__*/(() => {\n  class NbTreeGridCellDirective extends NbCellDirective {\n    constructor(columnDef, elementRef, tree, platformId, window, sanitizer, directionService, columnService, cd) {\n      super(columnDef, elementRef);\n      this.platformId = platformId;\n      this.window = window;\n      this.sanitizer = sanitizer;\n      this.directionService = directionService;\n      this.columnService = columnService;\n      this.cd = cd;\n      this.destroy$ = new Subject();\n      this.initialLeftPadding = '';\n      this.initialRightPadding = '';\n      this.tree = tree;\n      this.columnDef = columnDef;\n      this.elementRef = elementRef;\n    }\n\n    get columnWidth() {\n      this.latestWidth = this.tree.getColumnWidth();\n\n      if (this.latestWidth) {\n        return this.latestWidth;\n      }\n\n      return null;\n    }\n\n    get leftPadding() {\n      if (this.directionService.isLtr()) {\n        return this.getStartPadding();\n      }\n\n      return null;\n    }\n\n    get rightPadding() {\n      if (this.directionService.isRtl()) {\n        return this.getStartPadding();\n      }\n\n      return null;\n    }\n\n    ngOnInit() {\n      if (isPlatformBrowser(this.platformId)) {\n        const style$$1 = this.window.getComputedStyle(this.elementRef.nativeElement);\n        this.initialLeftPadding = style$$1.paddingLeft;\n        this.initialRightPadding = style$$1.paddingRight;\n      }\n\n      this.columnService.onColumnsChange().pipe(filter(() => this.latestWidth !== this.tree.getColumnWidth()), takeUntil(this.destroy$)).subscribe(() => this.cd.detectChanges());\n    }\n\n    ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n\n    toggleRow() {\n      this.tree.toggleCellRow(this);\n    }\n\n    get initialStartPadding() {\n      return this.directionService.isLtr() ? this.initialLeftPadding : this.initialRightPadding;\n    }\n\n    getStartPadding() {\n      const rowLevel = this.tree.getCellLevel(this, this.columnDef.name);\n\n      if (rowLevel === NB_DEFAULT_ROW_LEVEL) {\n        return null;\n      }\n\n      const nestingLevel = rowLevel + 1;\n      let padding = '';\n\n      if (this.tree.levelPadding) {\n        padding = `calc(${this.tree.levelPadding} * ${nestingLevel})`;\n      } else if (this.initialStartPadding) {\n        padding = `calc(${this.initialStartPadding} * ${nestingLevel})`;\n      }\n\n      if (!padding) {\n        return null;\n      }\n\n      return this.sanitizer.bypassSecurityTrustStyle(padding);\n    }\n\n  }\n\n  NbTreeGridCellDirective.ɵfac = function NbTreeGridCellDirective_Factory(t) {\n    return new (t || NbTreeGridCellDirective)(ɵngcc0.ɵɵdirectiveInject(NbTreeGridColumnDefDirective), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(NB_TREE_GRID), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID), ɵngcc0.ɵɵdirectiveInject(NB_WINDOW), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.DomSanitizer), ɵngcc0.ɵɵdirectiveInject(NbLayoutDirectionService), ɵngcc0.ɵɵdirectiveInject(NbColumnsService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n  };\n\n  NbTreeGridCellDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NbTreeGridCellDirective,\n    selectors: [[\"td\", \"nbTreeGridCell\", \"\"]],\n    hostAttrs: [\"role\", \"gridcell\", 1, \"nb-tree-grid-cell\"],\n    hostVars: 6,\n    hostBindings: function NbTreeGridCellDirective_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.columnWidth)(\"padding-left\", ctx.leftPadding)(\"padding-right\", ctx.rightPadding);\n      }\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: NbCdkCell,\n      useExisting: NbTreeGridCellDirective\n    }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return NbTreeGridCellDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet NbTreeGridHeaderCellDirective = /*#__PURE__*/(() => {\n  class NbTreeGridHeaderCellDirective extends NbHeaderCellDirective {\n    constructor(columnDef, elementRef, tree, columnService, cd) {\n      super(columnDef, elementRef);\n      this.columnService = columnService;\n      this.cd = cd;\n      this.destroy$ = new Subject();\n      this.tree = tree;\n    }\n\n    get columnWidth() {\n      this.latestWidth = this.tree.getColumnWidth();\n      return this.latestWidth || null;\n    }\n\n    ngOnInit() {\n      this.columnService.onColumnsChange().pipe(filter(() => this.latestWidth !== this.tree.getColumnWidth()), takeUntil(this.destroy$)).subscribe(() => this.cd.detectChanges());\n    }\n\n    ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n\n  }\n\n  NbTreeGridHeaderCellDirective.ɵfac = function NbTreeGridHeaderCellDirective_Factory(t) {\n    return new (t || NbTreeGridHeaderCellDirective)(ɵngcc0.ɵɵdirectiveInject(NbTreeGridColumnDefDirective), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(NB_TREE_GRID), ɵngcc0.ɵɵdirectiveInject(NbColumnsService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n  };\n\n  NbTreeGridHeaderCellDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NbTreeGridHeaderCellDirective,\n    selectors: [[\"th\", \"nbTreeGridHeaderCell\", \"\"]],\n    hostAttrs: [\"role\", \"columnheader\", 1, \"nb-tree-grid-header-cell\"],\n    hostVars: 2,\n    hostBindings: function NbTreeGridHeaderCellDirective_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.columnWidth);\n      }\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: NbCdkHeaderCell,\n      useExisting: NbTreeGridHeaderCellDirective\n    }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return NbTreeGridHeaderCellDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet NbTreeGridFooterCellDirective = /*#__PURE__*/(() => {\n  class NbTreeGridFooterCellDirective extends NbFooterCellDirective {\n    constructor(columnDef, elementRef, tree, columnService, cd) {\n      super(columnDef, elementRef);\n      this.columnService = columnService;\n      this.cd = cd;\n      this.destroy$ = new Subject();\n      this.tree = tree;\n    }\n\n    get columnWidth() {\n      this.latestWidth = this.tree.getColumnWidth();\n      return this.latestWidth || null;\n    }\n\n    ngOnInit() {\n      this.columnService.onColumnsChange().pipe(filter(() => this.latestWidth !== this.tree.getColumnWidth()), takeUntil(this.destroy$)).subscribe(() => this.cd.detectChanges());\n    }\n\n    ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n\n  }\n\n  NbTreeGridFooterCellDirective.ɵfac = function NbTreeGridFooterCellDirective_Factory(t) {\n    return new (t || NbTreeGridFooterCellDirective)(ɵngcc0.ɵɵdirectiveInject(NbTreeGridColumnDefDirective), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(NB_TREE_GRID), ɵngcc0.ɵɵdirectiveInject(NbColumnsService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n  };\n\n  NbTreeGridFooterCellDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NbTreeGridFooterCellDirective,\n    selectors: [[\"td\", \"nbTreeGridFooterCell\", \"\"]],\n    hostAttrs: [\"role\", \"gridcell\", 1, \"nb-tree-grid-footer-cell\"],\n    hostVars: 2,\n    hostBindings: function NbTreeGridFooterCellDirective_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.columnWidth);\n      }\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: NbCdkFooterCell,\n      useExisting: NbTreeGridFooterCellDirective\n    }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return NbTreeGridFooterCellDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/*\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nlet NbFilterDirective = /*#__PURE__*/(() => {\n  class NbFilterDirective {\n    filter(filterRequest) {\n      this.filterable.filter(filterRequest);\n    }\n\n  }\n\n  NbFilterDirective.ɵfac = function NbFilterDirective_Factory(t) {\n    return new (t || NbFilterDirective)();\n  };\n\n  NbFilterDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NbFilterDirective,\n    selectors: [[\"\", \"nbFilter\", \"\"]],\n    inputs: {\n      filterable: [\"nbFilter\", \"filterable\"]\n    }\n  });\n  return NbFilterDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Helper directive to trigger data source's filter method when user types in input\n */\n\n\nlet NbFilterInputDirective = /*#__PURE__*/(() => {\n  class NbFilterInputDirective extends NbFilterDirective {\n    constructor() {\n      super(...arguments);\n      this.search$ = new Subject();\n      this.destroy$ = new Subject();\n      /**\n       * Debounce time before triggering filter method. Set in milliseconds.\n       * Default 200.\n       */\n\n      this.debounceTime = 200;\n    }\n\n    ngOnInit() {\n      this.search$.pipe(debounceTime(this.debounceTime), takeUntil(this.destroy$)).subscribe(query => {\n        super.filter(query);\n      });\n    }\n\n    ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n      this.search$.complete();\n    }\n\n    filter(event) {\n      this.search$.next(event.target.value);\n    }\n\n  }\n\n  NbFilterInputDirective.ɵfac = /*@__PURE__*/function () {\n    let ɵNbFilterInputDirective_BaseFactory;\n    return function NbFilterInputDirective_Factory(t) {\n      return (ɵNbFilterInputDirective_BaseFactory || (ɵNbFilterInputDirective_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(NbFilterInputDirective)))(t || NbFilterInputDirective);\n    };\n  }();\n\n  NbFilterInputDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NbFilterInputDirective,\n    selectors: [[\"\", \"nbFilterInput\", \"\"]],\n    hostBindings: function NbFilterInputDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function NbFilterInputDirective_input_HostBindingHandler($event) {\n          return ctx.filter($event);\n        });\n      }\n    },\n    inputs: {\n      debounceTime: \"debounceTime\",\n      filterable: [\"nbFilterInput\", \"filterable\"]\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: NbFilterDirective,\n      useExisting: NbFilterInputDirective\n    }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  return NbFilterInputDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/*\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * When using custom row toggle, apply this directive on your toggle to toggle row on element click.\n */\n\n\nlet NbTreeGridRowToggleDirective = /*#__PURE__*/(() => {\n  class NbTreeGridRowToggleDirective {\n    constructor(cell) {\n      this.cell = cell;\n    }\n\n    toggleRow($event) {\n      this.cell.toggleRow();\n      $event.stopPropagation();\n    }\n\n  }\n\n  NbTreeGridRowToggleDirective.ɵfac = function NbTreeGridRowToggleDirective_Factory(t) {\n    return new (t || NbTreeGridRowToggleDirective)(ɵngcc0.ɵɵdirectiveInject(NbTreeGridCellDirective));\n  };\n\n  NbTreeGridRowToggleDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NbTreeGridRowToggleDirective,\n    selectors: [[\"\", \"nbTreeGridRowToggle\", \"\"]],\n    hostBindings: function NbTreeGridRowToggleDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function NbTreeGridRowToggleDirective_click_HostBindingHandler($event) {\n          return ctx.toggleRow($event);\n        });\n      }\n    }\n  });\n  return NbTreeGridRowToggleDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/*\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * NbTreeGridRowToggleComponent\n */\n\n\nlet NbTreeGridRowToggleComponent = /*#__PURE__*/(() => {\n  class NbTreeGridRowToggleComponent {\n    constructor(cell) {\n      this.cell = cell;\n    }\n\n    set expanded(value) {\n      this.expandedValue = value;\n    }\n\n    get expanded() {\n      return this.expandedValue;\n    }\n\n    toggleRow($event) {\n      this.cell.toggleRow();\n      $event.stopPropagation();\n    }\n\n  }\n\n  NbTreeGridRowToggleComponent.ɵfac = function NbTreeGridRowToggleComponent_Factory(t) {\n    return new (t || NbTreeGridRowToggleComponent)(ɵngcc0.ɵɵdirectiveInject(NbTreeGridCellDirective));\n  };\n\n  NbTreeGridRowToggleComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbTreeGridRowToggleComponent,\n    selectors: [[\"nb-tree-grid-row-toggle\"]],\n    hostBindings: function NbTreeGridRowToggleComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function NbTreeGridRowToggleComponent_click_HostBindingHandler($event) {\n          return ctx.toggleRow($event);\n        });\n      }\n    },\n    inputs: {\n      expanded: \"expanded\"\n    },\n    decls: 2,\n    vars: 2,\n    consts: [[1, \"row-toggle-button\"], [\"pack\", \"nebular-essentials\", \"aria-hidden\", \"true\", 3, \"icon\"]],\n    template: function NbTreeGridRowToggleComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"button\", 0);\n        ɵngcc0.ɵɵelement(1, \"nb-icon\", 1);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.expanded ? \"collapse\" : \"expand\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"icon\", ctx.expanded ? \"chevron-down-outline\" : \"chevron-right-outline\");\n      }\n    },\n    directives: [NbIconComponent],\n    styles: [\"button[_ngcontent-%COMP%] {\\n      background: transparent;\\n      border: none;\\n      padding: 0;\\n    }\"]\n  });\n  return NbTreeGridRowToggleComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/*\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nconst COMPONENTS$2 = [// Tree Grid\nNbTreeGridComponent, NbTreeGridRowDefDirective, NbTreeGridRowComponent, NbTreeGridCellDefDirective, NbTreeGridCellDirective, NbTreeGridHeaderRowDefDirective, NbTreeGridHeaderRowComponent, NbTreeGridHeaderCellDefDirective, NbTreeGridHeaderCellDirective, NbTreeGridFooterRowDefDirective, NbTreeGridFooterRowComponent, NbTreeGridFooterCellDefDirective, NbTreeGridFooterCellDirective, NbTreeGridColumnDefDirective, // Sort directives\nNbSortDirective, NbSortHeaderComponent, NbSortIconComponent, // Filter directives\nNbFilterDirective, NbFilterInputDirective, NbTreeGridRowToggleDirective, NbTreeGridRowToggleComponent, NbSortHeaderIconDirective];\nlet NbTreeGridModule = /*#__PURE__*/(() => {\n  class NbTreeGridModule {}\n\n  NbTreeGridModule.ɵfac = function NbTreeGridModule_Factory(t) {\n    return new (t || NbTreeGridModule)();\n  };\n\n  NbTreeGridModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NbTreeGridModule\n  });\n  NbTreeGridModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    providers: [NbTreeGridSortService, NbTreeGridFilterService, NbTreeGridService, NbTreeGridDataService, NbTreeGridDataSourceBuilder],\n    imports: [[CommonModule, NbTableModule, NbIconModule], NbTableModule]\n  });\n  return NbTreeGridModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NbTreeGridModule, {\n    declarations: function () {\n      return [NbTreeGridComponent, NbTreeGridRowDefDirective, NbTreeGridRowComponent, NbTreeGridCellDefDirective, NbTreeGridCellDirective, NbTreeGridHeaderRowDefDirective, NbTreeGridHeaderRowComponent, NbTreeGridHeaderCellDefDirective, NbTreeGridHeaderCellDirective, NbTreeGridFooterRowDefDirective, NbTreeGridFooterRowComponent, NbTreeGridFooterCellDefDirective, NbTreeGridFooterCellDirective, NbTreeGridColumnDefDirective, NbSortDirective, NbSortHeaderComponent, NbSortIconComponent, NbFilterDirective, NbFilterInputDirective, NbTreeGridRowToggleDirective, NbTreeGridRowToggleComponent, NbSortHeaderIconDirective];\n    },\n    imports: function () {\n      return [CommonModule, NbTableModule, NbIconModule];\n    },\n    exports: function () {\n      return [NbTableModule, NbTreeGridComponent, NbTreeGridRowDefDirective, NbTreeGridRowComponent, NbTreeGridCellDefDirective, NbTreeGridCellDirective, NbTreeGridHeaderRowDefDirective, NbTreeGridHeaderRowComponent, NbTreeGridHeaderCellDefDirective, NbTreeGridHeaderCellDirective, NbTreeGridFooterRowDefDirective, NbTreeGridFooterRowComponent, NbTreeGridFooterCellDefDirective, NbTreeGridFooterCellDirective, NbTreeGridColumnDefDirective, NbSortDirective, NbSortHeaderComponent, NbSortIconComponent, NbFilterDirective, NbFilterInputDirective, NbTreeGridRowToggleDirective, NbTreeGridRowToggleComponent, NbSortHeaderIconDirective];\n    }\n  });\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * Toggle is a control representing `on` and `off` states.\n *\n * @stacked-example(Showcase, toggle/toggle-showcase.component)\n *\n * ### Installation\n *\n * Import `NbToggleComponent` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *     // ...\n *     NbToggleModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * Toggle may have one of the following statuses: `basic`, `primary`, `success`, `warning`, `danger`, `info`, `control`\n *\n * @stacked-example(Toggle status, toggle/toggle-status.component)\n *\n * Toggle can be disabled via `disabled` input.\n *\n * @stacked-example(Disabled Toggles, toggle/toggle-disabled.component)\n *\n * Toggle may have a label with following positions: `left`, `right`, `start`, `end` (default)\n *\n * @stacked-example(Toggles With Labels, toggle/toggle-label-position.component.ts)\n *\n * You can set control state via `checked` binding:\n *\n * ```html\n * <nb-toggle [(checked)]=\"checked\"></nb-toggle>\n * ```\n *\n * Or it could be set via reactive forms or ngModel bindings:\n *\n * @stacked-example(Toggle form binding, toggle/toggle-form.component)\n *\n * @styles\n *\n * toggle-height:\n * toggle-width:\n * toggle-border-width:\n * toggle-border-radius:\n * toggle-outline-width:\n * toggle-outline-color:\n * toggle-switcher-size:\n * toggle-switcher-icon-size:\n * toggle-text-font-family:\n * toggle-text-font-size:\n * toggle-text-font-weight:\n * toggle-text-line-height:\n * toggle-cursor:\n * toggle-disabled-cursor:\n * toggle-basic-text-color:\n * toggle-basic-background-color:\n * toggle-basic-border-color:\n * toggle-basic-checked-background-color:\n * toggle-basic-checked-border-color:\n * toggle-basic-checked-switcher-background-color:\n * toggle-basic-checked-switcher-checkmark-color:\n * toggle-basic-focus-background-color:\n * toggle-basic-focus-border-color:\n * toggle-basic-focus-checked-background-color:\n * toggle-basic-focus-checked-border-color:\n * toggle-basic-hover-background-color:\n * toggle-basic-hover-border-color:\n * toggle-basic-hover-checked-background-color:\n * toggle-basic-hover-checked-border-color:\n * toggle-basic-active-background-color:\n * toggle-basic-active-border-color:\n * toggle-basic-active-checked-background-color:\n * toggle-basic-active-checked-border-color:\n * toggle-basic-disabled-background-color:\n * toggle-basic-disabled-border-color:\n * toggle-basic-disabled-switcher-background-color:\n * toggle-basic-disabled-checked-switcher-checkmark-color:\n * toggle-basic-disabled-text-color:\n * toggle-primary-text-color:\n * toggle-primary-background-color:\n * toggle-primary-border-color:\n * toggle-primary-checked-background-color:\n * toggle-primary-checked-border-color:\n * toggle-primary-checked-switcher-background-color:\n * toggle-primary-checked-switcher-checkmark-color:\n * toggle-primary-focus-background-color:\n * toggle-primary-focus-border-color:\n * toggle-primary-focus-checked-background-color:\n * toggle-primary-focus-checked-border-color:\n * toggle-primary-hover-background-color:\n * toggle-primary-hover-border-color:\n * toggle-primary-hover-checked-background-color:\n * toggle-primary-hover-checked-border-color:\n * toggle-primary-active-background-color:\n * toggle-primary-active-border-color:\n * toggle-primary-active-checked-background-color:\n * toggle-primary-active-checked-border-color:\n * toggle-primary-disabled-background-color:\n * toggle-primary-disabled-border-color:\n * toggle-primary-disabled-switcher-background-color:\n * toggle-primary-disabled-checked-switcher-checkmark-color:\n * toggle-primary-disabled-text-color:\n * toggle-success-text-color:\n * toggle-success-background-color:\n * toggle-success-border-color:\n * toggle-success-checked-background-color:\n * toggle-success-checked-border-color:\n * toggle-success-checked-switcher-background-color:\n * toggle-success-checked-switcher-checkmark-color:\n * toggle-success-focus-background-color:\n * toggle-success-focus-border-color:\n * toggle-success-focus-checked-background-color:\n * toggle-success-focus-checked-border-color:\n * toggle-success-hover-background-color:\n * toggle-success-hover-border-color:\n * toggle-success-hover-checked-background-color:\n * toggle-success-hover-checked-border-color:\n * toggle-success-active-background-color:\n * toggle-success-active-border-color:\n * toggle-success-active-checked-background-color:\n * toggle-success-active-checked-border-color:\n * toggle-success-disabled-background-color:\n * toggle-success-disabled-border-color:\n * toggle-success-disabled-switcher-background-color:\n * toggle-success-disabled-checked-switcher-checkmark-color:\n * toggle-success-disabled-text-color:\n * toggle-info-text-color:\n * toggle-info-background-color:\n * toggle-info-border-color:\n * toggle-info-checked-background-color:\n * toggle-info-checked-border-color:\n * toggle-info-checked-switcher-background-color:\n * toggle-info-checked-switcher-checkmark-color:\n * toggle-info-focus-background-color:\n * toggle-info-focus-border-color:\n * toggle-info-focus-checked-background-color:\n * toggle-info-focus-checked-border-color:\n * toggle-info-hover-background-color:\n * toggle-info-hover-border-color:\n * toggle-info-hover-checked-background-color:\n * toggle-info-hover-checked-border-color:\n * toggle-info-active-background-color:\n * toggle-info-active-border-color:\n * toggle-info-active-checked-background-color:\n * toggle-info-active-checked-border-color:\n * toggle-info-disabled-background-color:\n * toggle-info-disabled-border-color:\n * toggle-info-disabled-switcher-background-color:\n * toggle-info-disabled-checked-switcher-checkmark-color:\n * toggle-info-disabled-text-color:\n * toggle-warning-text-color:\n * toggle-warning-background-color:\n * toggle-warning-border-color:\n * toggle-warning-checked-background-color:\n * toggle-warning-checked-border-color:\n * toggle-warning-checked-switcher-background-color:\n * toggle-warning-checked-switcher-checkmark-color:\n * toggle-warning-focus-background-color:\n * toggle-warning-focus-border-color:\n * toggle-warning-focus-checked-background-color:\n * toggle-warning-focus-checked-border-color:\n * toggle-warning-hover-background-color:\n * toggle-warning-hover-border-color:\n * toggle-warning-hover-checked-background-color:\n * toggle-warning-hover-checked-border-color:\n * toggle-warning-active-background-color:\n * toggle-warning-active-border-color:\n * toggle-warning-active-checked-background-color:\n * toggle-warning-active-checked-border-color:\n * toggle-warning-disabled-background-color:\n * toggle-warning-disabled-border-color:\n * toggle-warning-disabled-switcher-background-color:\n * toggle-warning-disabled-checked-switcher-checkmark-color:\n * toggle-warning-disabled-text-color:\n * toggle-danger-text-color:\n * toggle-danger-background-color:\n * toggle-danger-border-color:\n * toggle-danger-checked-background-color:\n * toggle-danger-checked-border-color:\n * toggle-danger-checked-switcher-background-color:\n * toggle-danger-checked-switcher-checkmark-color:\n * toggle-danger-focus-background-color:\n * toggle-danger-focus-border-color:\n * toggle-danger-focus-checked-background-color:\n * toggle-danger-focus-checked-border-color:\n * toggle-danger-hover-background-color:\n * toggle-danger-hover-border-color:\n * toggle-danger-hover-checked-background-color:\n * toggle-danger-hover-checked-border-color:\n * toggle-danger-active-background-color:\n * toggle-danger-active-border-color:\n * toggle-danger-active-checked-background-color:\n * toggle-danger-active-checked-border-color:\n * toggle-danger-disabled-background-color:\n * toggle-danger-disabled-border-color:\n * toggle-danger-disabled-switcher-background-color:\n * toggle-danger-disabled-checked-switcher-checkmark-color:\n * toggle-danger-disabled-text-color:\n * toggle-control-text-color:\n * toggle-control-background-color:\n * toggle-control-border-color:\n * toggle-control-checked-background-color:\n * toggle-control-checked-border-color:\n * toggle-control-checked-switcher-background-color:\n * toggle-control-checked-switcher-checkmark-color:\n * toggle-control-focus-background-color:\n * toggle-control-focus-border-color:\n * toggle-control-focus-checked-background-color:\n * toggle-control-focus-checked-border-color:\n * toggle-control-hover-background-color:\n * toggle-control-hover-border-color:\n * toggle-control-hover-checked-background-color:\n * toggle-control-hover-checked-border-color:\n * toggle-control-active-background-color:\n * toggle-control-active-border-color:\n * toggle-control-active-checked-background-color:\n * toggle-control-active-checked-border-color:\n * toggle-control-disabled-background-color:\n * toggle-control-disabled-border-color:\n * toggle-control-disabled-switcher-background-color:\n * toggle-control-disabled-checked-switcher-checkmark-color:\n * toggle-control-disabled-text-color:\n */\n\n\nlet NbToggleComponent = /*#__PURE__*/(() => {\n  class NbToggleComponent {\n    constructor(changeDetector, layoutDirection, renderer, hostElement, zone, statusService) {\n      this.changeDetector = changeDetector;\n      this.layoutDirection = layoutDirection;\n      this.renderer = renderer;\n      this.hostElement = hostElement;\n      this.zone = zone;\n      this.statusService = statusService;\n\n      this.onChange = () => {};\n\n      this.onTouched = () => {};\n\n      this.destroy$ = new Subject();\n      this._checked = false;\n      this._disabled = false;\n      /**\n       * Toggle status.\n       * Possible values are: `basic`, `primary`, `success`, `warning`, `danger`, `info`, `control`.\n       */\n\n      this.status = 'basic';\n      /**\n       * Toggle label position.\n       * Possible values are: `left`, `right`, `start`, `end` (default)\n       */\n\n      this.labelPosition = 'end';\n      /**\n       * Output when checked state is changed by a user\n       * @type EventEmitter<boolean>\n       */\n\n      this.checkedChange = new EventEmitter();\n    }\n    /**\n     * Toggle checked\n     * @type {boolean}\n     */\n\n\n    get checked() {\n      return this._checked;\n    }\n\n    set checked(value) {\n      this._checked = convertToBoolProperty(value);\n    }\n    /**\n     * Controls input disabled state\n     */\n\n\n    get disabled() {\n      return this._disabled;\n    }\n\n    set disabled(value) {\n      this._disabled = convertToBoolProperty(value);\n    }\n\n    get primary() {\n      return this.status === 'primary';\n    }\n\n    get success() {\n      return this.status === 'success';\n    }\n\n    get warning() {\n      return this.status === 'warning';\n    }\n\n    get danger() {\n      return this.status === 'danger';\n    }\n\n    get info() {\n      return this.status === 'info';\n    }\n\n    get basic() {\n      return this.status === 'basic';\n    }\n\n    get control() {\n      return this.status === 'control';\n    }\n\n    get additionalClasses() {\n      if (this.statusService.isCustomStatus(this.status)) {\n        return [this.statusService.getStatusClass(this.status)];\n      }\n\n      return [];\n    }\n\n    get labelLeft() {\n      return this.labelPosition === 'left';\n    }\n\n    get labelRight() {\n      return this.labelPosition === 'right';\n    }\n\n    get labelStart() {\n      return this.labelPosition === 'start';\n    }\n\n    get labelEnd() {\n      return this.labelPosition === 'end';\n    }\n\n    ngOnInit() {\n      this.layoutDirection.onDirectionChange().pipe(takeUntil(this.destroy$)).subscribe(() => this.changeDetector.detectChanges());\n    }\n\n    ngAfterViewInit() {\n      // TODO: #2254\n      this.zone.runOutsideAngular(() => setTimeout(() => {\n        this.renderer.addClass(this.hostElement.nativeElement, 'nb-transition');\n      }));\n    }\n\n    ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n\n    checkState() {\n      if (this.checked) {\n        return this.layoutDirection.isLtr() ? 'right' : 'left';\n      }\n\n      return this.layoutDirection.isLtr() ? 'left' : 'right';\n    }\n\n    registerOnChange(fn) {\n      this.onChange = fn;\n    }\n\n    registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n\n    writeValue(val) {\n      this.checked = val;\n      this.changeDetector.markForCheck();\n    }\n\n    setDisabledState(val) {\n      this.disabled = convertToBoolProperty(val);\n      this.changeDetector.markForCheck();\n    }\n\n    updateValue(event) {\n      const input = event.target;\n      this.checked = input.checked;\n      this.checkedChange.emit(this.checked);\n      this.onChange(this.checked);\n    }\n\n    onInputClick(event) {\n      event.stopPropagation();\n    }\n\n  }\n\n  NbToggleComponent.ɵfac = function NbToggleComponent_Factory(t) {\n    return new (t || NbToggleComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(NbLayoutDirectionService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(NbStatusService));\n  };\n\n  NbToggleComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbToggleComponent,\n    selectors: [[\"nb-toggle\"]],\n    hostVars: 24,\n    hostBindings: function NbToggleComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassMap(ctx.additionalClasses);\n        ɵngcc0.ɵɵclassProp(\"status-primary\", ctx.primary)(\"status-success\", ctx.success)(\"status-warning\", ctx.warning)(\"status-danger\", ctx.danger)(\"status-info\", ctx.info)(\"status-basic\", ctx.basic)(\"status-control\", ctx.control)(\"toggle-label-left\", ctx.labelLeft)(\"toggle-label-right\", ctx.labelRight)(\"toggle-label-start\", ctx.labelStart)(\"toggle-label-end\", ctx.labelEnd);\n      }\n    },\n    inputs: {\n      status: \"status\",\n      labelPosition: \"labelPosition\",\n      checked: \"checked\",\n      disabled: \"disabled\"\n    },\n    outputs: {\n      checkedChange: \"checkedChange\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NbToggleComponent),\n      multi: true\n    }])],\n    ngContentSelectors: _c0,\n    decls: 7,\n    vars: 7,\n    consts: [[1, \"toggle-label\"], [\"type\", \"checkbox\", \"role\", \"switch\", 1, \"native-input\", \"visually-hidden\", 3, \"disabled\", \"checked\", \"change\", \"blur\", \"click\"], [1, \"toggle\"], [1, \"toggle-switcher\"], [\"icon\", \"checkmark-bold-outline\", \"pack\", \"nebular-essentials\", 4, \"ngIf\"], [1, \"text\"], [\"icon\", \"checkmark-bold-outline\", \"pack\", \"nebular-essentials\"]],\n    template: function NbToggleComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"input\", 1);\n        ɵngcc0.ɵɵlistener(\"change\", function NbToggleComponent_Template_input_change_1_listener($event) {\n          return ctx.updateValue($event);\n        })(\"blur\", function NbToggleComponent_Template_input_blur_1_listener() {\n          return ctx.onTouched();\n        })(\"click\", function NbToggleComponent_Template_input_click_1_listener($event) {\n          return ctx.onInputClick($event);\n        });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"span\", 3);\n        ɵngcc0.ɵɵtemplate(4, NbToggleComponent_nb_icon_4_Template, 1, 0, \"nb-icon\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(5, \"span\", 5);\n        ɵngcc0.ɵɵprojection(6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"disabled\", ctx.disabled)(\"checked\", ctx.checked);\n        ɵngcc0.ɵɵattribute(\"aria-checked\", ctx.checked);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"checked\", ctx.checked);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"@position\", ctx.checkState());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.checked);\n      }\n    },\n    directives: [ɵngcc2.NgIf, NbIconComponent],\n    styles: [\"[_nghost-%COMP%]{display:inline-flex;outline:none}.toggle-label-left[_nghost-%COMP%]   .text[_ngcontent-%COMP%]:not(:empty){padding-right:0.6875rem}[dir=ltr]   .toggle-label-left[_nghost-%COMP%]   .text[_ngcontent-%COMP%]:not(:empty){order:-1}[dir=rtl]   .toggle-label-left[_nghost-%COMP%]   .text[_ngcontent-%COMP%]:not(:empty){order:1}.toggle-label-right[_nghost-%COMP%]   .text[_ngcontent-%COMP%]:not(:empty){padding-left:0.6875rem}[dir=ltr]   .toggle-label-right[_nghost-%COMP%]   .text[_ngcontent-%COMP%]:not(:empty){order:1}[dir=rtl]   .toggle-label-right[_nghost-%COMP%]   .text[_ngcontent-%COMP%]:not(:empty){order:-1}.toggle-label-start[_nghost-%COMP%]   .toggle-label[_ngcontent-%COMP%]{flex-direction:row-reverse}[dir=ltr]   .toggle-label-start[_nghost-%COMP%]   .toggle-label[_ngcontent-%COMP%]   .text[_ngcontent-%COMP%]:not(:empty){padding-right:.6875rem}[dir=rtl]   .toggle-label-start[_nghost-%COMP%]   .toggle-label[_ngcontent-%COMP%]   .text[_ngcontent-%COMP%]:not(:empty){padding-left:.6875rem}[dir=ltr]   .toggle-label-end[_nghost-%COMP%]   .text[_ngcontent-%COMP%]:not(:empty){padding-left:.6875rem}[dir=rtl]   .toggle-label-end[_nghost-%COMP%]   .text[_ngcontent-%COMP%]:not(:empty){padding-right:.6875rem}.nb-transition[_nghost-%COMP%]   .toggle[_ngcontent-%COMP%]{transition-duration:0.15s;transition-property:background-color,border,box-shadow;transition-timing-function:ease-in}.toggle-label[_ngcontent-%COMP%]{position:relative;display:inline-flex;align-items:center}.toggle[_ngcontent-%COMP%]{position:relative;display:inline-flex;box-sizing:content-box}.toggle-switcher[_ngcontent-%COMP%]{position:absolute;border-radius:50%;margin:1px}.toggle-switcher[_ngcontent-%COMP%]   nb-icon[_ngcontent-%COMP%]{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}\"],\n    data: {\n      animation: [trigger('position', [state('right', style({\n        right: 0,\n        left: '*'\n      })), state('left', style({\n        left: 0,\n        right: '*'\n      })), transition(':enter', [animate(0)]), transition('right <=> left', [animate('0.15s')])])]\n    },\n    changeDetection: 0\n  });\n  return NbToggleComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nlet NbToggleModule = /*#__PURE__*/(() => {\n  class NbToggleModule {}\n\n  NbToggleModule.ɵfac = function NbToggleModule_Factory(t) {\n    return new (t || NbToggleModule)();\n  };\n\n  NbToggleModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NbToggleModule\n  });\n  NbToggleModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, NbIconModule]]\n  });\n  return NbToggleModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NbToggleModule, {\n    declarations: function () {\n      return [NbToggleComponent];\n    },\n    imports: function () {\n      return [CommonModule, NbIconModule];\n    },\n    exports: function () {\n      return [NbToggleComponent];\n    }\n  });\n})();\n\nlet NbPrefixDirective = /*#__PURE__*/(() => {\n  class NbPrefixDirective {}\n\n  NbPrefixDirective.ɵfac = function NbPrefixDirective_Factory(t) {\n    return new (t || NbPrefixDirective)();\n  };\n\n  NbPrefixDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NbPrefixDirective,\n    selectors: [[\"\", \"nbPrefix\", \"\"]]\n  });\n  return NbPrefixDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet NbSuffixDirective = /*#__PURE__*/(() => {\n  class NbSuffixDirective {}\n\n  NbSuffixDirective.ɵfac = function NbSuffixDirective_Factory(t) {\n    return new (t || NbSuffixDirective)();\n  };\n\n  NbSuffixDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NbSuffixDirective,\n    selectors: [[\"\", \"nbSuffix\", \"\"]]\n  });\n  return NbSuffixDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nfunction throwFormControlElementNotFound() {\n  throw new Error(`NbFormFieldComponent must contain [nbInput]`);\n}\n/*\n * NbFormFieldComponent\n *\n * @styles\n *\n * form-field-addon-basic-text-color:\n * form-field-addon-basic-highlight-text-color:\n * form-field-addon-primary-text-color:\n * form-field-addon-primary-highlight-text-color:\n * form-field-addon-success-text-color:\n * form-field-addon-success-highlight-text-color:\n * form-field-addon-info-text-color:\n * form-field-addon-info-highlight-text-color:\n * form-field-addon-warning-text-color:\n * form-field-addon-warning-highlight-text-color:\n * form-field-addon-danger-text-color:\n * form-field-addon-danger-highlight-text-color:\n * form-field-addon-control-text-color:\n * form-field-addon-control-highlight-text-color:\n * form-field-addon-disabled-text-color:\n * form-field-addon-tiny-height:\n * form-field-addon-tiny-width:\n * form-field-addon-tiny-icon-size:\n * form-field-addon-tiny-font-size:\n * form-field-addon-tiny-line-height:\n * form-field-addon-tiny-font-weight:\n * form-field-addon-small-height:\n * form-field-addon-small-width:\n * form-field-addon-small-icon-size:\n * form-field-addon-small-font-size:\n * form-field-addon-small-line-height:\n * form-field-addon-small-font-weight:\n * form-field-addon-medium-height:\n * form-field-addon-medium-width:\n * form-field-addon-medium-icon-size:\n * form-field-addon-medium-font-size:\n * form-field-addon-medium-line-height:\n * form-field-addon-medium-font-weight:\n * form-field-addon-large-height:\n * form-field-addon-large-width:\n * form-field-addon-large-icon-size:\n * form-field-addon-large-font-size:\n * form-field-addon-large-line-height:\n * form-field-addon-large-font-weight:\n * form-field-addon-giant-height:\n * form-field-addon-giant-width:\n * form-field-addon-giant-icon-size:\n * form-field-addon-giant-font-size:\n * form-field-addon-giant-line-height:\n * form-field-addon-giant-font-weight:\n **/\n\n\nlet NbFormFieldComponent = /*#__PURE__*/(() => {\n  class NbFormFieldComponent {\n    constructor(cd, zone, elementRef, renderer) {\n      this.cd = cd;\n      this.zone = zone;\n      this.elementRef = elementRef;\n      this.renderer = renderer;\n      this.destroy$ = new Subject();\n      this.formControlState$ = new ReplaySubject(1);\n      this.prefixClasses$ = this.formControlState$.pipe(map(s => this.getAddonClasses('prefix', s)));\n      this.suffixClasses$ = this.formControlState$.pipe(map(s => this.getAddonClasses('suffix', s)));\n    }\n\n    ngAfterContentChecked() {\n      if (!this.formControl) {\n        throwFormControlElementNotFound();\n      }\n    }\n\n    ngAfterContentInit() {\n      this.subscribeToFormControlStateChange();\n      this.subscribeToAddonChange();\n    }\n\n    ngAfterViewInit() {\n      // TODO: #2254\n      this.zone.runOutsideAngular(() => setTimeout(() => {\n        this.renderer.addClass(this.elementRef.nativeElement, 'nb-transition');\n      }));\n    }\n\n    ngOnDestroy() {\n      this.destroy$.next();\n    }\n\n    shouldShowPrefix() {\n      return this.getFormControlConfig().supportsPrefix && !!this.prefix.length;\n    }\n\n    shouldShowSuffix() {\n      return this.getFormControlConfig().supportsSuffix && !!this.suffix.length;\n    }\n\n    subscribeToFormControlStateChange() {\n      const {\n        disabled$,\n        focused$,\n        size$,\n        status$,\n        fullWidth$\n      } = this.formControl;\n      combineLatest([disabled$, focused$, size$, status$, fullWidth$]).pipe(map(([disabled, focused, size, status, fullWidth]) => ({\n        disabled,\n        focused,\n        size,\n        status,\n        fullWidth\n      })), distinctUntilChanged((oldState, state$$1) => this.isStatesEqual(oldState, state$$1)), tap(({\n        size,\n        fullWidth\n      }) => {\n        const formFieldClasses = [`nb-form-field-size-${size}`];\n\n        if (!fullWidth) {\n          formFieldClasses.push('nb-form-field-limited-width');\n        }\n\n        this.formFieldClasses = formFieldClasses.join(' ');\n      }), takeUntil(this.destroy$)).subscribe(this.formControlState$);\n    }\n\n    subscribeToAddonChange() {\n      merge(this.prefix.changes, this.suffix.changes).pipe(takeUntil(this.destroy$)).subscribe(() => this.cd.markForCheck());\n    }\n\n    getAddonClasses(addon, state$$1) {\n      const classes = ['nb-form-field-addon', `nb-form-field-${addon}-${state$$1.size}`];\n\n      if (state$$1.disabled) {\n        classes.push(`nb-form-field-addon-disabled`);\n      } else if (state$$1.focused) {\n        classes.push(`nb-form-field-addon-${state$$1.status}-highlight`);\n      } else {\n        classes.push(`nb-form-field-addon-${state$$1.status}`);\n      }\n\n      return classes;\n    }\n\n    getFormControlConfig() {\n      return this.formControlConfig || new NbFormFieldControlConfig();\n    }\n\n    isStatesEqual(oldState, state$$1) {\n      return oldState.status === state$$1.status && oldState.disabled === state$$1.disabled && oldState.focused === state$$1.focused && oldState.fullWidth === state$$1.fullWidth && oldState.size === state$$1.size;\n    }\n\n  }\n\n  NbFormFieldComponent.ɵfac = function NbFormFieldComponent_Factory(t) {\n    return new (t || NbFormFieldComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n  };\n\n  NbFormFieldComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NbFormFieldComponent,\n    selectors: [[\"nb-form-field\"]],\n    contentQueries: function NbFormFieldComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NbFormFieldControl, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NbFormFieldControlConfig, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NbPrefixDirective, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NbSuffixDirective, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.formControl = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.formControlConfig = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.prefix = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.suffix = _t);\n      }\n    },\n    hostVars: 2,\n    hostBindings: function NbFormFieldComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassMap(ctx.formFieldClasses);\n      }\n    },\n    ngContentSelectors: _c58,\n    decls: 4,\n    vars: 6,\n    consts: [[3, \"ngClass\", 4, \"ngIf\"], [1, \"nb-form-control-container\"], [3, \"ngClass\"]],\n    template: function NbFormFieldComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c57);\n        ɵngcc0.ɵɵtemplate(0, NbFormFieldComponent_div_0_Template, 3, 3, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(3, NbFormFieldComponent_div_3_Template, 3, 3, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.shouldShowPrefix());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"nb-form-field-control-with-prefix\", ctx.shouldShowPrefix())(\"nb-form-field-control-with-suffix\", ctx.shouldShowSuffix());\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.shouldShowSuffix());\n      }\n    },\n    directives: [ɵngcc2.NgIf, ɵngcc2.NgClass],\n    pipes: [ɵngcc2.AsyncPipe],\n    styles: [\"[_nghost-%COMP%]{display:flex;align-items:center}.nb-form-control-container[_ngcontent-%COMP%]{width:100%}\"],\n    changeDetection: 0\n  });\n  return NbFormFieldComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nconst COMPONENTS$3 = [NbFormFieldComponent, NbPrefixDirective, NbSuffixDirective];\nlet NbFormFieldModule = /*#__PURE__*/(() => {\n  class NbFormFieldModule {}\n\n  NbFormFieldModule.ɵfac = function NbFormFieldModule_Factory(t) {\n    return new (t || NbFormFieldModule)();\n  };\n\n  NbFormFieldModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NbFormFieldModule\n  });\n  NbFormFieldModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return NbFormFieldModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NbFormFieldModule, {\n    declarations: function () {\n      return [NbFormFieldComponent, NbPrefixDirective, NbSuffixDirective];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [NbFormFieldComponent, NbPrefixDirective, NbSuffixDirective];\n    }\n  });\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n// TODO: export all components\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NbCalendarActionsComponent as ɵe, NbActiveDescendantKeyManagerFactoryService as ɵd, NbFocusKeyManagerFactoryService as ɵc, NbCustomMessageService as ɵf, NbCalendarWithTimeComponent as ɵh, NbMenuInternalService as ɵa, NbSharedModule as ɵb, NbTimePickerCellComponent as ɵg, NbCalendarDayCellComponent, NbDateTimePickerComponent, NbCalendarYearPickerComponent, NbCalendarMonthPickerComponent, MONTHS_IN_VIEW, MONTHS_IN_COLUMN, NbCalendarDayPickerComponent, NbCalendarViewModeComponent, NbCalendarPageableNavigationComponent, NbCalendarDaysNamesComponent, NbCalendarWeekNumberComponent, NbCalendarMonthCellComponent, NbCalendarYearCellComponent, NbCalendarPickerRowComponent, NbCalendarPickerComponent, NbCalendarMonthModelService, NbNativeDateService, NbDateService, NbMenuService, NbMenuItem, NbSidebarService, NB_THEME_OPTIONS, NB_MEDIA_BREAKPOINTS, NB_BUILT_IN_JS_THEMES, NB_JS_THEMES, NB_WINDOW, NB_DOCUMENT, windowFactory, NbThemeModule, NbThemeService, NbSpinnerService, DEFAULT_MEDIA_BREAKPOINTS, NbMediaBreakpointsService, NbColorHelper, NbLayoutDirection, NB_LAYOUT_DIRECTION, NbLayoutDirectionService, NbLayoutScrollService, NbLayoutRulerService, NbStatusService, BUILT_IN_THEMES, NbJSThemesRegistry, CORPORATE_THEME, COSMIC_THEME, DEFAULT_THEME, DARK_THEME, NbCardModule, NbCardHeaderComponent, NbCardBodyComponent, NbCardFooterComponent, NbCardComponent, NbFlipCardComponent, NbRevealCardComponent, NbCardFrontComponent, NbCardBackComponent, NbCalendarModule, NbCalendarComponent, NbCalendarRangeModule, NbCalendarRangeComponent, NbBaseCalendarComponent, NbBaseCalendarModule, NbBaseCalendarRangeCell, NbCalendarRangeDayCellComponent, NbCalendarRangeMonthCellComponent, NbCalendarRangeYearCellComponent, NbCalendarYearModelService, NbCalendarTimeModelService, NbCalendarViewMode, NbCalendarSize, NbCalendarKitModule, NbLayoutModule, NbLayoutComponent, NbLayoutColumnComponent, NbLayoutHeaderComponent, NbLayoutFooterComponent, NbRestoreScrollTopHelper, NbMenuModule, NbToggleStates, NbMenuItemComponent, NbMenuComponent, NbRouteTabsetModule, NbRouteTabsetComponent, NbSidebarModule, NbSidebarHeaderComponent, NbSidebarFooterComponent, NbSidebarComponent, NbTabsetModule, NbTabComponent, NbTabsetComponent, NbUserModule, NbUserComponent, NbActionsModule, NbActionComponent, NbActionsComponent, NbSearchModule, NbSearchService, NbSearchFieldComponent, NbSearchComponent, NbCheckboxComponent, NbCheckboxModule, NbBadgeComponent, NbBadgeModule, NbPopoverDirective, NbPopoverModule, NbPopoverComponent, NbContextMenuDirective, NbContextMenuComponent, NbContextMenuModule, NbProgressBarComponent, NbProgressBarModule, NbAlertComponent, NbAlertModule, NbChatComponent, NbChatMessageComponent, NbChatMessageMapComponent, NbChatMessageFileComponent, NbChatMessageQuoteComponent, NbChatMessageTextComponent, NbChatFormComponent, NbChatModule, NbChatOptions, NbChatAvatarComponent, NbChatCustomMessageDirective, NbSpinnerComponent, NbSpinnerDirective, NbSpinnerModule, NB_STEPPER, NbStepperComponent, NbStepComponent, NbStepperNextDirective, NbStepperPreviousDirective, NbStepperModule, NbAccordionComponent, NbAccordionItemComponent, NbAccordionItemBodyComponent, NbAccordionItemHeaderComponent, NbAccordionModule, NbButton, NbButtonComponent, NbButtonModule, NbButtonGroupComponent, NbButtonGroupModule, NbButtonToggleDirective, NbListComponent, NbListItemComponent, NbListModule, NbListPageTrackerDirective, NbScrollableContainerDimentions, NbInfiniteListDirective, NbInputDirective, NbInputModule, NbOverlayModule, patch, createContainer, NbOverlayService, NbAdjustment, NbPosition, NbAdjustableConnectedPositionStrategy, NbGlobalPositionStrategy, NbPositionBuilderService, NbPositionedContainerComponent, NbOverlayContainerComponent, NbTrigger, NbTriggerStrategyBase, NbClickTriggerStrategy, NbHoverTriggerStrategy, NbHintTriggerStrategy, NbFocusTriggerStrategy, NbNoopTriggerStrategy, NbTriggerStrategyBuilderService, NbPortalDirective, NbPortalOutletDirective, NbComponentPortal, NbOverlay, NbOverlayPositionBuilder, NbTemplatePortal, NbOverlayContainer, NbFlexibleConnectedPositionStrategy, NbPortalInjector, NbCdkMappingModule, NbGlobalLogicalPosition, NbGlobalPhysicalPosition, NbPositionHelper, NbDynamicOverlay, NbDynamicOverlayChange, NbDynamicOverlayHandler, NbPlatform, NbFocusMonitor, NbA11yModule, NbFocusTrap, NbFocusTrapFactoryService, NbCdkAdapterModule, NbBlockScrollStrategyAdapter, NbScrollStrategyOptions, NbOverlayContainerAdapter, NbScrollDispatcherAdapter, NbViewportRulerAdapter, NbDirectionality, NbBidiModule, NbCellDefDirective, NbHeaderCellDefDirective, NbFooterCellDefDirective, NB_SORT_HEADER_COLUMN_DEF, NbColumnDefDirective, NbHeaderCellDirective, NbFooterCellDirective, NbCellDirective, NbDataSource, NbDataRowOutletDirective, NbHeaderRowOutletDirective, NbFooterRowOutletDirective, NbNoDataRowOutletDirective, NbCellOutletDirective, NbHeaderRowDefDirective, NbFooterRowDefDirective, NbRowDefDirective, NbHeaderRowComponent, NbFooterRowComponent, NbRowComponent, NB_TABLE_TEMPLATE, NB_VIEW_REPEATER_STRATEGY, NB_COALESCED_STYLE_SCHEDULER, NB_TABLE_PROVIDERS, NbTable, NbTableModule, NB_DIALOG_CONFIG, NbDialogConfig, NbDialogRef, NbDialogService, NbDialogModule, NbToastrModule, NbToastRef, NbToastContainer, NbToastrContainerRegistry, NbToastrService, NbToast, NbToastComponent, NB_TOASTR_CONFIG, NbToastrConfig, NbToastrContainerComponent, NbTooltipModule, NbTooltipDirective, NbTooltipComponent, NbSelectModule, NbSelectLabelComponent, nbSelectFormFieldControlConfigFactory, NbSelectComponent, NbOptionModule, NbOptionComponent, NbOptionGroupComponent, NbOptionListComponent, NB_SELECT_INJECTION_TOKEN, NbAutocompleteModule, NbAutocompleteComponent, NbAutocompleteDirective, NbWindowModule, NbWindowService, NbWindowRef, NbWindowState, NB_WINDOW_DEFAULT_BUTTONS_CONFIG, NbWindowConfig, NB_WINDOW_CONTENT, NB_WINDOW_CONFIG, NB_WINDOW_CONTEXT, NbWindowComponent, NbWindowsContainerComponent, NbTimepickerModule, NB_TIME_PICKER_CONFIG, NB_DEFAULT_TIMEPICKER_LOCALIZATION_CONFIG, NbTimePickerComponent, NbTimePickerDirective, NbDatepickerModule, NbDatepickerAdapter, NbDatepicker, NB_DATE_ADAPTER, NB_DATE_SERVICE_OPTIONS, NbDatepickerDirective, NbDateAdapterService, NbRangeAdapterService, NbDateTimeAdapterService, NbDatepickerContainerComponent, NbBasePicker, NbBasePickerComponent, NbDatepickerComponent, NbRangepickerComponent, NbDialogContainerComponent, NbRadioModule, NbRadioGroupComponent, NbRadioComponent, NbTagModule, NbTagComponent, NbTagListComponent, NbTagInputDirective, NbTreeGridModule, NbTreeGridComponent, NB_ROW_DOUBLE_CLICK_DELAY, NbTreeGridRowComponent, NbTreeGridHeaderRowComponent, NbTreeGridFooterRowComponent, NB_TREE_GRID, NbSortDirection, NbSortDirective, NbSortHeaderIconDirective, NbSortIconComponent, NbSortHeaderComponent, NbTreeGridRowToggleComponent, NbTreeGridColumnDefDirective, NbTreeGridCellDirective, NbTreeGridHeaderCellDirective, NbTreeGridFooterCellDirective, NbTreeGridRowDefDirective, NbTreeGridHeaderRowDefDirective, NbTreeGridFooterRowDefDirective, NbTreeGridCellDefDirective, NbTreeGridHeaderCellDefDirective, NbTreeGridFooterCellDefDirective, NbFilterDirective, NbFilterInputDirective, NbTreeGridRowToggleDirective, NB_DEFAULT_ROW_LEVEL, NbTreeGridPresentationNode, NbTreeGridDataSource, NbTreeGridDataSourceBuilder, NbTreeGridDataService, NbTreeGridFilterService, NbTreeGridService, NbTreeGridSortService, NbColumnsService, NbIconModule, NbIconComponent, NbFontIcon, NbSvgIcon, NbIconPackType, NbIconDefinition, NbIconLibraries, NbToggleModule, NbToggleComponent, NbFormFieldModule, NbFormFieldComponent, NbPrefixDirective, NbSuffixDirective, NbFormFieldControl, NbFormFieldControlConfig }; //# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":null,"metadata":{},"sourceType":"module"}