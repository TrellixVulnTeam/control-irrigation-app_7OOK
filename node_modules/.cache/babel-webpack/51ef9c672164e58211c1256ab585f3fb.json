{"ast":null,"code":"import { Clima } from 'src/app/model/Clima';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/clima.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@nebular/theme\";\nimport * as i4 from \"ng2-smart-table\";\nexport let ClimaComponent = /*#__PURE__*/(() => {\n  class ClimaComponent {\n    constructor(climaService, router, routeActive) {\n      this.climaService = climaService;\n      this.router = router;\n      this.routeActive = routeActive;\n      this.settings = {\n        add: {\n          addButtonContent: '<i class=\"nb-plus\"></i>',\n          createButtonContent: '<i class=\"nb-checkmark\"></i>',\n          cancelButtonContent: '<i class=\"nb-close\"></i>',\n          confirmCreate: true\n        },\n        edit: {\n          editButtonContent: '<i class=\"nb-edit\"></i>',\n          saveButtonContent: '<i class=\"nb-checkmark\"></i>',\n          cancelButtonContent: '<i class=\"nb-close\"></i>',\n          confirmCreate: true\n        },\n        delete: {\n          deleteButtonContent: '<i class=\"nb-trash\"></i>',\n          confirmDelete: true\n        },\n        columns: {\n          idClima: {\n            title: 'ID Clima',\n            type: 'number',\n            readonly: true,\n            editable: false\n          },\n          dataClima: {\n            title: 'Data Clima',\n            type: 'date'\n          },\n          temperaturaMaxima: {\n            title: 'Temperatura Máxima',\n            type: 'number'\n          },\n          temperaturaMinima: {\n            title: 'Temperatura Mínima',\n            type: 'number'\n          },\n          temperaturaMedia: {\n            title: 'Temperatura Média',\n            type: 'number'\n          },\n          umidadeRelativa: {\n            title: 'Umidade Relativa',\n            type: 'number'\n          },\n          velocidadeVento: {\n            title: 'Velecidade do Vento',\n            type: 'number'\n          },\n          precipitacao: {\n            title: 'Precipitação Total',\n            type: 'number'\n          },\n          radiacaoMedia: {\n            title: 'Radiação',\n            type: 'number'\n          }\n        }\n      };\n      this.clima = new Clima();\n      this.idFazenda = +JSON.parse(localStorage.getItem('idFazenda'));\n    }\n\n    ngOnInit() {\n      let idFazenda = +JSON.parse(localStorage.getItem('idFazenda'));\n      this.climaService.getClimaListByFazenda(idFazenda).subscribe(data => {\n        //this.source.load(data);\n        this.climas = data; //this.total = data.totalElements;\n      });\n    }\n\n    excluirClima(event) {\n      if (window.confirm('Tem certeza de que deseja excluir?')) {\n        this.climaService.deletarClima(event.data.idClima).subscribe(data => {// console.log(\"Retorno do método delete : \" + data);\n          //this.culturas.splice(index, 1);/*Remover da tela*/\n          // this.usuarioService.getStudentList().subscribe(data => {\n          //   this.students = data;\n          // });\n        });\n        event.confirm.resolve();\n      } else {\n        event.confirm.reject();\n      }\n    }\n\n    novo() {\n      this.clima = new Clima();\n    }\n\n    onCreateConfirm(event) {\n      console.log(\"Create Event In Console\");\n      console.log(event);\n    }\n\n    salvarClima(event) {\n      console.log(\"Edit Event In Console\");\n      console.log(event);\n\n      if (this.clima.idClima != null && this.clima.idClima.toString().trim() != null) {\n        /* Atualizando ou Editando*/\n        console.log(this.clima);\n        this.climaService.updateClima(this.clima).subscribe(data => {\n          this.novo();\n          this.router.navigate(['climaList']);\n          console.info(\"Clima Atualizado: \" + data);\n        });\n      } else {\n        event.newData.idFazenda = this.idFazenda;\n        console.log(\"Create Event In Console\");\n        console.log(event);\n        this.climaService.salvarClima(event.newData).subscribe(data => {\n          this.novo();\n          console.info(\"Gravou Clima: \" + data);\n        });\n        event.confirm.resolve(event.newData);\n      }\n    }\n\n    editarClima(event) {\n      console.log(\"Edit Event In Console\");\n      console.log(event);\n\n      if (this.clima.idClima != null && this.clima.idClima.toString().trim() != null) {\n        /* Atualizando ou Editando*/\n        console.log(this.clima);\n        this.climaService.updateClima(this.clima).subscribe(data => {\n          this.novo();\n          this.router.navigate(['climaList']);\n          console.info(\"Clima Atualizado: \" + data);\n        });\n      }\n    }\n\n  }\n\n  ClimaComponent.ɵfac = function ClimaComponent_Factory(t) {\n    return new (t || ClimaComponent)(i0.ɵɵdirectiveInject(i1.ClimaService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n\n  ClimaComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ClimaComponent,\n    selectors: [[\"app-clima\"]],\n    decls: 5,\n    vars: 2,\n    consts: [[3, \"settings\", \"source\", \"editConfirm\", \"createConfirm\", \"deleteConfirm\"]],\n    template: function ClimaComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"nb-card\");\n        i0.ɵɵelementStart(1, \"nb-card-header\");\n        i0.ɵɵtext(2, \" Climas \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"nb-card-body\");\n        i0.ɵɵelementStart(4, \"ng2-smart-table\", 0);\n        i0.ɵɵlistener(\"editConfirm\", function ClimaComponent_Template_ng2_smart_table_editConfirm_4_listener($event) {\n          return ctx.onEditConfirm($event);\n        })(\"createConfirm\", function ClimaComponent_Template_ng2_smart_table_createConfirm_4_listener($event) {\n          return ctx.salvarClima($event);\n        })(\"deleteConfirm\", function ClimaComponent_Template_ng2_smart_table_deleteConfirm_4_listener($event) {\n          return ctx.excluirClima($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"settings\", ctx.settings)(\"source\", ctx.climas);\n      }\n    },\n    directives: [i3.NbCardComponent, i3.NbCardHeaderComponent, i3.NbCardBodyComponent, i4.Ng2SmartTableComponent],\n    styles: [\"\"]\n  });\n  return ClimaComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}