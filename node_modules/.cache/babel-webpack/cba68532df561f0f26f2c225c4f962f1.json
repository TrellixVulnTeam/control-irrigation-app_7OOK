{"ast":null,"code":"import { CheckboxSelectAllComponent } from './../../../../checkbox.component';\nimport { Irrigacao } from 'src/app/model/Irrigacao';\nimport { SmartTableDatepickerComponent, SmartTableDatepickerRenderComponent } from 'src/app/smart-table-datepicker/smart-table-datepicker.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/irrigacao.service\";\nimport * as i2 from \"./../../../../service/parcela.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@nebular/theme\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"ng2-smart-table\";\n\nfunction IrrigacaoComponent_option_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const parcela_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", parcela_r1.idParcela);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(parcela_r1.nomeParcela);\n  }\n}\n\nexport let IrrigacaoComponent = /*#__PURE__*/(() => {\n  class IrrigacaoComponent {\n    constructor(irrigacaoService, parcelaService, router) {\n      this.irrigacaoService = irrigacaoService;\n      this.parcelaService = parcelaService;\n      this.router = router;\n      this.irrigacao = new Irrigacao();\n      this.idFazenda = +JSON.parse(localStorage.getItem('idFazenda'));\n      this.settings = {\n        add: {\n          addButtonContent: '<i class=\"nb-plus\"></i>',\n          createButtonContent: '<i class=\"nb-checkmark\"></i>',\n          cancelButtonContent: '<i class=\"nb-close\"></i>',\n          confirmCreate: true\n        },\n        edit: {\n          editButtonContent: '<i class=\"nb-edit\"></i>',\n          saveButtonContent: '<i class=\"nb-checkmark\"></i>',\n          cancelButtonContent: '<i class=\"nb-close\"></i>',\n          confirmSave: true\n        },\n        delete: {\n          deleteButtonContent: '<i class=\"nb-trash\"></i>',\n          confirmDelete: true\n        },\n        columns: {\n          dataIrrigacao: {\n            title: 'Data Irrigação',\n            type: 'date',\n            renderComponent: SmartTableDatepickerRenderComponent,\n            width: '250px',\n            filter: false,\n            sortDirection: 'desc',\n            editor: {\n              type: 'custom',\n              component: SmartTableDatepickerComponent\n            }\n          },\n          idParcela: {\n            title: 'Parcela',\n            type: 'number'\n          },\n          quantidade: {\n            title: 'Quantidade',\n            type: 'number'\n          },\n          fertirrigacao: {\n            title: 'Fertirrigação',\n            type: 'checkbox',\n            renderComponent: CheckboxSelectAllComponent\n          }\n        }\n      };\n    }\n\n    ngOnInit() {\n      this.parcelaService.getParcelaList(this.idFazenda).subscribe(data => {\n        this.parcelas = data;\n      });\n    }\n\n    novo() {\n      this.irrigacao = new Irrigacao();\n    }\n\n    excluirIrrigacao(event) {\n      if (window.confirm('Tem certeza de que deseja excluir?')) {\n        this.irrigacaoService.deletarIrrigacao(event.data.idIrrigacao).subscribe(data => {});\n        event.confirm.resolve();\n      } else {\n        event.confirm.reject();\n      }\n    }\n\n    salvarIrrigacao(event) {\n      if (this.irrigacao.idIrrigacao != null && this.irrigacao.idIrrigacao.toString().trim() != null) {\n        /* Atualizando ou Editando*/\n        this.irrigacaoService.updateIrrigacao(this.irrigacao).subscribe(data => {\n          this.novo();\n          this.router.navigate(['irrigacaoList']);\n        });\n      } else {\n        event.newData.idFazenda = this.idFazenda;\n        this.irrigacaoService.salvarIrrigacao(event.newData).subscribe(data => {\n          this.novo();\n        });\n        event.confirm.resolve(event.newData);\n      }\n    }\n\n    onEditConfirm(event) {\n      this.irrigacaoService.updateIrrigacao(event.newData).subscribe(data => {\n        this.novo();\n      });\n      event.confirm.resolve(event.newData);\n    }\n\n    buscaParcela() {\n      this.irrigacaoService.getIrrrigacaoListByParcela(this.parcelaSelecionada).subscribe(data => {\n        this.irrigacoes = data;\n      });\n    }\n\n  }\n\n  IrrigacaoComponent.ɵfac = function IrrigacaoComponent_Factory(t) {\n    return new (t || IrrigacaoComponent)(i0.ɵɵdirectiveInject(i1.IrrigacaoService), i0.ɵɵdirectiveInject(i2.ParcelaService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n\n  IrrigacaoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: IrrigacaoComponent,\n    selectors: [[\"app-irrigacao\"]],\n    decls: 16,\n    vars: 4,\n    consts: [[1, \"form-inline\"], [1, \"form-group\", \"mx-sm-3\", \"mb-2\"], [\"for\", \"parcelaSelecionada\"], [\"type\", \"number\", \"id\", \"parcelaSelecionada\", \"required\", \"fase\", \"name\", \"parcelaSelecionada\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"0\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", \"mb-2\", 3, \"click\"], [3, \"settings\", \"source\", \"editConfirm\", \"createConfirm\", \"deleteConfirm\"], [3, \"ngValue\"]],\n    template: function IrrigacaoComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"nb-card\");\n        i0.ɵɵelementStart(1, \"nb-card-header\");\n        i0.ɵɵelementStart(2, \"h1\");\n        i0.ɵɵtext(3, \"Irriga\\u00E7\\u00E3o\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"form\", 0);\n        i0.ɵɵelementStart(5, \"div\", 1);\n        i0.ɵɵelementStart(6, \"label\", 2);\n        i0.ɵɵtext(7, \"Selecione a Parcela\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"select\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function IrrigacaoComponent_Template_select_ngModelChange_8_listener($event) {\n          return ctx.parcelaSelecionada = $event;\n        });\n        i0.ɵɵelementStart(9, \"option\", 4);\n        i0.ɵɵtext(10, \"--Selecione--\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(11, IrrigacaoComponent_option_11_Template, 2, 2, \"option\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function IrrigacaoComponent_Template_button_click_12_listener() {\n          return ctx.buscaParcela();\n        });\n        i0.ɵɵtext(13, \"Buscar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"nb-card-body\");\n        i0.ɵɵelementStart(15, \"ng2-smart-table\", 7);\n        i0.ɵɵlistener(\"editConfirm\", function IrrigacaoComponent_Template_ng2_smart_table_editConfirm_15_listener($event) {\n          return ctx.onEditConfirm($event);\n        })(\"createConfirm\", function IrrigacaoComponent_Template_ng2_smart_table_createConfirm_15_listener($event) {\n          return ctx.salvarIrrigacao($event);\n        })(\"deleteConfirm\", function IrrigacaoComponent_Template_ng2_smart_table_deleteConfirm_15_listener($event) {\n          return ctx.excluirIrrigacao($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngModel\", ctx.parcelaSelecionada);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.parcelas);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"settings\", ctx.settings)(\"source\", ctx.irrigacoes);\n      }\n    },\n    directives: [i4.NbCardComponent, i4.NbCardHeaderComponent, i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.NgForm, i5.SelectControlValueAccessor, i5.RequiredValidator, i5.NgControlStatus, i5.NgModel, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i6.NgForOf, i4.NbCardBodyComponent, i7.Ng2SmartTableComponent],\n    styles: [\"\"]\n  });\n  return IrrigacaoComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}